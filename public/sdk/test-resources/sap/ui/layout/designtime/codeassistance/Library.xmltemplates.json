{"!version":"1.10.0","XML_KEYWORDS":["sap.ui.layout.BlockLayout","sap.ui.layout.BlockLayoutCell","sap.ui.layout.BlockLayoutRow","sap.ui.layout.DynamicSideContent","sap.ui.layout.FixFlex","sap.ui.layout.Grid","sap.ui.layout.HorizontalLayout","sap.ui.layout.PaneContainer","sap.ui.layout.ResponsiveFlowLayout","sap.ui.layout.ResponsiveSplitter","sap.ui.layout.SplitPane","sap.ui.layout.Splitter","sap.ui.layout.VerticalLayout","sap.ui.layout.form.Form","sap.ui.layout.form.FormContainer","sap.ui.layout.form.FormElement","sap.ui.layout.form.FormLayout","sap.ui.layout.form.GridLayout","sap.ui.layout.form.ResponsiveGridLayout","sap.ui.layout.form.ResponsiveLayout","sap.ui.layout.form.SimpleForm"],"XML_TEMPLATES":[{"template":"<BlockLayout\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tType=\"\"\n\tbusy=\"false\"\n\tbusyIndicatorDelay=\"1000\"\n\tvisible=\"true\"\n\tfieldGroupIds=\"[]\"\n\tbackground=\"Default\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tvalidateFieldGroup=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Control -->\n\t<content><\/content><!-- sap.ui.layout.BlockLayoutRow -->\n<\/BlockLayout>\n","Deprecated":false,"helpDescription":"The BlockLayout is used to display several objects in a section-based manner. It features horizontal and vertical subdivisions, and full-width banners seen frequently in contemporary web design. Background colors are attached directly to these \u201cblocks\u201d of the layout. Special full-width sections of the BlockLayout allow horizontal scrolling through a set of blocks.\nExample use cases are SAP HANA Cloud Integration and the SAPUI5 Demo Kit. In SAP HANA Cloud Integration the BlockLayout serves as a banner-like presentation of illustrative icons with associated text. By placing pictorial and textual elements side by side in different blocks, a relation of content is established. In the SAPUI5 Demo Kit the BlockLayout serves as a flexible container for diverging content, such as headings, explanatory texts, code snippets, remarks, and examples.\nThe BlockLayout comes in three types: Layout only (default), Bright, and Mixed background colors.","DeprecatedInfo":{"isDeprecated":false},"description":"sap.ui.layout.BlockLayout","Experimental":false,"prefix":"BlockLayout","name":"sap.ui.layout.BlockLayout","constructorDescription":"Constructor for a new BlockLayout.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getBackground background} : sap.ui.layout.BlockBackgroundType (default: Default)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.layout.BlockLayoutRow[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"<BlockLayoutCell\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tType=\"\"\n\tbusy=\"false\"\n\tbusyIndicatorDelay=\"1000\"\n\tvisible=\"true\"\n\tfieldGroupIds=\"[]\"\n\ttitle=\"\"\n\ttitleAlignment=\"Begin\"\n\ttitleLevel=\"Auto\"\n\twidth=\"0\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tvalidateFieldGroup=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Control -->\n\t<content><\/content><!-- sap.ui.core.Control -->\n<\/BlockLayoutCell>\n","Deprecated":false,"helpDescription":"The BlockLayoutCell is used as an aggregation of the BlockLayoutRow. It contains Controls.\nThe BlockLayoutCell should be used only as aggregation of the BlockLayoutRow.","DeprecatedInfo":{"isDeprecated":false},"description":"sap.ui.layout.BlockLayoutCell","Experimental":false,"prefix":"BlockLayoutCell","name":"sap.ui.layout.BlockLayoutCell","constructorDescription":"Constructor for a new BlockLayoutCell.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getTitleAlignment titleAlignment} : sap.ui.core.HorizontalAlign (default: Begin)<\/li>\n<li>{@link #getTitleLevel titleLevel} : sap.ui.core.TitleLevel (default: Auto)<\/li>\n<li>{@link #getWidth width} : int (default: 0)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"<BlockLayoutRow\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tType=\"\"\n\tbusy=\"false\"\n\tbusyIndicatorDelay=\"1000\"\n\tvisible=\"true\"\n\tfieldGroupIds=\"[]\"\n\tscrollable=\"false\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tvalidateFieldGroup=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Control -->\n\t<content><\/content><!-- sap.ui.layout.BlockLayoutCell -->\n<\/BlockLayoutRow>\n","Deprecated":false,"helpDescription":"The BlockLayoutRow is used as an aggregation to the BlockLayout. It aggregates Block Layout  cells.\nThe BlockLayoutRow has 2 rendering modes - scrollable and non scrollable.","DeprecatedInfo":{"isDeprecated":false},"description":"sap.ui.layout.BlockLayoutRow","Experimental":false,"prefix":"BlockLayoutRow","name":"sap.ui.layout.BlockLayoutRow","constructorDescription":"Constructor for a new BlockLayoutRow.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getScrollable scrollable} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.layout.BlockLayoutCell[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"<DynamicSideContent\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tType=\"\"\n\tbusy=\"false\"\n\tbusyIndicatorDelay=\"1000\"\n\tvisible=\"true\"\n\tfieldGroupIds=\"[]\"\n\tshowSideContent=\"true\"\n\tshowMainContent=\"true\"\n\tsideContentVisibility=\"ShowAboveS\"\n\tsideContentFallDown=\"OnMinimumWidth\"\n\tequalSplit=\"false\"\n\tcontainerQuery=\"false\"\n\tsideContentPosition=\"End\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tvalidateFieldGroup=\"\"\n\tbreakpointChanged=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Control -->\n\t<mainContent><\/mainContent><!-- sap.ui.core.Control -->\n\t<sideContent><\/sideContent><!-- sap.ui.core.Control -->\n<\/DynamicSideContent>\n","Deprecated":false,"helpDescription":"The DynamicSideContent control allows additional (side) content to be displayed alongside or below the main\ncontent, within the container the control is used in. There are different size ratios between the main and\nthe side content for the different breakpoints. The side content position (alongside/below the main content)\nand visibility (visible/hidden) can be configured per breakpoint. There are 4 predefined breakpoints:\n- Screen width > 1440 px (XL breakpoint)\n- Screen width <= 1440 px (L breakpoint)\n- Main content width <= 600 px (M breakpoint)\n- Screen width <= 720 px (S breakpoint)","DeprecatedInfo":{"isDeprecated":false},"description":"sap.ui.layout.DynamicSideContent","Experimental":false,"prefix":"DynamicSideContent","name":"sap.ui.layout.DynamicSideContent","constructorDescription":"Constructor for a new DynamicSideContent.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowSideContent showSideContent} : boolean (default: true)<\/li>\n<li>{@link #getShowMainContent showMainContent} : boolean (default: true)<\/li>\n<li>{@link #getSideContentVisibility sideContentVisibility} : sap.ui.layout.SideContentVisibility (default: ShowAboveS)<\/li>\n<li>{@link #getSideContentFallDown sideContentFallDown} : sap.ui.layout.SideContentFallDown (default: OnMinimumWidth)<\/li>\n<li>{@link #getEqualSplit equalSplit} : boolean (default: false)<\/li>\n<li>{@link #getContainerQuery containerQuery} : boolean (default: false)<\/li>\n<li>{@link #getSideContentPosition sideContentPosition} : sap.ui.layout.SideContentPosition (default: End)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getMainContent mainContent} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getSideContent sideContent} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:breakpointChanged breakpointChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"<FixFlex\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tType=\"\"\n\tbusy=\"false\"\n\tbusyIndicatorDelay=\"1000\"\n\tvisible=\"true\"\n\tfieldGroupIds=\"[]\"\n\tvertical=\"true\"\n\tfixFirst=\"true\"\n\tfixContentSize=\"auto\"\n\tminFlexSize=\"0\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tvalidateFieldGroup=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Control -->\n\t<fixContent><\/fixContent><!-- sap.ui.core.Control -->\n\t<flexContent><\/flexContent><!-- sap.ui.core.Control -->\n<\/FixFlex>\n","Deprecated":false,"helpDescription":"The FixFlex control builds the container for a layout with a fixed and a flexible part. The flexible container adapts its size to the fix container. The fix container can hold any number of controls, while the flexible container can hold only one.\n\nIn order for the FixFlex to stretch properly, the parent element, in which the control is placed, needs to have a specified height or needs to have an absolute position.\n\nWarning: Avoid nesting FixFlex in other flexbox based layout controls (FixFlex, FlexBox, Hbox, Vbox). Otherwise contents may be not accessible or multiple scrollbars can appear.\n\nNote: If the child control of the flex or the fix container has width/height bigger than the container itself, the child control will be cropped in the view. If minFlexSize is set, then a scrollbar is shown in the flexible part, depending on the vertical property.","DeprecatedInfo":{"isDeprecated":false},"description":"sap.ui.layout.FixFlex","Experimental":false,"prefix":"FixFlex","name":"sap.ui.layout.FixFlex","constructorDescription":"Constructor for a new FixFlex.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVertical vertical} : boolean (default: true)<\/li>\n<li>{@link #getFixFirst fixFirst} : boolean (default: true)<\/li>\n<li>{@link #getFixContentSize fixContentSize} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getMinFlexSize minFlexSize} : int (default: 0)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getFixContent fixContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getFlexContent flexContent} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"<Grid\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tType=\"\"\n\tbusy=\"false\"\n\tbusyIndicatorDelay=\"1000\"\n\tvisible=\"true\"\n\tfieldGroupIds=\"[]\"\n\twidth=\"100%\"\n\tvSpacing=\"1\"\n\thSpacing=\"1\"\n\tposition=\"Left\"\n\tdefaultSpan=\"XL3 L3 M6 S12\"\n\tdefaultIndent=\"XL0 L0 M0 S0\"\n\tcontainerQuery=\"false\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tvalidateFieldGroup=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Control -->\n\t<content><\/content><!-- sap.ui.core.Control -->\n<\/Grid>\n","Deprecated":false,"helpDescription":"The Grid control is a layout which positions its child controls in a 12 column flow layout. Its children can be specified to take on a variable amount of columns depending on available screen size. With this control it is possible to achieve flexible layouts and line-breaks for extra large-, large-, medium- and small-sized screens, such as large desktop, desktop, tablet, and mobile. The Grid control's width can be percentage- or pixel-based and the spacing between its columns can be set to various pre-defined values.","DeprecatedInfo":{"isDeprecated":false},"description":"sap.ui.layout.Grid","Experimental":false,"prefix":"Grid","name":"sap.ui.layout.Grid","constructorDescription":"Constructor for a new Grid.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getVSpacing vSpacing} : float (default: 1)<\/li>\n<li>{@link #getHSpacing hSpacing} : float (default: 1)<\/li>\n<li>{@link #getPosition position} : sap.ui.layout.GridPosition (default: Left)<\/li>\n<li>{@link #getDefaultSpan defaultSpan} : sap.ui.layout.GridSpan (default: XL3 L3 M6 S12)<\/li>\n<li>{@link #getDefaultIndent defaultIndent} : sap.ui.layout.GridIndent (default: XL0 L0 M0 S0)<\/li>\n<li>{@link #getContainerQuery containerQuery} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"<HorizontalLayout\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tType=\"\"\n\tbusy=\"false\"\n\tbusyIndicatorDelay=\"1000\"\n\tvisible=\"true\"\n\tfieldGroupIds=\"[]\"\n\tallowWrapping=\"false\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tvalidateFieldGroup=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Control -->\n\t<content><\/content><!-- sap.ui.core.Control -->\n<\/HorizontalLayout>\n","Deprecated":false,"helpDescription":"A layout that provides support for horizontal alignment of controls","DeprecatedInfo":{"isDeprecated":false},"description":"sap.ui.layout.HorizontalLayout","Experimental":false,"prefix":"HorizontalLayout","name":"sap.ui.layout.HorizontalLayout","constructorDescription":"Constructor for a new HorizontalLayout.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAllowWrapping allowWrapping} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"<PaneContainer\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tType=\"\"\n\torientation=\"Horizontal\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Control -->\n\t<panes><\/panes><!-- sap.ui.core.Element -->\n<\/PaneContainer>\n","Deprecated":false,"helpDescription":"PaneContainer is an abstraction of Splitter\nCould be used as an aggregation of ResponsiveSplitter or other PaneContainers.","DeprecatedInfo":{"isDeprecated":false},"description":"sap.ui.layout.PaneContainer","Experimental":false,"prefix":"PaneContainer","name":"sap.ui.layout.PaneContainer","constructorDescription":"Constructor for a new PaneContainer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getOrientation orientation} : sap.ui.core.Orientation (default: Horizontal)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getPanes panes} : sap.ui.core.Element[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well."},{"template":"<ResponsiveFlowLayout\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tType=\"\"\n\tbusy=\"false\"\n\tbusyIndicatorDelay=\"1000\"\n\tvisible=\"true\"\n\tfieldGroupIds=\"[]\"\n\tresponsive=\"true\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tvalidateFieldGroup=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Control -->\n\t<content><\/content><!-- sap.ui.core.Control -->\n<\/ResponsiveFlowLayout>\n","Deprecated":false,"helpDescription":"This is a layout where several controls can be added. These controls are blown up to fit in an entire row. If the window resizes, the controls are moved between the rows and resized again.","DeprecatedInfo":{"isDeprecated":false},"description":"sap.ui.layout.ResponsiveFlowLayout","Experimental":false,"prefix":"ResponsiveFlowLayout","name":"sap.ui.layout.ResponsiveFlowLayout","constructorDescription":"Constructor for a new ResponsiveFlowLayout.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getResponsive responsive} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"<ResponsiveSplitter\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tType=\"\"\n\tbusy=\"false\"\n\tbusyIndicatorDelay=\"1000\"\n\tvisible=\"true\"\n\tfieldGroupIds=\"[]\"\n\twidth=\"100%\"\n\theight=\"100%\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tvalidateFieldGroup=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Control -->\n\t<rootPaneContainer><\/rootPaneContainer><!-- sap.ui.layout.PaneContainer -->\n\t<_pages><\/_pages><!-- sap.ui.layout.ResponsiveSplitterPage -->\n<\/ResponsiveSplitter>\n","Deprecated":false,"helpDescription":"ResponsiveSplitter is a control that enables responsiveness of normal Splitter.\nResponsiveSplitter consists of PaneContainers that further  agregate other PaneContainers and SplitPanes.\nSplitPanes can be moved to the pagination when a minimum width of their parent is reached.","DeprecatedInfo":{"isDeprecated":false},"description":"sap.ui.layout.ResponsiveSplitter","Experimental":false,"prefix":"ResponsiveSplitter","name":"sap.ui.layout.ResponsiveSplitter","constructorDescription":"Constructor for a new ResponsiveSplitter.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getRootPaneContainer rootPaneContainer} : sap.ui.layout.PaneContainer (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"<SplitPane\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tType=\"\"\n\tdemandPane=\"true\"\n\trequiredParentWidth=\"800\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Control -->\n\t<content><\/content><!-- sap.ui.core.Control -->\n<\/SplitPane>\n","Deprecated":false,"helpDescription":"SplitPane is a container of a single control.\nCould be used as an aggregation of a PaneContainer.","DeprecatedInfo":{"isDeprecated":false},"description":"sap.ui.layout.SplitPane","Experimental":false,"prefix":"SplitPane","name":"sap.ui.layout.SplitPane","constructorDescription":"Constructor for a new SplitPane.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDemandPane demandPane} : boolean (default: true)<\/li>\n<li>{@link #getRequiredParentWidth requiredParentWidth} : int (default: 800)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well."},{"template":"<Splitter\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tType=\"\"\n\tbusy=\"false\"\n\tbusyIndicatorDelay=\"1000\"\n\tvisible=\"true\"\n\tfieldGroupIds=\"[]\"\n\torientation=\"Horizontal\"\n\twidth=\"100%\"\n\theight=\"100%\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tvalidateFieldGroup=\"\"\n\tresize=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Control -->\n\t<contentAreas><\/contentAreas><!-- sap.ui.core.Control -->\n<\/Splitter>\n","Deprecated":false,"helpDescription":"\nA layout that contains several content areas. The content that is added to the splitter should contain LayoutData of the type SplitterLayoutData that defines its size and size contraints.\n\nBy adding or changing SplitterLayoutData to the controls that make up the content areas, the size can be changed programatically. Additionally the contents can be made non-resizable individually and a minimal size (in px) can be set.\n\nThe orientation of the splitter can be set to horizontal (default) or vertical. All content areas of the splitter will be arranged in that way. In order to split vertically and horizontally at the same time, Splitters need to be nested.\n\nThe splitter bars can be focused to enable resizing of the content areas via keyboard. The contents size can be manipulated when the splitter bar is focused and Shift-Left/Down/Right/Up are pressed. When Shift-Home/End are pressed, the contents are set their minimum or maximum size (keep in mind though, that resizing an auto-size content-area next to another auto-size one might lead to the effect that the former does not take its maximum size but only the maximum size before recalculating auto sizes).\n\nThe splitter bars used for resizing the contents by the user can be set to different widths (or heights in vertical mode) and the splitter will automatically resize the other contents accordingly. In case the splitter bar is resized after the splitter has rendered, a manual resize has to be triggered by invoking triggerResize() on the Splitter.","DeprecatedInfo":{"isDeprecated":false},"description":"sap.ui.layout.Splitter","Experimental":false,"prefix":"Splitter","name":"sap.ui.layout.Splitter","constructorDescription":"Constructor for a new Splitter.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getOrientation orientation} : sap.ui.core.Orientation (default: Horizontal)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContentAreas contentAreas} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:resize resize} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"<VerticalLayout\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tType=\"\"\n\tbusy=\"false\"\n\tbusyIndicatorDelay=\"1000\"\n\tvisible=\"true\"\n\tfieldGroupIds=\"[]\"\n\twidth=\"\"\n\tenabled=\"true\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tvalidateFieldGroup=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Control -->\n\t<content><\/content><!-- sap.ui.core.Control -->\n<\/VerticalLayout>\n","Deprecated":false,"helpDescription":"In this layout the content controls are rendered one below the other.","DeprecatedInfo":{"isDeprecated":false},"description":"sap.ui.layout.VerticalLayout","Experimental":false,"prefix":"VerticalLayout","name":"sap.ui.layout.VerticalLayout","constructorDescription":"Constructor for a new VerticalLayout.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"<Form\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tType=\"\"\n\tbusy=\"false\"\n\tbusyIndicatorDelay=\"1000\"\n\tvisible=\"true\"\n\tfieldGroupIds=\"[]\"\n\twidth=\"\"\n\teditable=\"false\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tvalidateFieldGroup=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Control -->\n\t<formContainers><\/formContainers><!-- sap.ui.layout.form.FormContainer -->\n\t<title><\/title><!-- sap.ui.core.Title -->\n\t<toolbar><\/toolbar><!-- sap.ui.core.Toolbar -->\n\t<layout><\/layout><!-- sap.ui.layout.form.FormLayout -->\n<\/Form>\n","Deprecated":false,"helpDescription":"Form control.\nA <code>Form<\/code> is structured into <code>FormContainers<\/code>. Each <code>FormContainer<\/code> consists of <code>FormElements<\/code>.\nThe <code>FormElements<\/code> consists of a label and the form fields.\nA <code>Form<\/code> doesn't render its content by itself. The rendering is done by the assigned <code>FormLayout<\/code>.\nThis is so that the rendering can be adopted to new UI requirements without changing the Form itself.\n\nFor the content of a <code>Form<\/code>, <code>VariantLayoutData<\/code> are supported to allow simple switching of the <code>FormLayout<\/code>.\n<code>LayoutData<\/code> on the content can be used to overwrite the default layout of the code>Form<\/code>.\n\n<b>Note:<\/b> Do not put any layout controls into the <code>FormElements<\/code>. This could destroy the visual layout,\nkeyboard support and screen-reader support.","DeprecatedInfo":{"isDeprecated":false},"description":"sap.ui.layout.form.Form","Experimental":false,"prefix":"Form","name":"sap.ui.layout.form.Form","constructorDescription":"Constructor for a new sap.ui.layout.form.Form.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getEditable editable} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getFormContainers formContainers} : sap.ui.layout.form.FormContainer[] (default)<\/li>\n<li>{@link #getTitle title} : sap.ui.core.Title|string<\/li>\n<li>{@link #getToolbar toolbar} : sap.ui.core.Toolbar<\/li>\n<li>{@link #getLayout layout} : sap.ui.layout.form.FormLayout<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"<FormContainer\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tType=\"\"\n\texpanded=\"true\"\n\texpandable=\"false\"\n\tvisible=\"true\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Control -->\n\t<formElements><\/formElements><!-- sap.ui.layout.form.FormElement -->\n\t<title><\/title><!-- sap.ui.core.Title -->\n\t<toolbar><\/toolbar><!-- sap.ui.core.Toolbar -->\n<\/FormContainer>\n","Deprecated":false,"helpDescription":"A <code>FormContainer<\/code> represents a group inside a <code>Form<\/code>. It consists of <code>FormElements<\/code>.\nThe rendering of the <code>FormContainer<\/code> is done by the <code>FormLayout<\/code> assigned to the <code>Form<\/code>.","DeprecatedInfo":{"isDeprecated":false},"description":"sap.ui.layout.form.FormContainer","Experimental":false,"prefix":"FormContainer","name":"sap.ui.layout.form.FormContainer","constructorDescription":"Constructor for a new sap.ui.layout.form.FormContainer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getExpanded expanded} : boolean (default: true)<\/li>\n<li>{@link #getExpandable expandable} : boolean (default: false)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getFormElements formElements} : sap.ui.layout.form.FormElement[] (default)<\/li>\n<li>{@link #getTitle title} : sap.ui.core.Title|string<\/li>\n<li>{@link #getToolbar toolbar} : sap.ui.core.Toolbar<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well."},{"template":"<FormElement\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tType=\"\"\n\tvisible=\"true\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Control -->\n\t<label><\/label><!-- sap.ui.core.Label -->\n\t<fields><\/fields><!-- sap.ui.core.Control -->\n<\/FormElement>\n","Deprecated":false,"helpDescription":"A <code>FormElement<\/code> represents a row in a <code>FormContainer<\/code>.\nA <code>FormElement<\/code> is a combination of one label and different controls associated to this label.","DeprecatedInfo":{"isDeprecated":false},"description":"sap.ui.layout.form.FormElement","Experimental":false,"prefix":"FormElement","name":"sap.ui.layout.form.FormElement","constructorDescription":"Constructor for a new sap.ui.layout.form.FormElement.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getLabel label} : sap.ui.core.Label|string<\/li>\n<li>{@link #getFields fields} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well."},{"template":"<FormLayout\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tType=\"\"\n\tbusy=\"false\"\n\tbusyIndicatorDelay=\"1000\"\n\tvisible=\"true\"\n\tfieldGroupIds=\"[]\"\n\tbackgroundDesign=\"Translucent\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tvalidateFieldGroup=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Control -->\n<\/FormLayout>\n","Deprecated":false,"helpDescription":"Base layout to render a <code>Form<\/code>.\nOther layouts to render a <code>Form<\/code> must inherit from this one.\n<b>Note:<\/b> This control must not be used to render a <code>Form<\/code> in productive applications as it does not fulfill any\ndesign guidelines and usability standards.","DeprecatedInfo":{"isDeprecated":false},"description":"sap.ui.layout.form.FormLayout","Experimental":false,"prefix":"FormLayout","name":"sap.ui.layout.form.FormLayout","constructorDescription":"Constructor for a new sap.ui.layout.form.FormLayout.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.ui.layout.BackgroundDesign (default: Translucent)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"<GridLayout\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tType=\"\"\n\tbusy=\"false\"\n\tbusyIndicatorDelay=\"1000\"\n\tvisible=\"true\"\n\tfieldGroupIds=\"[]\"\n\tbackgroundDesign=\"Translucent\"\n\tsingleColumn=\"false\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tvalidateFieldGroup=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Control -->\n<\/GridLayout>\n","Deprecated":false,"helpDescription":"This <code>FormLayout<\/code> renders a <code>Form<\/code> using a HTML-table based grid.\nThis can be a 16 column grid or an 8 column grid. The grid is stable, so the alignment of the fields is the same for all screen sizes or widths of the <code>Form<\/code>.\nOnly the width of the single grid columns depends on the available width.\n\nTo adjust the appearance inside the <code>GridLayout<\/code>, you can use <code>GridContainerData<\/code> for <code>FormContainers<\/code>\nand <code>GridElementData<\/code> for content fields.\n\n<b>Note:<\/b> If content fields have a <code>width<\/code> property this will be ignored, as the width of the controls is set by the grid cells.\n\nThis control cannot be used stand alone, it only renders a <code>Form<\/code>, so it must be assigned to a <code>Form<\/code>.","DeprecatedInfo":{"isDeprecated":false},"description":"sap.ui.layout.form.GridLayout","Experimental":false,"prefix":"GridLayout","name":"sap.ui.layout.form.GridLayout","constructorDescription":"Constructor for a new sap.ui.layout.form.GridLayout.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSingleColumn singleColumn} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.layout.form.FormLayout#constructor sap.ui.layout.form.FormLayout}\ncan be used as well."},{"template":"<ResponsiveGridLayout\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tType=\"\"\n\tbusy=\"false\"\n\tbusyIndicatorDelay=\"1000\"\n\tvisible=\"true\"\n\tfieldGroupIds=\"[]\"\n\tbackgroundDesign=\"Translucent\"\n\tlabelSpanXL=\"-1\"\n\tlabelSpanL=\"4\"\n\tlabelSpanM=\"2\"\n\tlabelSpanS=\"12\"\n\tadjustLabelSpan=\"true\"\n\temptySpanXL=\"-1\"\n\temptySpanL=\"0\"\n\temptySpanM=\"0\"\n\temptySpanS=\"0\"\n\tcolumnsXL=\"-1\"\n\tcolumnsL=\"2\"\n\tcolumnsM=\"1\"\n\tsingleContainerFullSize=\"true\"\n\tbreakpointXL=\"1440\"\n\tbreakpointL=\"1024\"\n\tbreakpointM=\"600\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tvalidateFieldGroup=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Control -->\n<\/ResponsiveGridLayout>\n","Deprecated":false,"helpDescription":"Renders a <code>Form<\/code> using a responsive grid. Internally the <code>Grid<\/code> control is used for rendering.\nUsing this layout, the <code>Form<\/code> is rendered in a responsive way.\nDepending on the available space, the <code>FormContainers<\/code> are rendered in one or different columns and the labels are rendered in the same row as the fields or above the fields.\nThis behavior can be influenced by the properties of this layout control.\n\nOn the <code>FormContainers<\/code>, labels and content fields, <code>GridData<\/code> can be used to change the default rendering.\n<code>GridData<\/code> is not supported for <code>FormElements<\/code>.\n\n<b>Note:<\/b> If <code>GridData<\/code> is used, this may result in a much more complex layout than the default one.\nThis means that in some cases, the calculation for the other content may not bring the expected result.\nIn such cases, <code>GridData<\/code> should be used for all content controls to disable the default behavior.\n\nThis control cannot be used standalone, it only renders a <code>Form<\/code>, so it must be assigned to a <code>Form<\/code>.","DeprecatedInfo":{"isDeprecated":false},"description":"sap.ui.layout.form.ResponsiveGridLayout","Experimental":false,"prefix":"ResponsiveGridLayout","name":"sap.ui.layout.form.ResponsiveGridLayout","constructorDescription":"Constructor for a new <code>sap.ui.layout.form.ResponsiveGridLayout<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLabelSpanXL labelSpanXL} : int (default: -1)<\/li>\n<li>{@link #getLabelSpanL labelSpanL} : int (default: 4)<\/li>\n<li>{@link #getLabelSpanM labelSpanM} : int (default: 2)<\/li>\n<li>{@link #getLabelSpanS labelSpanS} : int (default: 12)<\/li>\n<li>{@link #getAdjustLabelSpan adjustLabelSpan} : boolean (default: true)<\/li>\n<li>{@link #getEmptySpanXL emptySpanXL} : int (default: -1)<\/li>\n<li>{@link #getEmptySpanL emptySpanL} : int (default: 0)<\/li>\n<li>{@link #getEmptySpanM emptySpanM} : int (default: 0)<\/li>\n<li>{@link #getEmptySpanS emptySpanS} : int (default: 0)<\/li>\n<li>{@link #getColumnsXL columnsXL} : int (default: -1)<\/li>\n<li>{@link #getColumnsL columnsL} : int (default: 2)<\/li>\n<li>{@link #getColumnsM columnsM} : int (default: 1)<\/li>\n<li>{@link #getSingleContainerFullSize singleContainerFullSize} : boolean (default: true)<\/li>\n<li>{@link #getBreakpointXL breakpointXL} : int (default: 1440)<\/li>\n<li>{@link #getBreakpointL breakpointL} : int (default: 1024)<\/li>\n<li>{@link #getBreakpointM breakpointM} : int (default: 600)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.layout.form.FormLayout#constructor sap.ui.layout.form.FormLayout}\ncan be used as well."},{"template":"<ResponsiveLayout\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tType=\"\"\n\tbusy=\"false\"\n\tbusyIndicatorDelay=\"1000\"\n\tvisible=\"true\"\n\tfieldGroupIds=\"[]\"\n\tbackgroundDesign=\"Translucent\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tvalidateFieldGroup=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Control -->\n<\/ResponsiveLayout>\n","Deprecated":false,"helpDescription":"Renders a <code>Form<\/code> with a responsive layout. Internally the <code>ResponsiveFlowLayout<\/code> is used.\nThe responsiveness of this layout tries to best use the available space. This means that the order of the <code>FormContainers<\/code>, labels and fields depends on the available space.\n\nOn the <code>FormContainers<\/code>, <code>FormElements<\/code>, labels and content fields, <code>ResponsiveFlowLayoutData<\/code> can be used to change the default rendering.\n\nWe suggest using the <code>ResponsiveGridLayout<\/code> instead of this layout because this is easier to consume and brings more stable responsive output.\n\n<b>Note:<\/b> If <code>ResponsiveFlowLayoutData<\/code> are used this may result in a much more complex layout than the default one. This means that in some cases, the calculation for the other content may not bring the expected result.\nIn such cases, <code>ResponsiveFlowLayoutData<\/code> should be used for all content controls to disable the default behavior.\n\nThis control cannot be used stand alone, it only renders a <code>Form<\/code>, so it must be assigned to a <code>Form<\/code>.","DeprecatedInfo":{"isDeprecated":false},"description":"sap.ui.layout.form.ResponsiveLayout","Experimental":false,"prefix":"ResponsiveLayout","name":"sap.ui.layout.form.ResponsiveLayout","constructorDescription":"Constructor for a new sap.ui.layout.form.ResponsiveLayout."},{"template":"<SimpleForm\n\tid=\"\"\n\tmodels=\"\"\n\tbindingContexts=\"\"\n\tobjectBindings=\"\"\n\tType=\"\"\n\tbusy=\"false\"\n\tbusyIndicatorDelay=\"1000\"\n\tvisible=\"true\"\n\tfieldGroupIds=\"[]\"\n\tmaxContainerCols=\"2\"\n\tminWidth=\"-1\"\n\twidth=\"\"\n\teditable=\"\"\n\tlabelMinWidth=\"192\"\n\tlayout=\"ResponsiveLayout\"\n\tlabelSpanXL=\"-1\"\n\tlabelSpanL=\"4\"\n\tlabelSpanM=\"2\"\n\tlabelSpanS=\"12\"\n\tadjustLabelSpan=\"true\"\n\temptySpanXL=\"-1\"\n\temptySpanL=\"0\"\n\temptySpanM=\"0\"\n\temptySpanS=\"0\"\n\tcolumnsXL=\"-1\"\n\tcolumnsL=\"2\"\n\tcolumnsM=\"1\"\n\tsingleContainerFullSize=\"true\"\n\tbreakpointXL=\"1440\"\n\tbreakpointL=\"1024\"\n\tbreakpointM=\"600\"\n\tbackgroundDesign=\"Translucent\"\n\tvalidationSuccess=\"\"\n\tvalidationError=\"\"\n\tparseError=\"\"\n\tformatError=\"\"\n\tmodelContextChange=\"\"\n\tvalidateFieldGroup=\"\">\n\t<tooltip><\/tooltip><!-- sap.ui.core.TooltipBase -->\n\t<customData><\/customData><!-- sap.ui.core.CustomData -->\n\t<layoutData><\/layoutData><!-- sap.ui.core.LayoutData -->\n\t<dependents><\/dependents><!-- sap.ui.core.Control -->\n\t<content><\/content><!-- sap.ui.core.Element -->\n\t<form><\/form><!-- sap.ui.layout.form.Form -->\n\t<title><\/title><!-- sap.ui.core.Title -->\n\t<toolbar><\/toolbar><!-- sap.ui.core.Toolbar -->\n<\/SimpleForm>\n","Deprecated":false,"helpDescription":"The <code>SimpleForm<\/code> provides an easy-to-use API to create simple forms.\nInside a <code>SimpleForm<\/code>, a <code>Form<\/code> control is created along with its <code>FormContainers<\/code> and <code>FormElements<\/code>, but the complexity in the API is removed.\n<ul>\n<li>A new title starts a new group (<code>FormContainer<\/code>) in the form.<\/li>\n<li>A new label starts a new row (<code>FormElement<\/code>) in the form.<\/li>\n<li>All other controls will be assigned to the row (<code>FormElement<\/code>) started with the last label.<\/li>\n<\/ul>\nUse <code>LayoutData<\/code> to influence the layout for special cases in the Input/Display controls.\n<b>Note:<\/b> If a more complex form is needed, use <code>Form<\/code> instead.","DeprecatedInfo":{"isDeprecated":false},"description":"sap.ui.layout.form.SimpleForm","Experimental":false,"prefix":"SimpleForm","name":"sap.ui.layout.form.SimpleForm","constructorDescription":"Constructor for a new sap.ui.layout.form.SimpleForm.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMaxContainerCols maxContainerCols} : int (default: 2)<\/li>\n<li>{@link #getMinWidth minWidth} : int (default: -1)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getEditable editable} : boolean<\/li>\n<li>{@link #getLabelMinWidth labelMinWidth} : int (default: 192)<\/li>\n<li>{@link #getLayout layout} : sap.ui.layout.form.SimpleFormLayout (default: ResponsiveLayout)<\/li>\n<li>{@link #getLabelSpanXL labelSpanXL} : int (default: -1)<\/li>\n<li>{@link #getLabelSpanL labelSpanL} : int (default: 4)<\/li>\n<li>{@link #getLabelSpanM labelSpanM} : int (default: 2)<\/li>\n<li>{@link #getLabelSpanS labelSpanS} : int (default: 12)<\/li>\n<li>{@link #getAdjustLabelSpan adjustLabelSpan} : boolean (default: true)<\/li>\n<li>{@link #getEmptySpanXL emptySpanXL} : int (default: -1)<\/li>\n<li>{@link #getEmptySpanL emptySpanL} : int (default: 0)<\/li>\n<li>{@link #getEmptySpanM emptySpanM} : int (default: 0)<\/li>\n<li>{@link #getEmptySpanS emptySpanS} : int (default: 0)<\/li>\n<li>{@link #getColumnsXL columnsXL} : int (default: -1)<\/li>\n<li>{@link #getColumnsL columnsL} : int (default: 2)<\/li>\n<li>{@link #getColumnsM columnsM} : int (default: 1)<\/li>\n<li>{@link #getSingleContainerFullSize singleContainerFullSize} : boolean (default: true)<\/li>\n<li>{@link #getBreakpointXL breakpointXL} : int (default: 1440)<\/li>\n<li>{@link #getBreakpointL breakpointL} : int (default: 1024)<\/li>\n<li>{@link #getBreakpointM breakpointM} : int (default: 600)<\/li>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.ui.layout.BackgroundDesign (default: Translucent)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Element[] (default)<\/li>\n<li>{@link #getTitle title} : sap.ui.core.Title|string<\/li>\n<li>{@link #getToolbar toolbar} : sap.ui.core.Toolbar<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."}]}