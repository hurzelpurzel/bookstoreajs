{"!define":{"sap.ui.commons.MenuBarDesign":{"Standard":{"!description":"The MenuBar appears in standard design.","!type":"String","!category":"enum"},"!description":"Determines the visual design of a MenuBar. The feature might be not supported by all themes.","Header":{"!description":"The MenuBar appears in header design.","!type":"String","!category":"enum"},"!category":"static class","!module":"sap/ui/commons/library"},"sap.ui.commons.layout.BorderLayoutArea":{"setContentAlign":{"!description":"Sets a new value for property <code>contentAlign<\/code>.\n\nThe content alignment as CSS value\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>left<\/code>.","!type":"fn(sContentAlign: String) -> sap.ui.commons.layout.BorderLayoutArea","!category":"function","!static":false},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.ui.core.Control) -> Number","!category":"function","!static":false},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"!module":"sap/ui/commons/layout/BorderLayoutArea","destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!type":"fn() -> sap.ui.commons.layout.BorderLayoutArea","!category":"function","!static":false},"setAreaId":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.3.3 Redundant to the aggregation by the parent border layout.<br>Sets a new value for property <code>areaId<\/code>.\n\nDefines which area the element represents: top, begin, center, end, bottom\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>top<\/code>.","!type":"fn(sAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes) -> sap.ui.commons.layout.BorderLayoutArea","!category":"function","!static":false},"!category":"class","getContentAlign":{"!description":"Gets current value of property <code>contentAlign<\/code>.\n\nThe content alignment as CSS value\n\nDefault value is <code>left<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"getSize":{"!description":"Gets current value of property <code>size<\/code>.\n\nDefines the height or the width. Is not used when the area element is in Center.\n\nDefault value is <code>100px<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getOverflowY":{"!description":"Gets current value of property <code>overflowY<\/code>.\n\nThe overflow mode of the area in vertical direction as CSS value\n\nDefault value is <code>auto<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"getOverflowX":{"!description":"Gets current value of property <code>overflowX<\/code>.\n\nThe overflow mode of the area in horizontal direction as CSS value\n\nDefault value is <code>auto<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.commons.layout.BorderLayoutArea","!category":"function","!static":false},"setSize":{"!description":"Sets a new value for property <code>size<\/code>.\n\nDefines the height or the width. Is not used when the area element is in Center.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100px<\/code>.","!type":"fn(sSize: sap.ui.core.CSSSize) -> sap.ui.commons.layout.BorderLayoutArea","!category":"function","!static":false},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nControls within the area","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.BorderLayoutArea with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"setVisible":{"!description":"Sets a new value for property <code>visible<\/code>.\n\nInvisible controls are not rendered\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bVisible: Boolean) -> sap.ui.commons.layout.BorderLayoutArea","!category":"function","!static":false},"!constructorDescription":"Constructor for a new layout/BorderLayoutArea.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAreaId areaId} : sap.ui.commons.layout.BorderLayoutAreaTypes (default: top)<\/li>\n<li>{@link #getOverflowX overflowX} : string (default: auto)<\/li>\n<li>{@link #getOverflowY overflowY} : string (default: auto)<\/li>\n<li>{@link #getContentAlign contentAlign} : string (default: left)<\/li>\n<li>{@link #getSize size} : sap.ui.core.CSSSize (default: 100px)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","getAreaId":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.3.3 Redundant to the aggregation by the parent border layout.<br>Gets current value of property <code>areaId<\/code>.\n\nDefines which area the element represents: top, begin, center, end, bottom\n\nDefault value is <code>top<\/code>.","!type":"fn() -> sap.ui.commons.layout.BorderLayoutAreaTypes","!category":"function","!static":false},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nInvisible controls are not rendered\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Page<\/code> control.<br>The BorderLayoutArea represents one area of a BorderLayout","insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.commons.layout.BorderLayoutArea","!category":"function","!static":false},"setOverflowX":{"!description":"Sets a new value for property <code>overflowX<\/code>.\n\nThe overflow mode of the area in horizontal direction as CSS value\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>auto<\/code>.","!type":"fn(sOverflowX: String) -> sap.ui.commons.layout.BorderLayoutArea","!category":"function","!static":false},"setOverflowY":{"!description":"Sets a new value for property <code>overflowY<\/code>.\n\nThe overflow mode of the area in vertical direction as CSS value\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>auto<\/code>.","!type":"fn(sOverflowY: String) -> sap.ui.commons.layout.BorderLayoutArea","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.layout.BorderLayoutArea.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Element"},"sap.ui.commons.RangeSlider_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RangeSlider with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.Slider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.RangeSlider"},"sap.ui.commons.ResponsiveContainer":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ResponsiveContainer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"getRanges":{"!description":"Gets content of aggregation <code>ranges<\/code>.\n\nThe ranges defined for this container","!type":"fn() -> [sap.ui.commons.ResponsiveContainerRange]","!category":"function","!static":false},"attachRangeSwitch":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>rangeSwitch<\/code> event of this <code>sap.ui.commons.ResponsiveContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.ResponsiveContainer<\/code> itself.\n\nThe event is fired the width of the container reaches a new range.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.ResponsiveContainer","!category":"function","!static":false},"setDefaultContent":{"!description":"Sets the associated <code>defaultContent<\/code>.","!type":"fn(oDefaultContent: sap.ui.core.Control) -> sap.ui.commons.ResponsiveContainer","!category":"function","!static":false},"detachRangeSwitch":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>rangeSwitch<\/code> event of this <code>sap.ui.commons.ResponsiveContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.ResponsiveContainer","!category":"function","!static":false},"removeRange":{"!description":"Removes a range from the aggregation <code>ranges<\/code>.","!type":"fn(vRange: Number | String | sap.ui.commons.ResponsiveContainerRange) -> sap.ui.commons.ResponsiveContainerRange","!category":"function","!static":false},"insertRange":{"!description":"Inserts a range into the aggregation <code>ranges<\/code>.","!type":"fn(oRange: sap.ui.commons.ResponsiveContainerRange, iIndex: Number) -> sap.ui.commons.ResponsiveContainer","!category":"function","!static":false},"indexOfRange":{"!description":"Checks for the provided <code>sap.ui.commons.ResponsiveContainerRange<\/code> in the aggregation <code>ranges<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oRange: sap.ui.commons.ResponsiveContainerRange) -> Number","!category":"function","!static":false},"!constructorDescription":"Constructor for a new ResponsiveContainer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getRanges ranges} : sap.ui.commons.ResponsiveContainerRange[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:rangeSwitch rangeSwitch} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/commons/ResponsiveContainer","destroyRanges":{"!description":"Destroys all the ranges in the aggregation <code>ranges<\/code>.","!type":"fn() -> sap.ui.commons.ResponsiveContainer","!category":"function","!static":false},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nThe width of the responsive container.\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Is used to provide a container, which can show different content depending on its current width. It fires an event, whenever a new range is reached. In addition the content of the new range is automatically shown, if it is set.","getDefaultContent":{"!description":"ID of the element which is the current target of the association <code>defaultContent<\/code>, or <code>null<\/code>.","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nThe width of the responsive container.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.ResponsiveContainer","!category":"function","!static":false},"!category":"class","addRange":{"!description":"Adds some range to the aggregation <code>ranges<\/code>.","!type":"fn(oRange: sap.ui.commons.ResponsiveContainerRange) -> sap.ui.commons.ResponsiveContainer","!category":"function","!static":false},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nThe width of the responsive container.\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"fireRangeSwitch":{"!description":"Fires event <code>rangeSwitch<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>currentRange<\/code> of type <code>sap.ui.commons.ResponsiveContainerRange<\/code>The current range<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.ResponsiveContainer","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nThe width of the responsive container.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.ResponsiveContainer","!category":"function","!static":false},"removeAllRanges":{"!description":"Removes all the controls from the aggregation <code>ranges<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.ResponsiveContainerRange]","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.ResponsiveContainer.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Control"},"sap.ui.commons.RadioButtonGroup_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RadioButtonGroup with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.RadioButtonGroup"},"sap.ui.commons.Message":{"bindDetails":{"!description":"Registers a callback function to be invoked if long text Details are to be made available.\n\nThis callback function will be supplied the corresponding Message \"id\", and should\nreturn the (simple) HTML string to be displayed within the Message Details Dialog.\n\nE.g.: myMessage.bindDetails(getDetails);\nfunction getDetails(sId) {... return htmlString;}","!type":"fn(fnCallBack: fn())","!category":"function","!static":false},"setAssociatedElementId":{"!description":"Sets a new value for property <code>associatedElementId<\/code>.\n\nAssociated UI element ID. (Optional)\nFor navigation to error field.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sAssociatedElementId: String) -> sap.ui.commons.Message","!category":"function","!static":false},"setType":{"!description":"Sets a new value for property <code>type<\/code>.\n\n\"Success\", or \"Warning\", or \"Error\" messages. (Mandatory)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sType: sap.ui.commons.MessageType) -> sap.ui.commons.Message","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Message with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"getDesign":{"!description":"Gets current value of property <code>design<\/code>.\n\nInternal attribute, used to force the display of the \"short\" or the \"long\" text only.","!type":"fn() -> String","!category":"function","!static":false},"!constructorDescription":"Constructor for a new Message.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getType type} : sap.ui.commons.MessageType<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getAssociatedElementId associatedElementId} : string<\/li>\n<li>{@link #getDesign design} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nMessage short text. (Mandatory)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sText: String) -> sap.ui.commons.Message","!category":"function","!static":false},"!module":"sap/ui/commons/Message","getAssociatedElementId":{"!description":"Gets current value of property <code>associatedElementId<\/code>.\n\nAssociated UI element ID. (Optional)\nFor navigation to error field.","!type":"fn() -> String","!category":"function","!static":false},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nMessage short text. (Mandatory)","!type":"fn() -> String","!category":"function","!static":false},"getType":{"!description":"Gets current value of property <code>type<\/code>.\n\n\"Success\", or \"Warning\", or \"Error\" messages. (Mandatory)","!type":"fn() -> sap.ui.commons.MessageType","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.4.0 A new messaging concept will be created in future. Therefore this control might be removed in one of the next versions.<br>Creates the \"Message\"s to be supplied to the \"MessageBar\" Control.","!category":"class","setDesign":{"!description":"Sets a new value for property <code>design<\/code>.\n\nInternal attribute, used to force the display of the \"short\" or the \"long\" text only.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sDesign: String) -> sap.ui.commons.Message","!category":"function","!static":false},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Message.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.TextViewColor":{"Default":{"!description":"Default color","!type":"String","!category":"enum"},"!description":"Semantic Colors of a text.","!category":"static class","Critical":{"!description":"Critical color","!type":"String","!category":"enum"},"Positive":{"!description":"Positive color","!type":"String","!category":"enum"},"!module":"sap/ui/commons/library","Negative":{"!description":"Negative color","!type":"String","!category":"enum"}},"sap.ui.commons.ProgressIndicator_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ProgressIndicator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.ProgressIndicator"},"sap.ui.commons.Area":{"getAlt":{"!description":"Gets current value of property <code>alt<\/code>.\n\nAlternative text that is displayed in the case the image is not available","!type":"fn() -> String","!category":"function","!static":false},"setCoords":{"!description":"Sets a new value for property <code>coords<\/code>.\n\nCoordinates of the area\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sCoords: String) -> sap.ui.commons.Area","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Area with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!constructorDescription":"Constructor for a new Area.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShape shape} : string<\/li>\n<li>{@link #getCoords coords} : string<\/li>\n<li>{@link #getHref href} : sap.ui.core.URI<\/li>\n<li>{@link #getAlt alt} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/commons/Area","setShape":{"!description":"Sets a new value for property <code>shape<\/code>.\n\nThe value is a string and can be 'rect' for rectangle, 'poly' for poligon, 'circle', or default.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sShape: String) -> sap.ui.commons.Area","!category":"function","!static":false},"setAlt":{"!description":"Sets a new value for property <code>alt<\/code>.\n\nAlternative text that is displayed in the case the image is not available\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sAlt: String) -> sap.ui.commons.Area","!category":"function","!static":false},"getCoords":{"!description":"Gets current value of property <code>coords<\/code>.\n\nCoordinates of the area","!type":"fn() -> String","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Used for defining areas in an image map. At runtime, the user can trigger an action, or start a URL, from the single image areas.","setHref":{"!description":"Sets a new value for property <code>href<\/code>.\n\nHyper link that is executed when the area is clicked\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sHref: sap.ui.core.URI) -> sap.ui.commons.Area","!category":"function","!static":false},"!category":"class","getHref":{"!description":"Gets current value of property <code>href<\/code>.\n\nHyper link that is executed when the area is clicked","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"getShape":{"!description":"Gets current value of property <code>shape<\/code>.\n\nThe value is a string and can be 'rect' for rectangle, 'poly' for poligon, 'circle', or default.","!type":"fn() -> String","!category":"function","!static":false},"!proto":"sap.ui.core.Element","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Area.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.MessageList":{"getMaxListed":{"!description":"Gets current value of property <code>maxListed<\/code>.\n\nMaximum number of messages being display in the List before a scrollbar appears. Value '0' means no limit.\n\nDefault value is <code>7<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.MessageList with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"setMaxListed":{"!description":"Sets a new value for property <code>maxListed<\/code>.\n\nMaximum number of messages being display in the List before a scrollbar appears. Value '0' means no limit.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>7<\/code>.","!type":"fn(sMaxListed: String) -> sap.ui.commons.MessageList","!category":"function","!static":false},"setVisible":{"!description":"Setter for property <code>visible<\/code>.\n\nDefault value is <code>true<\/code>\n\nThe default implementation of function \"setVisible()\" is overwritten\nin order to invoke the open() and close() of the MessageList Popup.","!type":"fn(bVisible: Boolean) -> sap.ui.commons.MessageList","!category":"function","!static":false},"getAnchorId":{"!description":"Gets current value of property <code>anchorId<\/code>.\n\nID of the anchor under which the MessageList will render.","!type":"fn() -> String","!category":"function","!static":false},"!constructorDescription":"Constructor for a new MessageList.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVisible visible} : boolean (default: false)<\/li>\n<li>{@link #getAnchorId anchorId} : string<\/li>\n<li>{@link #getMaxListed maxListed} : string (default: 7)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/commons/MessageList","setAnchorId":{"!description":"Sets a new value for property <code>anchorId<\/code>.\n\nID of the anchor under which the MessageList will render.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sAnchorId: String) -> sap.ui.commons.MessageList","!category":"function","!static":false},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nSpecifies whether or not the MessageList is visible. Invisible controls are not rendered.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.4.0 A new messaging concept will be created in future. Therefore this control might be removed in one of the next versions.<br>Instantiated by the \"MessageBar\" Control if the user requests to generate the corresponding \"MessageList\".","setMessages":{"!description":"Sets the list of Messages to be displayed and re-renders this Control if it is visible.","!type":"fn(aMessages: [sap.ui.commons.Message])","!category":"function","!static":false},"!category":"class","!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.MessageList.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.MenuItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.21.0 Please use the element <code>sap.ui.unified.MenuItem<\/code> of the library <code>sap.ui.unified<\/code> instead.<br>Standard item to be used inside a menu. A menu item represents an action which can be selected by the user in the menu or\nit can provide a submenu to organize the actions hierarchically.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.MenuItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.MenuItem.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!category":"class","!constructorDescription":"Constructor for a new MenuItem element.","!module":"sap/ui/commons/MenuItem","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.MenuItem.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.unified.MenuItem"},"sap.ui.commons.layout.Separation":{"MediumWithLine":{"!description":"\nA medium (31px) vertical gutter with a vertical line in its middle.","!type":"String","!category":"enum"},"Medium":{"!description":"\nA medium (31px) vertical gutter without a vertical line.","!type":"String","!category":"enum"},"!description":"Separation, e.g. of a layout cell from its neighbor, via a vertical gutter of\ndefined width, with or without a vertical line in its middle.","SmallWithLine":{"!description":"\nA small (17px) vertical gutter with a vertical line in its middle.","!type":"String","!category":"enum"},"Large":{"!description":"\nA large (63px) vertical gutter without a vertical line.","!type":"String","!category":"enum"},"!category":"static class","None":{"!description":"\nNo gutter at all (0px), and without a vertical line, of course.","!type":"String","!category":"enum"},"!module":"sap/ui/commons/library","LargeWithLine":{"!description":"\nA large (63px) vertical gutter with a vertical line in its middle.","!type":"String","!category":"enum"},"Small":{"!description":"\nA small (17px) vertical gutter without a vertical line.","!type":"String","!category":"enum"}},"sap.ui.commons.TextField":{"getInputDomRef":{"!description":"Method for accessing the DOM Ref of the input element.","!type":"fn() -> Object","!category":"function","!static":false},"_checkChange":{"!description":"Compares the previous value with the current value and fires the change event\nif the TextField is editable and the value has changed.","!type":"fn(oEvent: jQuery.Event)","!category":"function","!static":false},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"onsapfocusleave":{"!description":"Event handler called when control is losing the focus","!type":"fn(oEvent: jQuery.Event)","!category":"function","!static":false},"detachLiveChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>liveChange<\/code> event of this <code>sap.ui.commons.TextField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.TextField","!category":"function","!static":false},"getHelpId":{"!description":"Gets current value of property <code>helpId<\/code>.\n\nUnique identifier used for help service.\n\nDefault value is <code><\/code>.","!type":"fn() -> String","!category":"function","!static":false},"!module":"sap/ui/commons/TextField","getLiveValue":{"!description":"Returns the current value of the <code>TextField<\/code>.\nIn case of editing the <code>TextField<\/code> you can access the current value via this method.\nThe validated value is accessible via the property value.","!type":"fn() -> String","!category":"function","!static":false},"getFocusInfo":{"!description":"Returns an object representing the serialized focus information","!type":"fn() -> Object","!category":"function","!static":false},"setEditable":{"!description":"Sets a new value for property <code>editable<\/code>.\n\nSwitches edit state of the control. Read-only fields have different colors, depending on theme setting.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEditable: Boolean) -> sap.ui.commons.TextField","!category":"function","!static":false},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nWidth of text field. When it is set (CSS-size such as % or px), this is the exact size. When left blank, the text field length defines the width.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"getImeMode":{"!description":"Gets current value of property <code>imeMode<\/code>.\n\nState of the Input Method Editor (IME).\n\nDefault value is <code>Auto<\/code>.","!type":"fn() -> sap.ui.core.ImeMode","!category":"function","!static":false},"onselectstart":{"!description":"Event handler called when text selection starts.\nWhen the text field is disabled, the text should not be selectable, so cancel the event.","!type":"fn(oEvent: jQuery.Event)","!category":"function","!static":false},"getAccessibilityInfo":{"!type":"fn()","!category":"function","!static":false},"getEditable":{"!description":"Gets current value of property <code>editable<\/code>.\n\nSwitches edit state of the control. Read-only fields have different colors, depending on theme setting.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setImeMode":{"!description":"Sets a new value for property <code>imeMode<\/code>.\n\nState of the Input Method Editor (IME).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!type":"fn(sImeMode: sap.ui.core.ImeMode) -> sap.ui.commons.TextField","!category":"function","!static":false},"getRequired":{"!description":"Gets current value of property <code>required<\/code>.\n\nDepending on theme the <code>TextField<\/code> is shown as required.\nIf a <code>Label<\/code> is assigned to the <code>TextField<\/code> it will visualize the requires state too.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"onkeyup":{"!description":"Event handler for keyup.\nfire the liveChange event","!type":"fn(oEvent: jQuery.Event)","!category":"function","!static":false},"!constructorDescription":"Constructor for a new TextField.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : string (default: )<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getRequired required} : boolean (default: false)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getMaxLength maxLength} : int (default: 0)<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Begin)<\/li>\n<li>{@link #getImeMode imeMode} : sap.ui.core.ImeMode (default: Auto)<\/li>\n<li>{@link #getDesign design} : sap.ui.core.Design (default: Standard)<\/li>\n<li>{@link #getHelpId helpId} : string (default: )<\/li>\n<li>{@link #getAccessibleRole accessibleRole} : sap.ui.core.AccessibleRole (default: Textbox)<\/li>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getPlaceholder placeholder} : string<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setHelpId":{"!description":"Sets a new value for property <code>helpId<\/code>.\n\nUnique identifier used for help service.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!type":"fn(sHelpId: String) -> sap.ui.commons.TextField","!category":"function","!static":false},"onsapenter":{"!description":"Event handler called when enter key is pressed.","!type":"fn(oEvent: jQuery.Event)","!category":"function","!static":false},"getTextAlign":{"!description":"Gets current value of property <code>textAlign<\/code>.\n\nSets the horizontal alignment of the text.\n\nDefault value is <code>Begin<\/code>.","!type":"fn() -> sap.ui.core.TextAlign","!category":"function","!static":false},"getAccessibleRole":{"!description":"Gets current value of property <code>accessibleRole<\/code>.\n\nAccessibility role for the text field.\n\nDefault value is <code>Textbox<\/code>.","!type":"fn() -> sap.ui.core.AccessibleRole","!category":"function","!static":false},"addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.commons.TextField","!category":"function","!static":false},"unbindValue":{"!description":"Unbinds property <code>value<\/code> from model data.","!type":"fn() -> sap.ui.commons.TextField","!category":"function","!static":false},"fireChange":{"!description":"Fires event <code>change<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>newValue<\/code> of type <code>string<\/code>The new / changed value of the <code>TextField<\/code>.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.TextField","!category":"function","!static":false},"setName":{"!description":"Sets a new value for property <code>name<\/code>.\n\nThe <code>name<\/code> property to be used in the HTML code (e.g. for HTML forms that send data to the server via 'submit').\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sName: String) -> sap.ui.commons.TextField","!category":"function","!static":false},"setDesign":{"!description":"Sets a new value for property <code>design<\/code>.\n\nFont type. valid values are Standard and Monospace.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Standard<\/code>.","!type":"fn(sDesign: sap.ui.core.Design) -> sap.ui.commons.TextField","!category":"function","!static":false},"!proto":"sap.ui.core.Control","getValue":{"!description":"Gets current value of property <code>value<\/code>.\n\nText inside the <code>TextField<\/code>\n\nDefault value is <code><\/code>.","!type":"fn() -> String","!category":"function","!static":false},"getTextDirection":{"!description":"Gets current value of property <code>textDirection<\/code>.\n\nDirection of the text. Possible values: \"rtl\", \"ltr\".\n\nDefault value is <code>Inherit<\/code>.","!type":"fn() -> sap.ui.core.TextDirection","!category":"function","!static":false},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nSwitches enabled state of the control. Disabled fields have different colors, and can not be focused.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setAccessibleRole":{"!description":"Sets a new value for property <code>accessibleRole<\/code>.\n\nAccessibility role for the text field.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Textbox<\/code>.","!type":"fn(sAccessibleRole: sap.ui.core.AccessibleRole) -> sap.ui.commons.TextField","!category":"function","!static":false},"getDesign":{"!description":"Gets current value of property <code>design<\/code>.\n\nFont type. valid values are Standard and Monospace.\n\nDefault value is <code>Standard<\/code>.","!type":"fn() -> sap.ui.core.Design","!category":"function","!static":false},"getMaxLength":{"!description":"Gets current value of property <code>maxLength<\/code>.\n\nMaximum number of characters. Value '0' means the feature is switched off.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"setRequired":{"!description":"Sets a new value for property <code>required<\/code>.\n\nDepending on theme the <code>TextField<\/code> is shown as required.\nIf a <code>Label<\/code> is assigned to the <code>TextField<\/code> it will visualize the requires state too.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bRequired: Boolean) -> sap.ui.commons.TextField","!category":"function","!static":false},"getValueState":{"!description":"Gets current value of property <code>valueState<\/code>.\n\nVisualizes warnings or errors related to the text field. Possible values: Warning, Error, Success.\n\nDefault value is <code>None<\/code>.","!type":"fn() -> sap.ui.core.ValueState","!category":"function","!static":false},"removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"setPlaceholder":{"!description":"Sets a new value for property <code>placeholder<\/code>.\n\nPlaceholder for the text field.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sPlaceholder: String) -> sap.ui.commons.TextField","!category":"function","!static":false},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"setValueState":{"!description":"Sets a new value for property <code>valueState<\/code>.\n\nVisualizes warnings or errors related to the text field. Possible values: Warning, Error, Success.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!type":"fn(sValueState: sap.ui.core.ValueState) -> sap.ui.commons.TextField","!category":"function","!static":false},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.ui.commons.TextField","!category":"function","!static":false},"!category":"class","setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nSwitches enabled state of the control. Disabled fields have different colors, and can not be focused.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.TextField","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nWidth of text field. When it is set (CSS-size such as % or px), this is the exact size. When left blank, the text field length defines the width.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.TextField","!category":"function","!static":false},"setTextDirection":{"!description":"Sets a new value for property <code>textDirection<\/code>.\n\nDirection of the text. Possible values: \"rtl\", \"ltr\".\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.ui.commons.TextField","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.TextField with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"setTextAlign":{"!description":"Sets a new value for property <code>textAlign<\/code>.\n\nSets the horizontal alignment of the text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Begin<\/code>.","!type":"fn(sTextAlign: sap.ui.core.TextAlign) -> sap.ui.commons.TextField","!category":"function","!static":false},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"setValue":{"!description":"Sets a new value for property <code>value<\/code>.\n\nText inside the <code>TextField<\/code>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!type":"fn(sValue: String) -> sap.ui.commons.TextField","!category":"function","!static":false},"setMaxLength":{"!description":"Sets a new value for property <code>maxLength<\/code>.\n\nMaximum number of characters. Value '0' means the feature is switched off.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(iMaxLength: Number) -> sap.ui.commons.TextField","!category":"function","!static":false},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>change<\/code> event of this <code>sap.ui.commons.TextField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.TextField","!category":"function","!static":false},"getPlaceholder":{"!description":"Gets current value of property <code>placeholder<\/code>.\n\nPlaceholder for the text field.","!type":"fn() -> String","!category":"function","!static":false},"bindValue":{"!description":"Binds property <code>value<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>","!type":"fn(oBindingInfo: Object) -> sap.ui.commons.TextField","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Input<\/code> control.<br>Renders a input field for text input.","fireLiveChange":{"!description":"Fires event <code>liveChange<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>liveValue<\/code> of type <code>string<\/code>Current visible value of the <code>TextField<\/code>.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.TextField","!category":"function","!static":false},"attachLiveChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>liveChange<\/code> event of this <code>sap.ui.commons.TextField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.TextField<\/code> itself.\n\nThis event if fired during typing into the <code>TextField<\/code> and returns the currently entered value.\n<b>Note:<\/b> This is not the content of the value property.\nThe value property is only updated by ENTER and by leaving the control.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.TextField","!category":"function","!static":false},"getName":{"!description":"Gets current value of property <code>name<\/code>.\n\nThe <code>name<\/code> property to be used in the HTML code (e.g. for HTML forms that send data to the server via 'submit').","!type":"fn() -> String","!category":"function","!static":false},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>change<\/code> event of this <code>sap.ui.commons.TextField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.TextField<\/code> itself.\n\nEvent is fired when the text in the field has changed AND the focus leaves the TextField or the Enter key is pressed.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.TextField","!category":"function","!static":false},"onfocusin":{"!description":"Event handler called when control is receiving the focus","!type":"fn(oEvent: jQuery.Event)","!category":"function","!static":false},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.TextField.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.layout.BorderLayoutArea_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.BorderLayoutArea with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.layout.BorderLayoutArea"},"sap.ui.commons.layout.HorizontalLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.HorizontalLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.HorizontalLayout.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.layout.HorizontalLayout"},"sap.ui.commons.ValueHelpField_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ValueHelpField with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.TextField.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.ValueHelpField"},"sap.ui.commons.TextArea":{"getWrapping":{"!description":"Gets current value of property <code>wrapping<\/code>.\n\nText wrapping. Possible values are: Soft, Hard, Off.","!type":"fn() -> sap.ui.core.Wrapping","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.TextArea with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.TextField.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"getLabeledBy":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.5.2 Please use association AriaLabelledBy instead.<br>Gets current value of property <code>labeledBy<\/code>.\n\nID of label control","!type":"fn() -> String","!category":"function","!static":false},"setLabeledBy":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.5.2 Please use association AriaLabelledBy instead.<br>Sets a new value for property <code>labeledBy<\/code>.\n\nID of label control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sLabeledBy: String) -> sap.ui.commons.TextArea","!category":"function","!static":false},"!constructorDescription":"Constructor for a new TextArea.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getCols cols} : int<\/li>\n<li>{@link #getRows rows} : int<\/li>\n<li>{@link #getWrapping wrapping} : sap.ui.core.Wrapping<\/li>\n<li>{@link #getCursorPos cursorPos} : int<\/li>\n<li>{@link #getExplanation explanation} : string<\/li>\n<li>{@link #getLabeledBy labeledBy} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.commons.TextField#constructor sap.ui.commons.TextField}\ncan be used as well.","!module":"sap/ui/commons/TextArea","setRows":{"!description":"Sets a new value for property <code>rows<\/code>.\n\nNumber of Rows. This proprty is only used if Height is not used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(iRows: Number) -> sap.ui.commons.TextArea","!category":"function","!static":false},"setMaxLength":{"!description":"Property setter for MaxLength","!type":"fn(iMaxLength: Number) -> sap.ui.commons.TextArea","!category":"function","!static":false},"setExplanation":{"!description":"Sets a new value for property <code>explanation<\/code>.\n\ntext which appears, in case quick-help is switched on\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sExplanation: String) -> sap.ui.commons.TextArea","!category":"function","!static":false},"setCursorPos":{"!description":"Property setter for the cursor position","!type":"fn(iCursorPos: Number) -> sap.ui.commons.TextArea","!category":"function","!static":false},"getExplanation":{"!description":"Gets current value of property <code>explanation<\/code>.\n\ntext which appears, in case quick-help is switched on","!type":"fn() -> String","!category":"function","!static":false},"getCols":{"!description":"Gets current value of property <code>cols<\/code>.\n\nNumber of Columns. Cols means number of characters per row. This proprty is only used if Width is not used.","!type":"fn() -> Number","!category":"function","!static":false},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nHeight of text field. When it is set (CSS-size such as % or px), this is the exact size.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setWrapping":{"!description":"Sets a new value for property <code>wrapping<\/code>.\n\nText wrapping. Possible values are: Soft, Hard, Off.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sWrapping: sap.ui.core.Wrapping) -> sap.ui.commons.TextArea","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.TextArea<\/code> control.<br>Control to enter or display multible row text.","setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nHeight of text field. When it is set (CSS-size such as % or px), this is the exact size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.TextArea","!category":"function","!static":false},"!category":"class","getRows":{"!description":"Gets current value of property <code>rows<\/code>.\n\nNumber of Rows. This proprty is only used if Height is not used.","!type":"fn() -> Number","!category":"function","!static":false},"setCols":{"!description":"Sets a new value for property <code>cols<\/code>.\n\nNumber of Columns. Cols means number of characters per row. This proprty is only used if Width is not used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(iCols: Number) -> sap.ui.commons.TextArea","!category":"function","!static":false},"getCursorPos":{"!description":"Gets current value of property <code>cursorPos<\/code>.\n\nPosition of cursor, e.g., to let the user re-start typing at the same position as before the server roundtrip","!type":"fn() -> Number","!category":"function","!static":false},"!proto":"sap.ui.commons.TextField","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.TextArea.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.Panel":{"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nRepresents the state of the of the Panel (enabled or disabled)\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setScrollLeft":{"!description":"Sets the scroll position of the panel in pixels from the left.","!type":"fn(iPosition: Number) -> sap.ui.commons.Panel","!category":"function","!static":false},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.ui.core.Control) -> Number","!category":"function","!static":false},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"setText":{"!description":"Sets the text that will be rendered in the Panel header.","!type":"fn(sText: String) -> sap.ui.commons.Panel","!category":"function","!static":false},"removeButton":{"!description":"Removes a button from the aggregation <code>buttons<\/code>.","!type":"fn(vButton: Number | String | sap.ui.commons.Button) -> sap.ui.commons.Button","!category":"function","!static":false},"!module":"sap/ui/commons/Panel","setBorderDesign":{"!description":"Sets a new value for property <code>borderDesign<\/code>.\n\nDetermines if the Panel can have a box as border.\nNote that displaying borders is theme-dependent.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Box<\/code>.","!type":"fn(sBorderDesign: sap.ui.commons.enums.BorderDesign) -> sap.ui.commons.Panel","!category":"function","!static":false},"setScrollTop":{"!description":"Sets the scrolls position of the panel in pixels from the top.","!type":"fn(iPosition: Number) -> sap.ui.commons.Panel","!category":"function","!static":false},"destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!type":"fn() -> sap.ui.commons.Panel","!category":"function","!static":false},"getText":{"!description":"Returns the text that is rendered in the Panel header.\nIf a Title control was used it returns the text of the Title control.","!type":"fn() -> String","!category":"function","!static":false},"getFocusInfo":{"!type":"fn()","!category":"function","!static":false},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nDetermines the height of the Panel in CSS size.\nPer default, the height for the Panel is automatically adjusted to the content.\nDimension allows to explicitly specify the height.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"destroyButtons":{"!description":"Destroys all the buttons in the aggregation <code>buttons<\/code>.","!type":"fn() -> sap.ui.commons.Panel","!category":"function","!static":false},"getScrollLeft":{"!description":"Returns the scroll position of the panel in pixels from the left.\nReturns 0 if not rendered yet.\nAlso internally updates the control property.","!type":"fn() -> Number","!category":"function","!static":false},"setApplyContentPadding":{"!description":"Property setter for the padding","!type":"fn(bPadding: Boolean) -> sap.ui.commons.Panel","!category":"function","!static":false},"getScrollTop":{"!description":"Returns the scroll position of the panel in pixels from the top.\nReturns 0 if not rendered yet.\nAlso internally updates the control property.","!type":"fn() -> Number","!category":"function","!static":false},"setShowCollapseIcon":{"!description":"Sets a new value for property <code>showCollapseIcon<\/code>.\n\nDetermines whether the Panel will have an icon for collapsing/expanding, or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowCollapseIcon: Boolean) -> sap.ui.commons.Panel","!category":"function","!static":false},"!category":"class","setEnabled":{"!description":"Property setter for the \"enabled\" state","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.Panel","!category":"function","!static":false},"indexOfButton":{"!description":"Checks for the provided <code>sap.ui.commons.Button<\/code> in the aggregation <code>buttons<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oButton: sap.ui.commons.Button) -> Number","!category":"function","!static":false},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDetermines the width of the Panel in CSS size.\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getTitle":{"!description":"Gets content of aggregation <code>title<\/code>.\n\nAggregates the title element of the Panel.\nFor text titles only, you alternatively could use setText() which also creates a title in the background.","!type":"fn() -> sap.ui.core.Title","!category":"function","!static":false},"getButtons":{"!description":"Gets content of aggregation <code>buttons<\/code>.\n\nThe buttons that shall be displayed in the Panel header","!type":"fn() -> [sap.ui.commons.Button]","!category":"function","!static":false},"setWidth":{"!description":"Sets the width of the panel.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Panel","!category":"function","!static":false},"setAreaDesign":{"!description":"Sets a new value for property <code>areaDesign<\/code>.\n\nDetermines the background color.\nNote that color settings are theme-dependent.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Fill<\/code>.","!type":"fn(sAreaDesign: sap.ui.commons.enums.AreaDesign) -> sap.ui.commons.Panel","!category":"function","!static":false},"getApplyContentPadding":{"!description":"Gets current value of property <code>applyContentPadding<\/code>.\n\nDetermines whether the Panel will have padding.\nPadding is theme-dependent.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.commons.Panel","!category":"function","!static":false},"removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nAggregates the controls that are contained in the Panel.\nIt is recommended to use a layout control as single direct child.\nWhen the Panel dimensions are set, the child control may have width and height of 100%.\nWhen the dimensions are not set, the child defines the size of the Panel.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Panel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!constructorDescription":"Constructor for a new Panel.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getScrollLeft scrollLeft} : int (default: 0)<\/li>\n<li>{@link #getScrollTop scrollTop} : int (default: 0)<\/li>\n<li>{@link #getApplyContentPadding applyContentPadding} : boolean (default: true)<\/li>\n<li>{@link #getCollapsed collapsed} : boolean (default: false)<\/li>\n<li>{@link #getAreaDesign areaDesign} : sap.ui.commons.enums.AreaDesign (default: Fill)<\/li>\n<li>{@link #getBorderDesign borderDesign} : sap.ui.commons.enums.BorderDesign (default: Box)<\/li>\n<li>{@link #getShowCollapseIcon showCollapseIcon} : boolean (default: true)<\/li>\n<li>{@link #getText text} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getTitle title} : sap.ui.core.Title<\/li>\n<li>{@link #getButtons buttons} : sap.ui.commons.Button[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getBorderDesign":{"!description":"Gets current value of property <code>borderDesign<\/code>.\n\nDetermines if the Panel can have a box as border.\nNote that displaying borders is theme-dependent.\n\nDefault value is <code>Box<\/code>.","!type":"fn() -> sap.ui.commons.enums.BorderDesign","!category":"function","!static":false},"removeAllButtons":{"!description":"Removes all the controls from the aggregation <code>buttons<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.Button]","!category":"function","!static":false},"destroyTitle":{"!description":"Destroys the title in the aggregation <code>title<\/code>.","!type":"fn() -> sap.ui.commons.Panel","!category":"function","!static":false},"insertButton":{"!description":"Inserts a button into the aggregation <code>buttons<\/code>.","!type":"fn(oButton: sap.ui.commons.Button, iIndex: Number) -> sap.ui.commons.Panel","!category":"function","!static":false},"setCollapsed":{"!description":"Property setter for the \"collapsed\" state","!type":"fn(bCollapsed: Boolean) -> sap.ui.commons.Panel","!category":"function","!static":false},"insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.commons.Panel","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Panel<\/code> control.<br>Represents a container with scroll functionality, that can be used for text and controls.\nThe Panel does not layout the embedded controls.","getCollapsed":{"!description":"Gets current value of property <code>collapsed<\/code>.\n\nDetermines whether the Panel will be initially collapsed.\nWhen it is initially collapsed, the contents are not rendered.\nA collapsed Panel consumes less space than an expanded one.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setTitle":{"!description":"Sets a Tille control that will be rendered in the Panel header.","!type":"fn(oTitle: sap.ui.core.Title) -> sap.ui.commons.Panel","!category":"function","!static":false},"getAreaDesign":{"!description":"Gets current value of property <code>areaDesign<\/code>.\n\nDetermines the background color.\nNote that color settings are theme-dependent.\n\nDefault value is <code>Fill<\/code>.","!type":"fn() -> sap.ui.commons.enums.AreaDesign","!category":"function","!static":false},"addButton":{"!description":"Adds some button to the aggregation <code>buttons<\/code>.","!type":"fn(oButton: sap.ui.commons.Button) -> sap.ui.commons.Panel","!category":"function","!static":false},"setHeight":{"!description":"Sets the height of the panel.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.Panel","!category":"function","!static":false},"getShowCollapseIcon":{"!description":"Gets current value of property <code>showCollapseIcon<\/code>.\n\nDetermines whether the Panel will have an icon for collapsing/expanding, or not.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setDimensions":{"!description":"Sets the dimensions of the panel.","!type":"fn(sWidth: sap.ui.core.CSSSize, sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.Panel","!category":"function","!static":false},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Panel.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.layout.BorderLayout":{"destroyBegin":{"!description":"Destroys the begin in the aggregation <code>begin<\/code>.","!type":"fn() -> sap.ui.commons.layout.BorderLayout","!category":"function","!static":false},"indexOfContent":{"!description":"Determines the index of a given content control","!type":"fn(oAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes, oContent: sap.ui.core.Control) -> Number","!category":"function","!static":false},"getBottom":{"!description":"Gets content of aggregation <code>bottom<\/code>.\n\nRepresents the Bottom area","!type":"fn() -> sap.ui.commons.layout.BorderLayoutArea","!category":"function","!static":false},"removeContent":{"!description":"Removes the content with the given index from an area","!type":"fn(oAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes, iIndex: Number)","!category":"function","!static":false},"getAreaData":{"!description":"Returns a JSON-like object that contains all property values of the requested area","!type":"fn(oAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes) -> Object","!category":"function","!static":false},"!module":"sap/ui/commons/layout/BorderLayout","getBegin":{"!description":"Gets content of aggregation <code>begin<\/code>.\n\nRepresents the Begin area","!type":"fn() -> sap.ui.commons.layout.BorderLayoutArea","!category":"function","!static":false},"getEnd":{"!description":"Gets content of aggregation <code>end<\/code>.\n\nRepresents the End area","!type":"fn() -> sap.ui.commons.layout.BorderLayoutArea","!category":"function","!static":false},"destroyContent":{"!description":"Destroys the content of the specified area","!type":"fn(oAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes)","!category":"function","!static":false},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nDefines the overall height of the layout\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getRtl":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.5.2 RTL should not be configured on control level but is determined by a global configuration.<br>Gets current value of property <code>rtl<\/code>.\n\nThe RTL setting swaps the areas Begin and End. Since version 1.5.2, this property is deprecated and ignored as it conflicts with the central configuration for the page.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setAreaData":{"!description":"Sets the properties of the specified area with the given values","!type":"fn(oAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes, oData: Object)","!category":"function","!static":false},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDefines the overall width of the layout\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nDefines the overall width of the layout\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.layout.BorderLayout","!category":"function","!static":false},"setEnd":{"!description":"Sets the aggregated <code>end<\/code>.","!type":"fn(oEnd: sap.ui.commons.layout.BorderLayoutArea) -> sap.ui.commons.layout.BorderLayout","!category":"function","!static":false},"setCenter":{"!description":"Sets the aggregated <code>center<\/code>.","!type":"fn(oCenter: sap.ui.commons.layout.BorderLayoutArea) -> sap.ui.commons.layout.BorderLayout","!category":"function","!static":false},"getTop":{"!description":"Gets content of aggregation <code>top<\/code>.\n\nRepresents the Top area","!type":"fn() -> sap.ui.commons.layout.BorderLayoutArea","!category":"function","!static":false},"setTop":{"!description":"Sets the aggregated <code>top<\/code>.","!type":"fn(oTop: sap.ui.commons.layout.BorderLayoutArea) -> sap.ui.commons.layout.BorderLayout","!category":"function","!static":false},"addContent":{"!description":"Adds controls to the specified area","!type":"fn(oAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes, oControls: sap.ui.core.Control)","!category":"function","!static":false},"getCenter":{"!description":"Gets content of aggregation <code>center<\/code>.\n\nRepresents the Center area","!type":"fn() -> sap.ui.commons.layout.BorderLayoutArea","!category":"function","!static":false},"removeAllContent":{"!description":"Removes all content from an area","!type":"fn(oAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes)","!category":"function","!static":false},"destroyEnd":{"!description":"Destroys the end in the aggregation <code>end<\/code>.","!type":"fn() -> sap.ui.commons.layout.BorderLayout","!category":"function","!static":false},"destroyBottom":{"!description":"Destroys the bottom in the aggregation <code>bottom<\/code>.","!type":"fn() -> sap.ui.commons.layout.BorderLayout","!category":"function","!static":false},"getContent":{"!description":"Returns all controls inside the specified area inside an array","!type":"fn(oAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes) -> [sap.ui.core.Control]","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.BorderLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!constructorDescription":"Constructor for a new layout/BorderLayout.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getRtl rtl} : boolean (default: false)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTop top} : sap.ui.commons.layout.BorderLayoutArea<\/li>\n<li>{@link #getBegin begin} : sap.ui.commons.layout.BorderLayoutArea<\/li>\n<li>{@link #getCenter center} : sap.ui.commons.layout.BorderLayoutArea<\/li>\n<li>{@link #getEnd end} : sap.ui.commons.layout.BorderLayoutArea<\/li>\n<li>{@link #getBottom bottom} : sap.ui.commons.layout.BorderLayoutArea<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setBegin":{"!description":"Sets the aggregated <code>begin<\/code>.","!type":"fn(oBegin: sap.ui.commons.layout.BorderLayoutArea) -> sap.ui.commons.layout.BorderLayout","!category":"function","!static":false},"destroyTop":{"!description":"Destroys the top in the aggregation <code>top<\/code>.","!type":"fn() -> sap.ui.commons.layout.BorderLayout","!category":"function","!static":false},"destroyCenter":{"!description":"Destroys the center in the aggregation <code>center<\/code>.","!type":"fn() -> sap.ui.commons.layout.BorderLayout","!category":"function","!static":false},"getAreaById":{"!description":"Returns the object of the specified area. If the area does not exist, the area will be created and returned.","!type":"fn(oAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes) -> sap.ui.commons.layout.BorderLayoutArea","!category":"function","!static":false},"insertContent":{"!description":"Inserts controls to an area at a given index.","!type":"fn(oAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes, iIndex: Number, oControl: sap.ui.core.Control)","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Page<\/code> control.<br>Based upon the border layout as it comes with the Java standard. Using this layout, you are able to divide your available UI space into five areas whose sizes can be defined. These areas are: Top: Header; Bottom: Footer; Begin: Left/right-hand side panel; Center: Content area\nin the middle; End: Right/left-hand side panel.","getArea":{"!description":"Returns the area of the given type. If the area does not exist, it will be created when create is set to true.","!type":"fn(oAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes, bCreate: Boolean) -> sap.ui.commons.layout.BorderLayoutAreaTypes","!category":"function","!static":false},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nDefines the overall height of the layout\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.layout.BorderLayout","!category":"function","!static":false},"setBottom":{"!description":"Sets the aggregated <code>bottom<\/code>.","!type":"fn(oBottom: sap.ui.commons.layout.BorderLayoutArea) -> sap.ui.commons.layout.BorderLayout","!category":"function","!static":false},"createArea":{"!description":"Creates the specified area and adds the given controls to it. Returns the created area.","!type":"fn(oAreaId: sap.ui.commons.layout.BorderLayoutAreaTypes, oControls: sap.ui.core.Control) -> sap.ui.commons.layout.BorderLayoutArea","!category":"function","!static":false},"setRtl":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.5.2 RTL should not be configured on control level but is determined by a global configuration.<br>Sets a new value for property <code>rtl<\/code>.\n\nThe RTL setting swaps the areas Begin and End. Since version 1.5.2, this property is deprecated and ignored as it conflicts with the central configuration for the page.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bRtl: Boolean) -> sap.ui.commons.layout.BorderLayout","!category":"function","!static":false},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.layout.BorderLayout.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.layout.MatrixLayoutRow":{"indexOfCell":{"!description":"Checks for the provided <code>sap.ui.commons.layout.MatrixLayoutCell<\/code> in the aggregation <code>cells<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oCell: sap.ui.commons.layout.MatrixLayoutCell) -> Number","!category":"function","!static":false},"getCells":{"!description":"Gets content of aggregation <code>cells<\/code>.\n\nThe matrix layout row's individual cells.","!type":"fn() -> [sap.ui.commons.layout.MatrixLayoutCell]","!category":"function","!static":false},"removeStyleClass":{"!description":"Removes the given string from the list of custom style classes that have been set previously.\nRegular style classes like \"sapUiBtn\" cannot be removed.\n\nReturns <code>this<\/code> to allow method chaining","!type":"fn(sStyleClass: String) -> sap.ui.commons.layout.MatrixLayoutRow","!category":"function","!static":false},"insertCell":{"!description":"Inserts a cell into the aggregation <code>cells<\/code>.","!type":"fn(oCell: sap.ui.commons.layout.MatrixLayoutCell, iIndex: Number) -> sap.ui.commons.layout.MatrixLayoutRow","!category":"function","!static":false},"destroyCells":{"!description":"Destroys all the cells in the aggregation <code>cells<\/code>.","!type":"fn() -> sap.ui.commons.layout.MatrixLayoutRow","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.MatrixLayoutRow with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"addCell":{"!description":"Adds some cell to the aggregation <code>cells<\/code>.","!type":"fn(oCell: sap.ui.commons.layout.MatrixLayoutCell) -> sap.ui.commons.layout.MatrixLayoutRow","!category":"function","!static":false},"removeAllCells":{"!description":"Removes all the controls from the aggregation <code>cells<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.layout.MatrixLayoutCell]","!category":"function","!static":false},"!constructorDescription":"Constructor for a new layout/MatrixLayoutRow.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getCells cells} : sap.ui.commons.layout.MatrixLayoutCell[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/commons/layout/MatrixLayoutRow","hasStyleClass":{"!description":"Returns true if the given style class string is valid and if this Element has this style class set via a previous call to addStyleClass().","!type":"fn(sStyleClass: String) -> Boolean","!category":"function","!static":false},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nHeight of the row.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.ui.layout.Grid<\/code> control.<br>\nNon-control element used as part of a matrix layout's inner structure.","setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nHeight of the row.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.layout.MatrixLayoutRow","!category":"function","!static":false},"!category":"class","addStyleClass":{"!description":"The string given as \"sStyleClass\" will be added to the \"class\" attribute of this element's root HTML element.\n\nThis method is intended to be used to mark controls as being of a special type for which\nspecial styling can be provided using CSS selectors that reference this style class name.\n\n<pre>\nExample:\nmyButton.addStyleClass(\"myRedTextButton\"); // add a CSS class to one button instance\n\n...and in CSS:\n.myRedTextButton {\ncolor: red;\n}\n<\/pre>\n\nThis will add the CSS class \"myRedTextButton\" to the Button HTML and the CSS code above will then\nmake the text in this particular button red.\n\nOnly characters allowed inside HTML attributes are allowed.\nQuotes are not allowed and this method will ignore any strings containing quotes.\nStrings containing spaces are interpreted as ONE custom style class (even though CSS selectors interpret them\nas different classes) and can only removed later by calling removeStyleClass() with exactly the\nsame (space-containing) string as parameter.\nMultiple calls with the same sStyleClass will have no different effect than calling once.\nIf sStyleClass is null, the call is ignored.\n\nReturns <code>this<\/code> to allow method chaining","!type":"fn(sStyleClass: String) -> sap.ui.commons.layout.MatrixLayoutRow","!category":"function","!static":false},"removeCell":{"!description":"Removes a cell from the aggregation <code>cells<\/code>.","!type":"fn(vCell: Number | String | sap.ui.commons.layout.MatrixLayoutCell) -> sap.ui.commons.layout.MatrixLayoutCell","!category":"function","!static":false},"!proto":"sap.ui.core.Element","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.layout.MatrixLayoutRow.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.ToolbarSeparator":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Toolbar<\/code> control.<br>A small vertical line that is generally added to the tool bar between the items to visually separate them.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.ToolbarSeparator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"getDesign":{"!description":"Gets current value of property <code>design<\/code>.\n\nDesign of the Separator.","!type":"fn() -> sap.ui.commons.ToolbarSeparatorDesign","!category":"function","!static":false},"!category":"class","getDisplayVisualSeparator":{"!description":"Gets current value of property <code>displayVisualSeparator<\/code>.\n\nWhen set to false, there is no visual indication of separation by a vertical line but by a wider space.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setDisplayVisualSeparator":{"!description":"Sets a new value for property <code>displayVisualSeparator<\/code>.\n\nWhen set to false, there is no visual indication of separation by a vertical line but by a wider space.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bDisplayVisualSeparator: Boolean) -> sap.ui.commons.ToolbarSeparator","!category":"function","!static":false},"!constructorDescription":"Constructor for a new ToolbarSeparator.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDisplayVisualSeparator displayVisualSeparator} : boolean (default: true)<\/li>\n<li>{@link #getDesign design} : sap.ui.commons.ToolbarSeparatorDesign<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/commons/ToolbarSeparator","setDesign":{"!description":"Sets a new value for property <code>design<\/code>.\n\nDesign of the Separator.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sDesign: sap.ui.commons.ToolbarSeparatorDesign) -> sap.ui.commons.ToolbarSeparator","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.ToolbarSeparator.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Element"},"sap.ui.commons.RowRepeater_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RowRepeater with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.RowRepeater"},"sap.ui.commons.Toolbar":{"insertRightItem":{"!description":"Inserts a rightItem into the aggregation <code>rightItems<\/code>.","!type":"fn(oRightItem: sap.ui.commons.ToolbarItem, iIndex: Number) -> sap.ui.commons.Toolbar","!category":"function","!static":false},"removeItem":{"!description":"Removes a item from the aggregation <code>items<\/code>.","!type":"fn(vItem: Number | String | sap.ui.commons.ToolbarItem) -> sap.ui.commons.ToolbarItem","!category":"function","!static":false},"setStandalone":{"!description":"Sets a new value for property <code>standalone<\/code>.\n\nPer default, tool bars have the stand alone status.\nAlternatively, they can be nested in other controls and then inherit the design from their parent control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bStandalone: Boolean) -> sap.ui.commons.Toolbar","!category":"function","!static":false},"getDesign":{"!description":"Gets current value of property <code>design<\/code>.\n\nDesign settings are theme-dependent.\n\nDefault value is <code>Flat<\/code>.","!type":"fn() -> sap.ui.commons.ToolbarDesign","!category":"function","!static":false},"addItem":{"!description":"Adds some item to the aggregation <code>items<\/code>.","!type":"fn(oItem: sap.ui.commons.ToolbarItem) -> sap.ui.commons.Toolbar","!category":"function","!static":false},"!module":"sap/ui/commons/Toolbar","indexOfItem":{"!description":"Checks for the provided <code>sap.ui.commons.ToolbarItem<\/code> in the aggregation <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oItem: sap.ui.commons.ToolbarItem) -> Number","!category":"function","!static":false},"indexOfRightItem":{"!description":"Checks for the provided <code>sap.ui.commons.ToolbarItem<\/code> in the aggregation <code>rightItems<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oRightItem: sap.ui.commons.ToolbarItem) -> Number","!category":"function","!static":false},"removeAllRightItems":{"!description":"Removes all the controls from the aggregation <code>rightItems<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.ToolbarItem]","!category":"function","!static":false},"getStandalone":{"!description":"Gets current value of property <code>standalone<\/code>.\n\nPer default, tool bars have the stand alone status.\nAlternatively, they can be nested in other controls and then inherit the design from their parent control.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getRightItems":{"!description":"Gets content of aggregation <code>rightItems<\/code>.\n\nAggregating the right side tool bar items.","!type":"fn() -> [sap.ui.commons.ToolbarItem]","!category":"function","!static":false},"removeRightItem":{"!description":"Removes a rightItem from the aggregation <code>rightItems<\/code>.","!type":"fn(vRightItem: Number | String | sap.ui.commons.ToolbarItem) -> sap.ui.commons.ToolbarItem","!category":"function","!static":false},"!category":"class","addRightItem":{"!description":"Adds some rightItem to the aggregation <code>rightItems<\/code>.","!type":"fn(oRightItem: sap.ui.commons.ToolbarItem) -> sap.ui.commons.Toolbar","!category":"function","!static":false},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nWhen there is not enough space for the toolbar to display all items, the rightmost items are overflowing into a drop-down menu.\n\nDefault value is <code>auto<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nWhen there is not enough space for the toolbar to display all items, the rightmost items are overflowing into a drop-down menu.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>auto<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Toolbar","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Toolbar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!constructorDescription":"Constructor for a new Toolbar.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getDesign design} : sap.ui.commons.ToolbarDesign (default: Flat)<\/li>\n<li>{@link #getStandalone standalone} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.commons.ToolbarItem[] (default)<\/li>\n<li>{@link #getRightItems rightItems} : sap.ui.commons.ToolbarItem[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","destroyRightItems":{"!description":"Destroys all the rightItems in the aggregation <code>rightItems<\/code>.","!type":"fn() -> sap.ui.commons.Toolbar","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Toolbar<\/code> control.<br>A horizontal row of items where in many cases the single toolbar items are buttons containing icons. Note that all controls with the\nsap.ui.commons.ToolbarItem interface can be used as item: Button, ComboBox, TextField.","getItems":{"!description":"Gets content of aggregation <code>items<\/code>.\n\nAggregating the tool bar items.","!type":"fn() -> [sap.ui.commons.ToolbarItem]","!category":"function","!static":false},"destroyItems":{"!description":"Destroys all the items in the aggregation <code>items<\/code>.","!type":"fn() -> sap.ui.commons.Toolbar","!category":"function","!static":false},"removeAllItems":{"!description":"Removes all the controls from the aggregation <code>items<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.ToolbarItem]","!category":"function","!static":false},"insertItem":{"!description":"Inserts a item into the aggregation <code>items<\/code>.","!type":"fn(oItem: sap.ui.commons.ToolbarItem, iIndex: Number) -> sap.ui.commons.Toolbar","!category":"function","!static":false},"setDesign":{"!description":"Sets a new value for property <code>design<\/code>.\n\nDesign settings are theme-dependent.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Flat<\/code>.","!type":"fn(sDesign: sap.ui.commons.ToolbarDesign) -> sap.ui.commons.Toolbar","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Toolbar.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Control"},"sap.ui.commons.Carousel":{"getVisibleItems":{"!description":"Gets current value of property <code>visibleItems<\/code>.\n\nIf defined, the carousel displays the number of items defined. Items will be resized to fit the area.","!type":"fn() -> Number","!category":"function","!static":false},"showPrevious":{"!description":"Shows the previous item in carousel. This can be only used after the component is rendered.","!type":"fn()","!category":"function","!static":false},"getAnimationDuration":{"!description":"Gets current value of property <code>animationDuration<\/code>.\n\nDuration for animation when navigating through the contents of the Carousel\n\nDefault value is <code>500<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"onswipeleft":{"!description":"If the device supports touch gestures and left swipe is triggered shows the next carousel item","!type":"fn(oEvent: jQuery.Event)","!category":"function","!static":false},"showNext":{"!description":"Shows the next item in carousel. This can be only used after the component is rendered.","!type":"fn()","!category":"function","!static":false},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.ui.core.Control) -> Number","!category":"function","!static":false},"bindContent":{"!description":"Binds aggregation <code>content<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!type":"fn(oBindingInfo: Object) -> sap.ui.commons.Carousel","!category":"function","!static":false},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"calculateAndSetSize":{"!description":"Calculates and sets the size of the carousel, its items and its buttons","!type":"fn()","!category":"function","!static":false},"setDefaultItemWidth":{"!description":"Sets a new value for property <code>defaultItemWidth<\/code>.\n\nDefault width of the item in a carousel if no height can be determined\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>150<\/code>.","!type":"fn(iDefaultItemWidth: Number) -> sap.ui.commons.Carousel","!category":"function","!static":false},"!module":"sap/ui/commons/Carousel","getFirstVisibleIndex":{"!description":"Gets current value of property <code>firstVisibleIndex<\/code>.\n\nThe index of the element in the content aggreation which is displayed first on rendering\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!type":"fn() -> sap.ui.commons.Carousel","!category":"function","!static":false},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nDetermines the height of the Carousel","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setAnimationDuration":{"!description":"Sets a new value for property <code>animationDuration<\/code>.\n\nDuration for animation when navigating through the contents of the Carousel\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>500<\/code>.","!type":"fn(iAnimationDuration: Number) -> sap.ui.commons.Carousel","!category":"function","!static":false},"getDefaultItemHeight":{"!description":"Gets current value of property <code>defaultItemHeight<\/code>.\n\nDefault height of the item in a carousel if no height can be determined\n\nDefault value is <code>150<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"!category":"class","setOrientation":{"!description":"Sets a new value for property <code>orientation<\/code>.\n\nDetermines the orientation of the Carousel. Can be either \"horizontal\" or \"vertical\"\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>horizontal<\/code>.","!type":"fn(sOrientation: sap.ui.commons.enums.Orientation) -> sap.ui.commons.Carousel","!category":"function","!static":false},"setFirstVisibleIndex":{"!description":"Setter for property <code>firstVisibleIndex<\/code>.\n\nDefault value is <code>0<\/code>","!type":"fn(iFirstVisibleIndex: Number) -> sap.ui.commons.Carousel","!category":"function","!static":false},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDetermines the width of the Carousel","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nDetermines the width of the Carousel\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Carousel","!category":"function","!static":false},"setVisibleItems":{"!description":"Sets a new value for property <code>visibleItems<\/code>.\n\nIf defined, the carousel displays the number of items defined. Items will be resized to fit the area.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(iVisibleItems: Number) -> sap.ui.commons.Carousel","!category":"function","!static":false},"getHandleSize":{"!description":"Gets current value of property <code>handleSize<\/code>.\n\nDetermines the size of the handle in pixels. (Height for vertical carousel, width for horizontal carousel)\n\nDefault value is <code>22<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.commons.Carousel","!category":"function","!static":false},"setDefaultItemHeight":{"!description":"Sets a new value for property <code>defaultItemHeight<\/code>.\n\nDefault height of the item in a carousel if no height can be determined\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>150<\/code>.","!type":"fn(iDefaultItemHeight: Number) -> sap.ui.commons.Carousel","!category":"function","!static":false},"removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nControls which are displayed inside the Carousel","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"getOrientation":{"!description":"Gets current value of property <code>orientation<\/code>.\n\nDetermines the orientation of the Carousel. Can be either \"horizontal\" or \"vertical\"\n\nDefault value is <code>horizontal<\/code>.","!type":"fn() -> sap.ui.commons.enums.Orientation","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Carousel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"getDefaultItemWidth":{"!description":"Gets current value of property <code>defaultItemWidth<\/code>.\n\nDefault width of the item in a carousel if no height can be determined\n\nDefault value is <code>150<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"!constructorDescription":"Constructor for a new Carousel.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getOrientation orientation} : sap.ui.commons.enums.Orientation (default: horizontal)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getDefaultItemHeight defaultItemHeight} : int (default: 150)<\/li>\n<li>{@link #getDefaultItemWidth defaultItemWidth} : int (default: 150)<\/li>\n<li>{@link #getAnimationDuration animationDuration} : int (default: 500)<\/li>\n<li>{@link #getVisibleItems visibleItems} : int<\/li>\n<li>{@link #getHandleSize handleSize} : int (default: 22)<\/li>\n<li>{@link #getFirstVisibleIndex firstVisibleIndex} : int (default: 0)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Carousel<\/code> control.<br>Carousel holds multiple controls and displays them vertically or horizontally next to each other. You can define how many content items should be displayed at once or let the Carousel determine that for you. Navigation is done through buttons or keys.","insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.commons.Carousel","!category":"function","!static":false},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nDetermines the height of the Carousel\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.Carousel","!category":"function","!static":false},"unbindContent":{"!description":"Unbinds aggregation <code>content<\/code> from model data.","!type":"fn() -> sap.ui.commons.Carousel","!category":"function","!static":false},"getFocusDomRef":{"!description":"Returns the focused DOM element","!type":"fn() -> jQuery","!category":"function","!static":false},"setHandleSize":{"!description":"Sets a new value for property <code>handleSize<\/code>.\n\nDetermines the size of the handle in pixels. (Height for vertical carousel, width for horizontal carousel)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>22<\/code>.","!type":"fn(iHandleSize: Number) -> sap.ui.commons.Carousel","!category":"function","!static":false},"showElementWithId":{"!description":"Shows the element with the specified Id. This can be only used after the component is rendered.","!type":"fn(sElementId: String)","!category":"function","!static":false},"onswiperight":{"!description":"If the device supports touch gestures and right swipe is triggered shows the previous carousel item","!type":"fn(oEvent: jQuery.Event)","!category":"function","!static":false},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Carousel.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.Carousel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Carousel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Carousel"},"sap.ui.commons.Tab":{"setVerticalScrolling":{"!description":"Sets a new value for property <code>verticalScrolling<\/code>.\n\nSpecifies the vertical scrolling.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!type":"fn(sVerticalScrolling: sap.ui.core.Scrolling) -> sap.ui.commons.Tab","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Tab with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.Panel.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!constructorDescription":"Constructor for a new Tab.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVerticalScrolling verticalScrolling} : sap.ui.core.Scrolling (default: None)<\/li>\n<li>{@link #getHorizontalScrolling horizontalScrolling} : sap.ui.core.Scrolling (default: None)<\/li>\n<li>{@link #getClosable closable} : boolean (default: false)<\/li>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.commons.Panel#constructor sap.ui.commons.Panel}\ncan be used as well.","!module":"sap/ui/commons/Tab","getVerticalScrolling":{"!description":"Gets current value of property <code>verticalScrolling<\/code>.\n\nSpecifies the vertical scrolling.\n\nDefault value is <code>None<\/code>.","!type":"fn() -> sap.ui.core.Scrolling","!category":"function","!static":false},"getClosable":{"!description":"Gets current value of property <code>closable<\/code>.\n\nSpecifies whether the tab contains a close button.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.TabContainer<\/code> control.<br>Represents a single tab in a TabStrip control.","setClosable":{"!description":"Sets a new value for property <code>closable<\/code>.\n\nSpecifies whether the tab contains a close button.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bClosable: Boolean) -> sap.ui.commons.Tab","!category":"function","!static":false},"!category":"class","getHorizontalScrolling":{"!description":"Gets current value of property <code>horizontalScrolling<\/code>.\n\nSpecifies the horizontal scrolling.\n\nDefault value is <code>None<\/code>.","!type":"fn() -> sap.ui.core.Scrolling","!category":"function","!static":false},"getSelected":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 0.17.0 This property is not used. To identify the selected tab in a TabStrip selectedIndex is used.<br>Gets current value of property <code>selected<\/code>.\n\nDefines whether the tab is the active one.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setHorizontalScrolling":{"!description":"Sets a new value for property <code>horizontalScrolling<\/code>.\n\nSpecifies the horizontal scrolling.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!type":"fn(sHorizontalScrolling: sap.ui.core.Scrolling) -> sap.ui.commons.Tab","!category":"function","!static":false},"setSelected":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 0.17.0 This property is not used. To identify the selected tab in a TabStrip selectedIndex is used.<br>Sets a new value for property <code>selected<\/code>.\n\nDefines whether the tab is the active one.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bSelected: Boolean) -> sap.ui.commons.Tab","!category":"function","!static":false},"!proto":"sap.ui.commons.Panel","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Tab.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.Paginator_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Paginator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Paginator"},"sap.ui.commons.layout.ResponsiveFlowLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.ResponsiveFlowLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.ResponsiveFlowLayout.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.layout.ResponsiveFlowLayout"},"sap.ui.commons.AccordionSection_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.AccordionSection with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.AccordionSection"},"sap.ui.commons.Accordion_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Accordion with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Accordion"},"sap.ui.commons.SearchField":{"getEnableClear":{"!description":"Gets current value of property <code>enableClear<\/code>.\n\nDefines whether the clear functionality shall be active\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getShowListExpander":{"!description":"Gets current value of property <code>showListExpander<\/code>.\n\nDefines whether the list expander shall be displayed in the case of an enabled list for suggestions. This feature is deactivated on mobile devices.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setEnableCache":{"!description":"Sets a new value for property <code>enableCache<\/code>.\n\nWhen list suggestion is enabled all suggestions are cached and no suggest event is fired.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnableCache: Boolean) -> sap.ui.commons.SearchField","!category":"function","!static":false},"setShowExternalButton":{"!description":"Sets a new value for property <code>showExternalButton<\/code>.\n\nDefines whether an additional search button shall be displayed\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bShowExternalButton: Boolean) -> sap.ui.commons.SearchField","!category":"function","!static":false},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"setEnableListSuggest":{"!description":"Sets a new value for property <code>enableListSuggest<\/code>.\n\nDefines whether a pop up list shall be provided for suggestions\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnableListSuggest: Boolean) -> sap.ui.commons.SearchField","!category":"function","!static":false},"getShowExternalButton":{"!description":"Gets current value of property <code>showExternalButton<\/code>.\n\nDefines whether an additional search button shall be displayed\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!module":"sap/ui/commons/SearchField","setEditable":{"!description":"Sets a new value for property <code>editable<\/code>.\n\nNon-editable controls have different colors, depending on custom settings\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEditable: Boolean) -> sap.ui.commons.SearchField","!category":"function","!static":false},"setStartSuggestion":{"!description":"Sets a new value for property <code>startSuggestion<\/code>.\n\nMinimum length of the entered string triggering the suggestion list.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>3<\/code>.","!type":"fn(iStartSuggestion: Number) -> sap.ui.commons.SearchField","!category":"function","!static":false},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nControl width in CSS-size","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"fireSuggest":{"!description":"Fires event <code>suggest<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>value<\/code> of type <code>string<\/code>The value for which suggestions are required.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.SearchField","!category":"function","!static":false},"clearHistory":{"!description":"Clears the history of the control","!type":"fn()","!category":"function","!static":false},"setShowListExpander":{"!description":"Sets a new value for property <code>showListExpander<\/code>.\n\nDefines whether the list expander shall be displayed in the case of an enabled list for suggestions. This feature is deactivated on mobile devices.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowListExpander: Boolean) -> sap.ui.commons.SearchField","!category":"function","!static":false},"getEditable":{"!description":"Gets current value of property <code>editable<\/code>.\n\nNon-editable controls have different colors, depending on custom settings\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setEnableClear":{"!description":"Sets a new value for property <code>enableClear<\/code>.\n\nDefines whether the clear functionality shall be active\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bEnableClear: Boolean) -> sap.ui.commons.SearchField","!category":"function","!static":false},"suggest":{"!description":"Callback function used to provide the suggest values in the handler of the suggest event (only in list suggestion mode)","!type":"fn(sSSuggestValue: String, aASuggestions: [String])","!category":"function","!static":false},"!constructorDescription":"Constructor for a new SearchField.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnableListSuggest enableListSuggest} : boolean (default: true)<\/li>\n<li>{@link #getShowListExpander showListExpander} : boolean (default: true)<\/li>\n<li>{@link #getEnableClear enableClear} : boolean (default: false)<\/li>\n<li>{@link #getShowExternalButton showExternalButton} : boolean (default: false)<\/li>\n<li>{@link #getEnableCache enableCache} : boolean (default: true)<\/li>\n<li>{@link #getEnableFilterMode enableFilterMode} : boolean (default: false)<\/li>\n<li>{@link #getValue value} : string (default: )<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getMaxLength maxLength} : int (default: 0)<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getPlaceholder placeholder} : string (default: )<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Begin)<\/li>\n<li>{@link #getVisibleItemCount visibleItemCount} : int (default: 20)<\/li>\n<li>{@link #getStartSuggestion startSuggestion} : int (default: 3)<\/li>\n<li>{@link #getMaxSuggestionItems maxSuggestionItems} : int (default: 10)<\/li>\n<li>{@link #getMaxHistoryItems maxHistoryItems} : int (default: 0)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSearchProvider searchProvider} : sap.ui.core.search.SearchProvider<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:search search} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:suggest suggest} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getTextAlign":{"!description":"Gets current value of property <code>textAlign<\/code>.\n\nSets the horizontal alignment of the text\n\nDefault value is <code>Begin<\/code>.","!type":"fn() -> sap.ui.core.TextAlign","!category":"function","!static":false},"addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.commons.SearchField","!category":"function","!static":false},"setVisibleItemCount":{"!description":"Sets a new value for property <code>visibleItemCount<\/code>.\n\nDefines the number of items in the suggestion list that shall be displayed at once. If the overall number of list items is higher than the setting,\na scroll bar is provided.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>20<\/code>.","!type":"fn(iVisibleItemCount: Number) -> sap.ui.commons.SearchField","!category":"function","!static":false},"getEnableFilterMode":{"!description":"Gets current value of property <code>enableFilterMode<\/code>.\n\nDefines whether the search event should also be fired when the SearchField is empty (like a Filter field) and when the clear button (if activated) is pressed.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setEnableFilterMode":{"!description":"Sets a new value for property <code>enableFilterMode<\/code>.\n\nDefines whether the search event should also be fired when the SearchField is empty (like a Filter field) and when the clear button (if activated) is pressed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bEnableFilterMode: Boolean) -> sap.ui.commons.SearchField","!category":"function","!static":false},"getEnableListSuggest":{"!description":"Gets current value of property <code>enableListSuggest<\/code>.\n\nDefines whether a pop up list shall be provided for suggestions\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getMaxHistoryItems":{"!description":"Gets current value of property <code>maxHistoryItems<\/code>.\n\nMaximum number of history items in the suggestion list.\n0 displays and stores no history. The history is locally stored on the client. Therefore do not activate this feature when this control handles confidential data.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"!proto":"sap.ui.core.Control","getEnableCache":{"!description":"Gets current value of property <code>enableCache<\/code>.\n\nWhen list suggestion is enabled all suggestions are cached and no suggest event is fired.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getValue":{"!description":"Gets current value of property <code>value<\/code>.\n\nText that shall be displayed within the search field\n\nDefault value is <code><\/code>.","!type":"fn() -> String","!category":"function","!static":false},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nDisabled fields have different colors, and they can not be focused.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getMaxLength":{"!description":"Gets current value of property <code>maxLength<\/code>.\n\nMaximum number of characters. Value '0' means the feature is switched off.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"setMaxHistoryItems":{"!description":"Sets a new value for property <code>maxHistoryItems<\/code>.\n\nMaximum number of history items in the suggestion list.\n0 displays and stores no history. The history is locally stored on the client. Therefore do not activate this feature when this control handles confidential data.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(iMaxHistoryItems: Number) -> sap.ui.commons.SearchField","!category":"function","!static":false},"getValueState":{"!description":"Gets current value of property <code>valueState<\/code>.\n\nVisualizes warnings or errors related to the input field. Possible values: Warning, Error, Success, None.\n\nDefault value is <code>None<\/code>.","!type":"fn() -> sap.ui.core.ValueState","!category":"function","!static":false},"removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"setMaxSuggestionItems":{"!description":"Sets a new value for property <code>maxSuggestionItems<\/code>.\n\nMaximum number of suggestion items in the suggestion list.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>10<\/code>.","!type":"fn(iMaxSuggestionItems: Number) -> sap.ui.commons.SearchField","!category":"function","!static":false},"setPlaceholder":{"!description":"Sets a new value for property <code>placeholder<\/code>.\n\nPlaceholder for the input field.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!type":"fn(sPlaceholder: String) -> sap.ui.commons.SearchField","!category":"function","!static":false},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"attachSearch":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>search<\/code> event of this <code>sap.ui.commons.SearchField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.SearchField<\/code> itself.\n\nEvent which is fired when the user triggers a search","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.SearchField","!category":"function","!static":false},"setValueState":{"!description":"Sets a new value for property <code>valueState<\/code>.\n\nVisualizes warnings or errors related to the input field. Possible values: Warning, Error, Success, None.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!type":"fn(sValueState: sap.ui.core.ValueState) -> sap.ui.commons.SearchField","!category":"function","!static":false},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.ui.commons.SearchField","!category":"function","!static":false},"!category":"class","setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nDisabled fields have different colors, and they can not be focused.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.SearchField","!category":"function","!static":false},"fireSearch":{"!description":"Fires event <code>search<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>query<\/code> of type <code>string<\/code>The search query<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.SearchField","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nControl width in CSS-size\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.SearchField","!category":"function","!static":false},"attachSuggest":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>suggest<\/code> event of this <code>sap.ui.commons.SearchField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.SearchField<\/code> itself.\n\nEvent which is fired when new suggest values are required.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.SearchField","!category":"function","!static":false},"detachSearch":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>search<\/code> event of this <code>sap.ui.commons.SearchField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.SearchField","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.SearchField with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"detachSuggest":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>suggest<\/code> event of this <code>sap.ui.commons.SearchField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.SearchField","!category":"function","!static":false},"getMaxSuggestionItems":{"!description":"Gets current value of property <code>maxSuggestionItems<\/code>.\n\nMaximum number of suggestion items in the suggestion list.\n\nDefault value is <code>10<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"setTextAlign":{"!description":"Sets a new value for property <code>textAlign<\/code>.\n\nSets the horizontal alignment of the text\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Begin<\/code>.","!type":"fn(sTextAlign: sap.ui.core.TextAlign) -> sap.ui.commons.SearchField","!category":"function","!static":false},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"setValue":{"!description":"Sets a new value for property <code>value<\/code>.\n\nText that shall be displayed within the search field\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!type":"fn(sValue: String) -> sap.ui.commons.SearchField","!category":"function","!static":false},"destroySearchProvider":{"!description":"Destroys the searchProvider in the aggregation <code>searchProvider<\/code>.","!type":"fn() -> sap.ui.commons.SearchField","!category":"function","!static":false},"setMaxLength":{"!description":"Sets a new value for property <code>maxLength<\/code>.\n\nMaximum number of characters. Value '0' means the feature is switched off.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(iMaxLength: Number) -> sap.ui.commons.SearchField","!category":"function","!static":false},"getPlaceholder":{"!description":"Gets current value of property <code>placeholder<\/code>.\n\nPlaceholder for the input field.\n\nDefault value is <code><\/code>.","!type":"fn() -> String","!category":"function","!static":false},"getSearchProvider":{"!description":"Gets content of aggregation <code>searchProvider<\/code>.\n\nSearch provider instance which handles the suggestions for this SearchField (e.g. Open Search Protocol).","!type":"fn() -> sap.ui.core.search.SearchProvider","!category":"function","!static":false},"getStartSuggestion":{"!description":"Gets current value of property <code>startSuggestion<\/code>.\n\nMinimum length of the entered string triggering the suggestion list.\n\nDefault value is <code>3<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.SearchField<\/code> control.<br>Allows the user to type search queries and to trigger the search. Optionally, suggestions can be added.","getVisibleItemCount":{"!description":"Gets current value of property <code>visibleItemCount<\/code>.\n\nDefines the number of items in the suggestion list that shall be displayed at once. If the overall number of list items is higher than the setting,\na scroll bar is provided.\n\nDefault value is <code>20<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"setSearchProvider":{"!description":"Sets the aggregated <code>searchProvider<\/code>.","!type":"fn(oSearchProvider: sap.ui.core.search.SearchProvider) -> sap.ui.commons.SearchField","!category":"function","!static":false},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.SearchField.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.RadioButtonGroup":{"removeItem":{"!description":"Removes a item from the aggregation <code>items<\/code>.","!type":"fn(vItem: Number | String | sap.ui.core.Item) -> sap.ui.core.Item","!category":"function","!static":false},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nEnables/disables the RadioButtonGroup. If it is disabled all RadioButtons will be displayed as disabled.\nThe enabled property of the Item will not be used in this case. If the RadioButtonGroup is enabled, the\nenabled property of the Item will define if a RadioButton is enabled or not.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"bindItems":{"!description":"Binds aggregation <code>items<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!type":"fn(oBindingInfo: Object) -> sap.ui.commons.RadioButtonGroup","!category":"function","!static":false},"addItem":{"!description":"Adds some item to the aggregation <code>items<\/code>.","!type":"fn(oItem: sap.ui.core.Item) -> sap.ui.commons.RadioButtonGroup","!category":"function","!static":false},"!module":"sap/ui/commons/RadioButtonGroup","getColumns":{"!description":"Gets current value of property <code>columns<\/code>.\n\nDetermines the maximum number of RadioButtons displayed in one line.\n\nDefault value is <code>1<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"getValueState":{"!description":"Gets current value of property <code>valueState<\/code>.\n\nТhe value state to be displayed for the RadioButton. Possible values are: sap.ui.core.ValueState.Error,\nsap.ui.core.ValueState.Warning, sap.ui.core.ValueState.Success and sap.ui.core.ValueState.None.\nNote: Setting this attribute to sap.ui.core.ValueState.Error when the accessibility feature is enabled,\nsets the value of the invalid property for the whole RadioButtonGroup to true.\n\nDefault value is <code>None<\/code>.","!type":"fn() -> sap.ui.core.ValueState","!category":"function","!static":false},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>select<\/code> event of this <code>sap.ui.commons.RadioButtonGroup<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.RadioButtonGroup<\/code> itself.\n\nFires when selection is changed by user interaction.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.RadioButtonGroup","!category":"function","!static":false},"indexOfItem":{"!description":"Checks for the provided <code>sap.ui.core.Item<\/code> in the aggregation <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oItem: sap.ui.core.Item) -> Number","!category":"function","!static":false},"unbindItems":{"!description":"Unbinds aggregation <code>items<\/code> from model data.","!type":"fn() -> sap.ui.commons.RadioButtonGroup","!category":"function","!static":false},"setSelectedItem":{"!description":"Sets the Item as selected and removes the selection from the previous one.","!type":"fn(oSelectedItem: sap.ui.core.Item)","!category":"function","!static":false},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"setEditable":{"!description":"Sets a new value for property <code>editable<\/code>.\n\nSpecifies whether the user can change the selected value of the RadioButtonGroup.\nWhen the property is set to false, the control obtains visual styles\ndifferent from its visual styles for the normal and the disabled state.\nAdditionally the control is no longer interactive, but can receive focus.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEditable: Boolean) -> sap.ui.commons.RadioButtonGroup","!category":"function","!static":false},"setValueState":{"!description":"Sets a new value for property <code>valueState<\/code>.\n\nТhe value state to be displayed for the RadioButton. Possible values are: sap.ui.core.ValueState.Error,\nsap.ui.core.ValueState.Warning, sap.ui.core.ValueState.Success and sap.ui.core.ValueState.None.\nNote: Setting this attribute to sap.ui.core.ValueState.Error when the accessibility feature is enabled,\nsets the value of the invalid property for the whole RadioButtonGroup to true.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!type":"fn(sValueState: sap.ui.core.ValueState) -> sap.ui.commons.RadioButtonGroup","!category":"function","!static":false},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.ui.commons.RadioButtonGroup","!category":"function","!static":false},"!category":"class","setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nEnables/disables the RadioButtonGroup. If it is disabled all RadioButtons will be displayed as disabled.\nThe enabled property of the Item will not be used in this case. If the RadioButtonGroup is enabled, the\nenabled property of the Item will define if a RadioButton is enabled or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.RadioButtonGroup","!category":"function","!static":false},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDefines the width of the RadioButtonGroup.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nDefines the width of the RadioButtonGroup.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.RadioButtonGroup","!category":"function","!static":false},"clone":{"!description":"Creates a new instance of RadioButtonGroup, with the same settings as the RadioButtonGroup\non which the method is called.\nEvent handlers are not cloned.","!type":"fn() -> sap.ui.commons.RadioButtonGroup","!category":"function","!static":false},"getEditable":{"!description":"Gets current value of property <code>editable<\/code>.\n\nSpecifies whether the user can change the selected value of the RadioButtonGroup.\nWhen the property is set to false, the control obtains visual styles\ndifferent from its visual styles for the normal and the disabled state.\nAdditionally the control is no longer interactive, but can receive focus.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setColumns":{"!description":"Sets a new value for property <code>columns<\/code>.\n\nDetermines the maximum number of RadioButtons displayed in one line.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1<\/code>.","!type":"fn(iColumns: Number) -> sap.ui.commons.RadioButtonGroup","!category":"function","!static":false},"fireSelect":{"!description":"Fires event <code>select<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>selectedIndex<\/code> of type <code>int<\/code>Index of the selected RadioButton.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.RadioButtonGroup","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RadioButtonGroup with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>select<\/code> event of this <code>sap.ui.commons.RadioButtonGroup<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.RadioButtonGroup","!category":"function","!static":false},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"!constructorDescription":"Constructor for a new RadioButtonGroup.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getColumns columns} : int (default: 1)<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getSelectedIndex selectedIndex} : int (default: 0)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.core.Item[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getSelectedItem":{"!description":"When no item is selected, \"null\" is returned.","!type":"fn() -> sap.ui.core.Item","!category":"function","!static":false},"addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.commons.RadioButtonGroup","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.RadioButtonGroup<\/code> control.<br>The RadioButtonGroup is a basic control that is used to provide area for making interactive\nchoice out of a set of options. It represents a list with items where exactly one item can\nbe selected in a session. For the representation of the single group entries, the RadioButton\nitems are created automatically. For the RadioButton choice, mouse and keyboard navigation\nusage is supported.","getItems":{"!description":"Gets content of aggregation <code>items<\/code>.\n\nThe RadioButtons of this RadioButtonGroup.","!type":"fn() -> [sap.ui.core.Item]","!category":"function","!static":false},"destroyItems":{"!description":"Destroys all the items in the aggregation <code>items<\/code>.","!type":"fn() -> sap.ui.commons.RadioButtonGroup","!category":"function","!static":false},"removeAllItems":{"!description":"Removes all the controls from the aggregation <code>items<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Item]","!category":"function","!static":false},"setSelectedIndex":{"!description":"Sets a new value for property <code>selectedIndex<\/code>.\n\nThe index of the selected/checked RadioButton.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(iSelectedIndex: Number) -> sap.ui.commons.RadioButtonGroup","!category":"function","!static":false},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"getSelectedIndex":{"!description":"Gets current value of property <code>selectedIndex<\/code>.\n\nThe index of the selected/checked RadioButton.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"insertItem":{"!description":"Inserts a item into the aggregation <code>items<\/code>.","!type":"fn(oItem: sap.ui.core.Item, iIndex: Number) -> sap.ui.commons.RadioButtonGroup","!category":"function","!static":false},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.RadioButtonGroup.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.RoadMap_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RoadMap with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.RoadMap"},"sap.ui.commons.FormattedTextView":{"setHtmlText":{"!description":"Sets the HTML text to be displayed.","!type":"fn(sText: String)","!category":"function","!static":false},"getControls":{"!description":"Gets content of aggregation <code>controls<\/code>.\n\nArray of controls that should be replaced within htmlText.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"setAccessibleRole":{"!description":"Sets a new value for property <code>accessibleRole<\/code>.\n\nThe ARIA role for the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Document<\/code>.","!type":"fn(sAccessibleRole: sap.ui.core.AccessibleRole) -> sap.ui.commons.FormattedTextView","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.FormattedTextView with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!constructorDescription":"Constructor for a new FormattedTextView.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAccessibleRole accessibleRole} : sap.ui.core.AccessibleRole (default: Document)<\/li>\n<li>{@link #getHtmlText htmlText} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getControls controls} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setContent":{"!description":"Sets text with placeholders and given array of controls.","!type":"fn(sHtmlText: String, aControls: sap.ui.commons.FormattedTextViewControl)","!category":"function","!static":false},"!module":"sap/ui/commons/FormattedTextView","removeAllControls":{"!description":"Removes all the controls from the aggregation <code>controls<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"removeControl":{"!description":"Removes a control from the aggregation <code>controls<\/code>.","!type":"fn(vControl: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"indexOfControl":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>controls<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oControl: sap.ui.core.Control) -> Number","!category":"function","!static":false},"insertControl":{"!description":"Inserts a control into the aggregation <code>controls<\/code>.","!type":"fn(oControl: sap.ui.core.Control, iIndex: Number) -> sap.ui.commons.FormattedTextView","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.ui.core.HTML<\/code> control.<br>The FormattedTextView control allows the usage of a limited set of HTML tags for display.","getAccessibleRole":{"!description":"Gets current value of property <code>accessibleRole<\/code>.\n\nThe ARIA role for the control.\n\nDefault value is <code>Document<\/code>.","!type":"fn() -> sap.ui.core.AccessibleRole","!category":"function","!static":false},"destroyControls":{"!description":"Destroys all the controls in the aggregation <code>controls<\/code>.","!type":"fn() -> sap.ui.commons.FormattedTextView","!category":"function","!static":false},"!category":"class","addControl":{"!description":"Adds some control to the aggregation <code>controls<\/code>.","!type":"fn(oControl: sap.ui.core.Control) -> sap.ui.commons.FormattedTextView","!category":"function","!static":false},"hasControls":{"!description":"Indicates whether the FormattedTextView contains other controls.","!type":"fn() -> Boolean","!category":"function","!static":false},"getHtmlText":{"!description":"Gets current value of property <code>htmlText<\/code>.\n\nDetermines text with placeholders.\n\nDefault value is <code><\/code>.","!type":"fn() -> String","!category":"function","!static":false},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.FormattedTextView.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.layout.AbsoluteLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.AbsoluteLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.layout.AbsoluteLayout"},"sap.ui.commons.enums.BorderDesign":{"!description":"Value set for the border design of areas","!category":"static class","None":{"!description":"Suppresses the border","!type":"String","!category":"enum"},"Box":{"!description":"Draws the border as a box around the area","!type":"String","!category":"enum"},"!module":"sap/ui/commons/library"},"sap.ui.commons.enums.Orientation":{"vertical":{"!description":"Vertical orientation","!type":"String","!category":"enum"},"!description":"Orientation of a UI element","horizontal":{"!description":"Horizontal orientation","!type":"String","!category":"enum"},"!category":"static class","!module":"sap/ui/commons/library"},"sap.ui.commons.layout.BorderLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.BorderLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.layout.BorderLayout"},"sap.ui.commons.layout.PositionContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.PositionContainer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.layout.PositionContainer"},"sap.ui.commons.Label":{"getTextDirection":{"!description":"Gets current value of property <code>textDirection<\/code>.\n\nDetermines the text direction - right-to-left (RTL) and left-to-right (LTR).\n\nDefault value is <code>Inherit<\/code>.","!type":"fn() -> sap.ui.core.TextDirection","!category":"function","!static":false},"getDesign":{"!description":"Gets current value of property <code>design<\/code>.\n\nDefines whether the labels are in bold format.\n\nDefault value is <code>Standard<\/code>.","!type":"fn() -> sap.ui.commons.LabelDesign","!category":"function","!static":false},"setRequired":{"!description":"Sets a new value for property <code>required<\/code>.\n\nAllows to enforce the required indicator even when the associated control doesn't have a getRequired method (a required property) or when the flag is not set.\nIf the associated control has a required property, the values of both required flags are combined with the OR operator, so a Label can't override a required=true value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bRequired: Boolean) -> sap.ui.commons.Label","!category":"function","!static":false},"!module":"sap/ui/commons/Label","setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nDetermines the text to be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!type":"fn(sText: String) -> sap.ui.commons.Label","!category":"function","!static":false},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nDetermines the icon to be displayed in the control.\nThis can be an URI to an image or an icon font URI.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nDetermines the text to be displayed.\n\nDefault value is <code><\/code>.","!type":"fn() -> String","!category":"function","!static":false},"setWrapping":{"!description":"Sets a new value for property <code>wrapping<\/code>.\n\nSpecifies whether a line wrapping width shall be displayed when the text value is longer than the width is.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bWrapping: Boolean) -> sap.ui.commons.Label","!category":"function","!static":false},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDetermines the control width as common CSS-size (for example, px or % as unit).\n\nDefault value is <code><\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nDetermines the control width as common CSS-size (for example, px or % as unit).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Label","!category":"function","!static":false},"getAccessibilityInfo":{"!type":"fn()","!category":"function","!static":false},"getWrapping":{"!description":"Gets current value of property <code>wrapping<\/code>.\n\nSpecifies whether a line wrapping width shall be displayed when the text value is longer than the width is.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setTextDirection":{"!description":"Sets a new value for property <code>textDirection<\/code>.\n\nDetermines the text direction - right-to-left (RTL) and left-to-right (LTR).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.ui.commons.Label","!category":"function","!static":false},"getRequiredAtBegin":{"!description":"Gets current value of property <code>requiredAtBegin<\/code>.\n\nDetermines whether the required indicator is at the beginning of the label (if set) or at the end (if not set).","!type":"fn() -> Boolean","!category":"function","!static":false},"getLabelFor":{"!description":"ID of the element which is the current target of the association <code>labelFor<\/code>, or <code>null<\/code>.","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Label with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"getRequired":{"!description":"Gets current value of property <code>required<\/code>.\n\nAllows to enforce the required indicator even when the associated control doesn't have a getRequired method (a required property) or when the flag is not set.\nIf the associated control has a required property, the values of both required flags are combined with the OR operator, so a Label can't override a required=true value.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setTextAlign":{"!description":"Sets a new value for property <code>textAlign<\/code>.\n\nDetermines the alignment of the text. Available options are <code>Begin<\/code>, <code>Center<\/code>, <code>End<\/code>, <code>Left<\/code>, and <code>Right<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Begin<\/code>.","!type":"fn(sTextAlign: sap.ui.core.TextAlign) -> sap.ui.commons.Label","!category":"function","!static":false},"!constructorDescription":"Constructor for a new Label.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDesign design} : sap.ui.commons.LabelDesign (default: Standard)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getWrapping wrapping} : boolean (default: false)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Begin)<\/li>\n<li>{@link #getRequired required} : boolean (default: false)<\/li>\n<li>{@link #getRequiredAtBegin requiredAtBegin} : boolean<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getTextAlign":{"!description":"Gets current value of property <code>textAlign<\/code>.\n\nDetermines the alignment of the text. Available options are <code>Begin<\/code>, <code>Center<\/code>, <code>End<\/code>, <code>Left<\/code>, and <code>Right<\/code>.\n\nDefault value is <code>Begin<\/code>.","!type":"fn() -> sap.ui.core.TextAlign","!category":"function","!static":false},"setRequiredAtBegin":{"!description":"Sets a new value for property <code>requiredAtBegin<\/code>.\n\nDetermines whether the required indicator is at the beginning of the label (if set) or at the end (if not set).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(bRequiredAtBegin: Boolean) -> sap.ui.commons.Label","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Label<\/code> control.<br>\nThe control is used for labeling other controls. The API provides formatting options, for example, for bold display or alignment. A label can have an icon.","isRequired":{"!description":"Checks whether the Label itself or the associated control is marked as required (they are mutually exclusive).","!type":"fn() -> Boolean","!category":"function","!static":false},"setLabelFor":{"!description":"Sets the associated <code>labelFor<\/code>.","!type":"fn(oLabelFor: sap.ui.core.Control) -> sap.ui.commons.Label","!category":"function","!static":false},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nDetermines the icon to be displayed in the control.\nThis can be an URI to an image or an icon font URI.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIcon: sap.ui.core.URI) -> sap.ui.commons.Label","!category":"function","!static":false},"setDesign":{"!description":"Sets a new value for property <code>design<\/code>.\n\nDefines whether the labels are in bold format.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Standard<\/code>.","!type":"fn(sDesign: sap.ui.commons.LabelDesign) -> sap.ui.commons.Label","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Label.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Control"},"sap.ui.commons.Label_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Label with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Label"},"sap.ui.commons.Slider":{"getValue":{"!description":"Gets current value of property <code>value<\/code>.\n\nCurrent value of the slider. (Position of the grip.)\n\n<b>Note:<\/b> If the value is not in the valid range (between <code>min<\/code> and <code>max<\/code>) it will be changed to be in the valid range.\n\nDefault value is <code>50<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"setSmallStepWidth":{"!description":"Sets a new value for property <code>smallStepWidth<\/code>.\n\nThe grip can only be moved in steps of this width.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(fSmallStepWidth: Number) -> sap.ui.commons.Slider","!category":"function","!static":false},"getMin":{"!description":"Gets current value of property <code>min<\/code>.\n\nMinimal value of the slider.\n\n<b>Note:<\/b> If <code>min<\/code> is larger than <code>max<\/code> both values will be switched\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nSwitches enabled state of the control. Disabled fields have different colors, and can not be focused.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"detachLiveChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>liveChange<\/code> event of this <code>sap.ui.commons.Slider<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.Slider","!category":"function","!static":false},"removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"!module":"sap/ui/commons/Slider","setMin":{"!description":"Sets a new value for property <code>min<\/code>.\n\nMinimal value of the slider.\n\n<b>Note:<\/b> If <code>min<\/code> is larger than <code>max<\/code> both values will be switched\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(fMin: Number) -> sap.ui.commons.Slider","!category":"function","!static":false},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nHeight of the vertical slider.\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setEditable":{"!description":"Sets a new value for property <code>editable<\/code>.\n\nUsing the slider interactively requires value \"true\".\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEditable: Boolean) -> sap.ui.commons.Slider","!category":"function","!static":false},"getLabels":{"!description":"Gets current value of property <code>labels<\/code>.\n\nLabels to be displayed instead of numbers. Attribute totalUnits and label count should be the same\n\n<b>Note:<\/b> To show the labels <code>stepLabels<\/code> must be activated.","!type":"fn() -> [String]","!category":"function","!static":false},"setMax":{"!description":"Sets a new value for property <code>max<\/code>.\n\nMaximal value of the slider\n\n<b>Note:<\/b> If <code>min<\/code> is larger than <code>max<\/code> both values will be switched\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100<\/code>.","!type":"fn(fMax: Number) -> sap.ui.commons.Slider","!category":"function","!static":false},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.ui.commons.Slider","!category":"function","!static":false},"!category":"class","setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nSwitches enabled state of the control. Disabled fields have different colors, and can not be focused.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.Slider","!category":"function","!static":false},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nWidth of the horizontal slider.\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nWidth of the horizontal slider.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Slider","!category":"function","!static":false},"getSmallStepWidth":{"!description":"Gets current value of property <code>smallStepWidth<\/code>.\n\nThe grip can only be moved in steps of this width.","!type":"fn() -> Number","!category":"function","!static":false},"setVertical":{"!description":"Sets a new value for property <code>vertical<\/code>.\n\nOrientation of slider\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bVertical: Boolean) -> sap.ui.commons.Slider","!category":"function","!static":false},"getTotalUnits":{"!description":"Gets current value of property <code>totalUnits<\/code>.\n\nNumber of units that are displayed by ticks. The PageUp and PageDown keys navigate according to these units.","!type":"fn() -> Number","!category":"function","!static":false},"setTotalUnits":{"!description":"Sets a new value for property <code>totalUnits<\/code>.\n\nNumber of units that are displayed by ticks. The PageUp and PageDown keys navigate according to these units.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(iTotalUnits: Number) -> sap.ui.commons.Slider","!category":"function","!static":false},"getEditable":{"!description":"Gets current value of property <code>editable<\/code>.\n\nUsing the slider interactively requires value \"true\".\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getStepLabels":{"!description":"Gets current value of property <code>stepLabels<\/code>.\n\nDisplay step numbers for the ticks on the slider.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Slider with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"getMax":{"!description":"Gets current value of property <code>max<\/code>.\n\nMaximal value of the slider\n\n<b>Note:<\/b> If <code>min<\/code> is larger than <code>max<\/code> both values will be switched\n\nDefault value is <code>100<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"setValue":{"!description":"Sets a new value for property <code>value<\/code>.\n\nCurrent value of the slider. (Position of the grip.)\n\n<b>Note:<\/b> If the value is not in the valid range (between <code>min<\/code> and <code>max<\/code>) it will be changed to be in the valid range.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>50<\/code>.","!type":"fn(fValue: Number) -> sap.ui.commons.Slider","!category":"function","!static":false},"!constructorDescription":"Constructor for a new <code>Slider<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getMin min} : float (default: 0)<\/li>\n<li>{@link #getMax max} : float (default: 100)<\/li>\n<li>{@link #getValue value} : float (default: 50)<\/li>\n<li>{@link #getSmallStepWidth smallStepWidth} : float<\/li>\n<li>{@link #getTotalUnits totalUnits} : int<\/li>\n<li>{@link #getStepLabels stepLabels} : boolean (default: false)<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getLabels labels} : string[]<\/li>\n<li>{@link #getVertical vertical} : boolean (default: false)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>change<\/code> event of this <code>sap.ui.commons.Slider<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.Slider","!category":"function","!static":false},"addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.commons.Slider","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Slider<\/code> control.<br>The interactive control is displayed either as a horizontal or a vertical line with a pointer and units of measurement.\nUsers can move the pointer along the line to change values with graphical support.","fireLiveChange":{"!description":"Fires event <code>liveChange<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>value<\/code> of type <code>float<\/code>Current value of the slider after a change.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.Slider","!category":"function","!static":false},"setStepLabels":{"!description":"Sets a new value for property <code>stepLabels<\/code>.\n\nDisplay step numbers for the ticks on the slider.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bStepLabels: Boolean) -> sap.ui.commons.Slider","!category":"function","!static":false},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nHeight of the vertical slider.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.Slider","!category":"function","!static":false},"fireChange":{"!description":"Fires event <code>change<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>value<\/code> of type <code>float<\/code>Current value of the slider after a change.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.Slider","!category":"function","!static":false},"attachLiveChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>liveChange<\/code> event of this <code>sap.ui.commons.Slider<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.Slider<\/code> itself.\n\nValue was changed. This event is fired during the mouse move. The normal change event is only fired by mouseup.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.Slider","!category":"function","!static":false},"getVertical":{"!description":"Gets current value of property <code>vertical<\/code>.\n\nOrientation of slider\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>change<\/code> event of this <code>sap.ui.commons.Slider<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.Slider<\/code> itself.\n\nValue was changed. This event is fired if the value has changed by an user action.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.Slider","!category":"function","!static":false},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"setLabels":{"!description":"Sets a new value for property <code>labels<\/code>.\n\nLabels to be displayed instead of numbers. Attribute totalUnits and label count should be the same\n\n<b>Note:<\/b> To show the labels <code>stepLabels<\/code> must be activated.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sLabels: [String]) -> sap.ui.commons.Slider","!category":"function","!static":false},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Slider.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.RatingIndicator":{"getValue":{"!description":"Gets current value of property <code>value<\/code>.\n\nDetermines the currently selected value. If value is set to sap.ui.commons.RatingIndicator.NoValue,\nthe averageValue is shown.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"getIconSelected":{"!description":"Gets current value of property <code>iconSelected<\/code>.\n\nThe URI to the image which shall be displayed for all selected rating symbols.\nNote that when this attribute is used, also the other icon attributes need to be set.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"getVisualMode":{"!description":"Gets current value of property <code>visualMode<\/code>.\n\nDefines how float values are visualized: Full, Half, Continuous\n(see enumeration RatingIndicatorVisualMode)\n\nDefault value is <code>Half<\/code>.","!type":"fn() -> sap.ui.commons.RatingIndicatorVisualMode","!category":"function","!static":false},"setIconHovered":{"!description":"Sets a new value for property <code>iconHovered<\/code>.\n\nThe URI to the image which is displayed when the mouse hovers onto a rating symbol.\nIf used, a requirement is that all custom icons need to have the same size.\nNote that when this attribute is used also the other icon attributes need to be set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIconHovered: sap.ui.core.URI) -> sap.ui.commons.RatingIndicator","!category":"function","!static":false},"getMaxValue":{"!description":"Gets current value of property <code>maxValue<\/code>.\n\nDetermines the number of displayed rating symbols\n\nDefault value is <code>5<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"!module":"sap/ui/commons/RatingIndicator","setAverageValue":{"!description":"Sets a new value for property <code>averageValue<\/code>.\n\nDetermines the average value. This value is shown if no value is set.\nThis can be used to display an average Value before the user votes.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(fAverageValue: Number) -> sap.ui.commons.RatingIndicator","!category":"function","!static":false},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"setEditable":{"!description":"Sets a new value for property <code>editable<\/code>.\n\nDetermines if the rating symbols can be edited.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEditable: Boolean) -> sap.ui.commons.RatingIndicator","!category":"function","!static":false},"getIconUnselected":{"!description":"Gets current value of property <code>iconUnselected<\/code>.\n\nThe URI to the image which shall be displayed for all unselected rating symbols.\nIf this attribute is used, a requirement is that all custom icons need to have the same size.\nNote that when this attribute is used also the other icon attributes need to be set.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.ui.commons.RatingIndicator","!category":"function","!static":false},"getIconHovered":{"!description":"Gets current value of property <code>iconHovered<\/code>.\n\nThe URI to the image which is displayed when the mouse hovers onto a rating symbol.\nIf used, a requirement is that all custom icons need to have the same size.\nNote that when this attribute is used also the other icon attributes need to be set.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"!category":"class","setMaxValue":{"!description":"Setter for property <code>maxValue<\/code>.\n\nDefault value is <code>5<\/code>\nMinimum value is <code>1<\/code>","!type":"fn(iMaxValue: Number) -> sap.ui.commons.RatingIndicator","!category":"function","!static":false},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"getAccessibilityInfo":{"!type":"fn()","!category":"function","!static":false},"getEditable":{"!description":"Gets current value of property <code>editable<\/code>.\n\nDetermines if the rating symbols can be edited.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setVisualMode":{"!description":"Sets a new value for property <code>visualMode<\/code>.\n\nDefines how float values are visualized: Full, Half, Continuous\n(see enumeration RatingIndicatorVisualMode)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Half<\/code>.","!type":"fn(sVisualMode: sap.ui.commons.RatingIndicatorVisualMode) -> sap.ui.commons.RatingIndicator","!category":"function","!static":false},"setIconSelected":{"!description":"Sets a new value for property <code>iconSelected<\/code>.\n\nThe URI to the image which shall be displayed for all selected rating symbols.\nNote that when this attribute is used, also the other icon attributes need to be set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIconSelected: sap.ui.core.URI) -> sap.ui.commons.RatingIndicator","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RatingIndicator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"getAverageValue":{"!description":"Gets current value of property <code>averageValue<\/code>.\n\nDetermines the average value. This value is shown if no value is set.\nThis can be used to display an average Value before the user votes.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"setValue":{"!description":"Sets a new value for property <code>value<\/code>.\n\nDetermines the currently selected value. If value is set to sap.ui.commons.RatingIndicator.NoValue,\nthe averageValue is shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(fValue: Number) -> sap.ui.commons.RatingIndicator","!category":"function","!static":false},"!constructorDescription":"Constructor for a new RatingIndicator.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getMaxValue maxValue} : int (default: 5)<\/li>\n<li>{@link #getValue value} : float (default: 0)<\/li>\n<li>{@link #getAverageValue averageValue} : float (default: 0)<\/li>\n<li>{@link #getIconSelected iconSelected} : sap.ui.core.URI<\/li>\n<li>{@link #getIconUnselected iconUnselected} : sap.ui.core.URI<\/li>\n<li>{@link #getIconHovered iconHovered} : sap.ui.core.URI<\/li>\n<li>{@link #getVisualMode visualMode} : sap.ui.commons.RatingIndicatorVisualMode (default: Half)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>change<\/code> event of this <code>sap.ui.commons.RatingIndicator<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.RatingIndicator","!category":"function","!static":false},"setIconUnselected":{"!description":"Sets a new value for property <code>iconUnselected<\/code>.\n\nThe URI to the image which shall be displayed for all unselected rating symbols.\nIf this attribute is used, a requirement is that all custom icons need to have the same size.\nNote that when this attribute is used also the other icon attributes need to be set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIconUnselected: sap.ui.core.URI) -> sap.ui.commons.RatingIndicator","!category":"function","!static":false},"bindValue":{"!description":"Binds property <code>value<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>","!type":"fn(oBindingInfo: Object) -> sap.ui.commons.RatingIndicator","!category":"function","!static":false},"addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.commons.RatingIndicator","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.RatingIndicator<\/code> control.<br>RatingIndicator is used to let the user do some rating on a given topic. The amount of\nrating symbols can be specified, as well as the URIs to the image icons which shall be\nused as rating symbols. When the user performs a rating, an event is fired.","unbindValue":{"!description":"Unbinds property <code>value<\/code> from model data.","!type":"fn() -> sap.ui.commons.RatingIndicator","!category":"function","!static":false},"fireChange":{"!description":"Fires event <code>change<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>value<\/code> of type <code>int<\/code>The value of the user rating<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.RatingIndicator","!category":"function","!static":false},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>change<\/code> event of this <code>sap.ui.commons.RatingIndicator<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.RatingIndicator<\/code> itself.\n\nThe event is fired when the user has done a rating.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.RatingIndicator","!category":"function","!static":false},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.RatingIndicator.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.MenuItemBase":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.21.0 Please use the element <code>sap.ui.unified.MenuItemBase<\/code> of the library <code>sap.ui.unified<\/code> instead.<br>Abstract base class for menu item which provides common properties and events for all concrete item implementations.","!category":"class","!constructorDescription":"Abstract base class <code>MenuItemBase<\/code> for menu item elements. Please use concrete subclasses.","!module":"sap/ui/commons/MenuItemBase","!proto":"sap.ui.unified.MenuItemBase"},"sap.ui.commons.Menu":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.21.0 Please use the control sap.ui.unified.Menu of the library sap.ui.unified instead.<br>A menu is an interactive element which provides a choice of different actions to the user. These actions (items) can also be organized in submenus.\nLike other dialog-like controls, the menu is not rendered within the control hierarchy. Instead it can be opened at a specified position via a function call.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.Menu with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.Menu.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!category":"class","!constructorDescription":"Constructor for a new Menu control.","!module":"sap/ui/commons/Menu","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Menu.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.unified.Menu"},"sap.ui.commons.MessageBox.Icon":{"INFORMATION":{"!description":"Shows the information icon in the message box.","!type":"String","!category":"enum"},"SUCCESS":{"!description":"Shows the success icon in the message box.","!type":"String","!category":"enum"},"!description":"Enumeration of the pre-defined icons that can be used in a MessageBox.","QUESTION":{"!description":"Shows the question icon in the message box.","!type":"String","!category":"enum"},"WARNING":{"!description":"Shows the warning icon in the message box.","!type":"String","!category":"enum"},"ERROR":{"!description":"Shows the error icon in the message box.","!type":"String","!category":"enum"},"!category":"static class","CRITICAL":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.9.1 The error icon is used instead<br>Shows the critical error icon in the message box.","!type":"String","!category":"enum"},"!module":"sap/ui/commons/MessageBox","NONE":{"!description":"Shows no icon in the message box.","!type":"String","!category":"enum"}},"sap.ui.commons.layout.Padding":{"End":{"!description":"\nTop and bottom padding of 2px.\nPadding of 4px towards the end of a line, in the current locale's\nwriting direction, but none towards its beginning.","!type":"String","!category":"enum"},"Both":{"!description":"\nTop and bottom padding of 2px.\nPadding of 4px towards both the beginning and end of a line.","!type":"String","!category":"enum"},"!description":"Padding, e.g. of a layout cell's content within the cell's borders.\nNote that all options except \"None\" include a padding of 2px at the top and\nbottom, and differ only in the presence of a 4px padding towards the beginning\nor end of a line, in the current locale's writing direction.","!category":"static class","None":{"!description":"\nNo padding at all.","!type":"String","!category":"enum"},"!module":"sap/ui/commons/library","Begin":{"!description":"\nTop and bottom padding of 2px.\nPadding of 4px towards the beginning of a line, in the current locale's\nwriting direction, but none towards its end.","!type":"String","!category":"enum"},"Neither":{"!description":"\nTop and bottom padding of 2px.\nNo padding towards neither the beginning nor end of a line.","!type":"String","!category":"enum"}},"sap.ui.commons.DatePicker_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.DatePicker with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.TextField.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.DatePicker"},"sap.ui.commons.form.ResponsiveLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.ResponsiveLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.ResponsiveLayout.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.form.ResponsiveLayout"},"sap.ui.commons.enums":{"Orientation":"sap.ui.commons.enums.Orientation","BorderDesign":"sap.ui.commons.enums.BorderDesign","!category":"namespace","AreaDesign":"sap.ui.commons.enums.AreaDesign"},"sap.ui.commons.layout":{"ResponsiveFlowLayout":"sap.ui.commons.layout.ResponsiveFlowLayout_obj","BackgroundDesign":"sap.ui.commons.layout.BackgroundDesign","visible":{"!description":"Whether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control","!type":"Boolean","!category":"enum"},"vAlign":{"!description":"Determines the vertical alignment of the matrix layout cell's content\nwith the cell's borders.","!type":"sap.ui.commons.layout.VAlign","!category":"enum"},"hAlign":{"!description":"Determines the horizontal alignment of the matrix layout cell's content\nwith the cell's borders.","!type":"sap.ui.commons.layout.HAlign","!category":"enum"},"columns":{"!description":"Number of columns. If not specified, the number of columns will be determined from the given cells.","!type":"Number","!category":"enum"},"BorderLayoutAreaTypes":"sap.ui.commons.layout.BorderLayoutAreaTypes","widths":{"!description":"Widths of the columns. Use an array to define the widths of the columns.\nIf a column shall have an automatical sizing enter \"auto\" for this column width.","!type":"[sap.ui.core.CSSSize]","!category":"enum"},"busy":{"!description":"Whether the control is currently in busy state.","!type":"Boolean","!category":"enum"},"padding":{"!description":"Determines the padding of the matrix layout cell's content within the\ncell's borders. The default value is appropriate for all cells in a\nform-like layout. Consider to remove the padding on the outer layout in\ncase of nesting.","!type":"sap.ui.commons.layout.Padding","!category":"enum"},"centerHorizontally":{"!description":"Indicates whether this container shall be centered horizontally within the AbsoluteLayout area.\nThe values of the attributes left and right are ignored when this feature is activated.","!type":"Boolean","!category":"enum"},"PositionContainer":"sap.ui.commons.layout.PositionContainer_obj","areaId":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.3.3 Redundant to the aggregation by the parent border layout.<br>Defines which area the element represents: top, begin, center, end, bottom","!type":"sap.ui.commons.layout.BorderLayoutAreaTypes","!category":"enum"},"horizontalScrolling":{"!description":"'Auto', 'Scroll', 'Hidden', and 'None' are the available values for setting the vertical scrolling mode.","!type":"sap.ui.core.Scrolling","!category":"enum"},"height":{"!description":"Height of the row.","!type":"sap.ui.core.CSSSize","!category":"enum"},"colSpan":{"!description":"Determines how many columns of the underlying grid structure are occupied\nby this matrix layout cell.","!type":"Number","!category":"enum"},"HAlign":"sap.ui.commons.layout.HAlign","layoutFixed":{"!description":"Sets the table layout. If fixed the width parameter of a column has priority, if not the width of the content of the colums has priority.\nThe default is \"fixed\".\nIf the fixed layout is used a adequate width of the MatrixLayout should be provided. Otherwise the column width displayed could be different than the given ones because of browser dependend optimazations.","!type":"Boolean","!category":"enum"},"rowSpan":{"!description":"Determines how many rows of the underlying grid structure are occupied by this matrix layout cell.\nIn case a row-height is used, all rows affected by the RowSpan must have the same unit.","!type":"Number","!category":"enum"},"overflowX":{"!description":"The overflow mode of the area in horizontal direction as CSS value","!type":"String","!category":"enum"},"!category":"namespace","ResponsiveFlowLayoutData":"sap.ui.commons.layout.ResponsiveFlowLayoutData_obj","overflowY":{"!description":"The overflow mode of the area in vertical direction as CSS value","!type":"String","!category":"enum"},"left":{"!description":"Defines the distance to the left of the layout (as specified in HTML)","!type":"sap.ui.core.CSSSize","!category":"enum"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!type":"Number","!category":"enum"},"MatrixLayoutRow":"sap.ui.commons.layout.MatrixLayoutRow_obj","right":{"!description":"Defines the distance to the right of the layout (as specified in HTML)","!type":"sap.ui.core.CSSSize","!category":"enum"},"VAlign":"sap.ui.commons.layout.VAlign","top":{"!description":"Defines the distance to the top of the layout (as specified in HTML)","!type":"sap.ui.core.CSSSize","!category":"enum"},"MatrixLayout":"sap.ui.commons.layout.MatrixLayout_obj","centerVertically":{"!description":"Indicates whether this container should be centered vertically within the AbsoluteLayout area.\nThe values of the attributes top and bottom are ignored when this feature is activated.","!type":"Boolean","!category":"enum"},"backgroundDesign":{"!description":"Determines the matrix layout cell's background design.","!type":"sap.ui.commons.layout.BackgroundDesign","!category":"enum"},"Separation":"sap.ui.commons.layout.Separation","rtl":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.5.2 RTL should not be configured on control level but is determined by a global configuration.<br>The RTL setting swaps the areas Begin and End. Since version 1.5.2, this property is deprecated and ignored as it conflicts with the central configuration for the page.","!type":"Boolean","!category":"enum"},"verticalScrolling":{"!description":"'Auto', 'Scroll', 'Hidden', and 'None' are the available values for setting the vertical scrolling mode.","!type":"sap.ui.core.Scrolling","!category":"enum"},"contentAlign":{"!description":"The content alignment as CSS value","!type":"String","!category":"enum"},"separation":{"!description":"Determines how a matrix layout cell is separated from its predecessor,\nvia a vertical gutter of variable width, with or without a vertical line.","!type":"sap.ui.commons.layout.Separation","!category":"enum"},"width":{"!description":"CSS width of the matrix layout.\nIf the LayoutFixed = true a adequate width should be provided.","!type":"sap.ui.core.CSSSize","!category":"enum"},"Padding":"sap.ui.commons.layout.Padding","size":{"!description":"Defines the height or the width. Is not used when the area element is in Center.","!type":"sap.ui.core.CSSSize","!category":"enum"},"BorderLayoutArea":"sap.ui.commons.layout.BorderLayoutArea_obj","VerticalLayout":"sap.ui.commons.layout.VerticalLayout_obj","HorizontalLayout":"sap.ui.commons.layout.HorizontalLayout_obj","AbsoluteLayout":"sap.ui.commons.layout.AbsoluteLayout_obj","BorderLayout":"sap.ui.commons.layout.BorderLayout_obj","bottom":{"!description":"Defines the distance to the bottom of the layout (as specified in HTML)","!type":"sap.ui.core.CSSSize","!category":"enum"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.","!type":"[String]","!category":"enum"},"MatrixLayoutCell":"sap.ui.commons.layout.MatrixLayoutCell_obj"},"sap.ui.commons.CheckBox_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.CheckBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.CheckBox"},"sap.ui.commons":{"valueTextAlign":{"!description":"Determines the text alignment in the primary ListBox column.","!type":"sap.ui.core.TextAlign","!category":"enum"},"columns":{"!description":"Determines the maximum number of RadioButtons displayed in one line.","!type":"Number","!category":"enum"},"maxListed":{"!description":"Maximum number of messages being display in the List before a scrollbar appears. Value '0' means no limit.","!type":"String","!category":"enum"},"MenuBarDesign":"sap.ui.commons.MenuBarDesign","RowRepeaterFilter":"sap.ui.commons.RowRepeaterFilter_obj","!module":"sap/ui/commons/library","useMap":{"!description":"The name of the image map that defines the clickable areas","!type":"String","!category":"enum"},"firstVisibleIndex":{"!description":"The index of the element in the content aggreation which is displayed first on rendering","!type":"Number","!category":"enum"},"showExternalButton":{"!description":"Defines whether an additional search button shall be displayed","!type":"Boolean","!category":"enum"},"totalUnits":{"!description":"Number of units that are displayed by ticks. The PageUp and PageDown keys navigate according to these units.","!type":"Number","!category":"enum"},"MenuBar":"sap.ui.commons.MenuBar_obj","iconHoverURL":{"!description":"URL of the icon for the value help when hovered. If no parameter is supplied the standard icon image will be shown.\nIf an icon font icon is used, this property is ignored.","!type":"sap.ui.core.URI","!category":"enum"},"styled":{"!description":"Indicates if the button is styled. If not it is rendered as native HTML-button. In this case a custom styling can be added usig addStyleClass.","!type":"Boolean","!category":"enum"},"href":{"!description":"The link target URI. Supports standard hyperlink behavior. If an action should be triggered, this should not be set, but instead an event handler for the \"press\" event should be registered.","!type":"sap.ui.core.URI","!category":"enum"},"collision":{"!description":"Optional. Collision - when the positioned element overflows the window in some direction, move it to an alternative position.","!type":"sap.ui.core.Collision","!category":"enum"},"iconDisabledURL":{"!description":"URL of the icon for the value help when disabled. If no parameter is supplied the default icon image will be shown.\nIf an icon font icon is used, this property is ignored.","!type":"sap.ui.core.URI","!category":"enum"},"SearchField":"sap.ui.commons.SearchField_obj","enableTabReordering":{"!description":"Specifies whether tab reordering is enabled.","!type":"Boolean","!category":"enum"},"enableClear":{"!description":"Defines whether the clear functionality shall be active","!type":"Boolean","!category":"enum"},"expanded":{"!description":"Node is expanded","!type":"Boolean","!category":"enum"},"enums":"sap.ui.commons.enums","Toolbar":"sap.ui.commons.Toolbar_obj","TextView":"sap.ui.commons.TextView_obj","textDirection":{"!description":"Direction of the text. Possible values: \"rtl\", \"ltr\".","!type":"sap.ui.core.TextDirection","!category":"enum"},"minHeight":{"!description":"Minimum outer height of the dialog window. When set, neither the user nor some layout settings can make the window smaller.","!type":"sap.ui.core.CSSSize","!category":"enum"},"anchorSnapPoint":{"!description":"Type: sap.ui.core.Popup.Dock\nSnapPoint of MessageBar over anchorId.\nNote: Use \"begin\" or \"end\" for RTL support.\nNote: \"center\" is not indicated, as positioning is only set once, either via the css \"left\" or the \"right\" attribute. Therefore a MessageBar will only be extended in one direction, as Messages come in.","!type":"String","!category":"enum"},"yyyymmdd":{"!description":"Defines the date as a \"yyyymmdd\" string, independent from the format used. The inherited textField \"value\" attribute uses the date format as configured via the locale.\nThe date is interpreted as gregorian date","!type":"String","!category":"enum"},"numberOfPages":{"!description":"Represents the overall number of pages that are embedded into the parent control","!type":"Number","!category":"enum"},"MessageType":"sap.ui.commons.MessageType","groupName":{"!description":"Defines the name of the RadioButtonGroup, in which the current RadioButton belongs to. You can define a new name for\nthe group. If no new name is specified, the default is sapUiRbDefaultGroup. By default, when one of the RadioButtons\nin a group is selected, all others are unselected.","!type":"String","!category":"enum"},"applyContentPadding":{"!description":"Determines whether the Panel will have padding.\nPadding is theme-dependent.","!type":"Boolean","!category":"enum"},"Splitter":"sap.ui.commons.Splitter_obj","searchHelpAdditionalText":{"!description":"(optional) The additional Text to use for the search help entry.","!type":"String","!category":"enum"},"LabelDesign":"sap.ui.commons.LabelDesign","minSizeSecondPane":{"!description":"The minimum size (width for vertical splitter or height for horizontal splitter) of the second Pane","!type":"sap.ui.core.Percentage","!category":"enum"},"RichTooltip":"sap.ui.commons.RichTooltip_obj","showValue":{"!description":"Determines whether the percent value shall be rendered inside the bar.","!type":"Boolean","!category":"enum"},"maxLength":{"!description":"Maximum number of characters. Value '0' means the feature is switched off.","!type":"Number","!category":"enum"},"visibleItems":{"!description":"The ListBox height in number of items that are initially displayed without scrolling.\nThis setting overwrites height settings in terms of CSS size that have been made.\nWhen the items have different heights, the height of the first item is used for all\nother item height calculations.\nNote that if there are one or more separators between the visible ListBox items,\nthe displayed items might not relate 1:1 to the initially specified number of items.\nWhen the value is retrieved, it equals the previously set value if it was set;\notherwise, it will be the number of items completely fitting into the ListBox without\nscrolling in the case the control was already rendered.\nNote that if the control was not rendered, the behavior will be undefined,\nit may return -1 or any other number.","!type":"Number","!category":"enum"},"Tree":"sap.ui.commons.Tree_obj","FileUploader":"sap.ui.commons.FileUploader_obj","openDuration":{"!description":"Optional. Open Duration in milliseconds.","!type":"Number","!category":"enum"},"TreeNode":"sap.ui.commons.TreeNode_obj","Image":"sap.ui.commons.Image_obj","!category":"namespace","maxValue":{"!description":"Determines the number of displayed rating symbols","!type":"Number","!category":"enum"},"displaySecondaryValues":{"!description":"Determines whether the text values from the additionalText property (see sap.ui.core.ListItems) shall be displayed.","!type":"Boolean","!category":"enum"},"max":{"!description":"Maximal value of the slider\n\n<b>Note:<\/b> If <code>min<\/code> is larger than <code>max<\/code> both values will be switched","!type":"Number","!category":"enum"},"displayWelcome":{"!description":"Determines if the welcome text is displayed","!type":"Boolean","!category":"enum"},"MenuTextFieldItem":"sap.ui.commons.MenuTextFieldItem_obj","TextViewColor":"sap.ui.commons.TextViewColor","enableListSuggest":{"!description":"Defines whether a pop up list shall be provided for suggestions","!type":"Boolean","!category":"enum"},"Title":"sap.ui.commons.Title_obj","selectionState":{"!description":"Defines the states of the checkbox","!type":"sap.ui.commons.TriStateCheckBoxState","!category":"enum"},"displayLogoff":{"!description":"Determines if the logoff area will be displayed at the right hand side of the application header.","!type":"Boolean","!category":"enum"},"!description":"Common basic controls, mainly intended for desktop scenarios","Link":"sap.ui.commons.Link_obj","animationDuration":{"!description":"Duration for animation when navigating through the contents of the Carousel","!type":"Number","!category":"enum"},"scrollLeft":{"!description":"Determines the scroll position from left to right. Value \"0\" means leftmost position.","!type":"Number","!category":"enum"},"minSizeFirstPane":{"!description":"The minimum size (width for vertical splitter or height for horizontal splitter) of the first Pane","!type":"sap.ui.core.Percentage","!category":"enum"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.","!type":"[String]","!category":"enum"},"Label":"sap.ui.commons.Label_obj","checked":{"!description":"Contains the state of the control whether it is flagged with a check mark, or not","!type":"Boolean","!category":"enum"},"wrapping":{"!description":"Disabled automatic wrapping of the text.","!type":"Boolean","!category":"enum"},"vertical":{"!description":"Orientation of slider","!type":"Boolean","!category":"enum"},"visible":{"!description":"Whether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control","!type":"Boolean","!category":"enum"},"undoEnabled":{"!description":"If undo is enabled after changing the text an undo button appears.","!type":"Boolean","!category":"enum"},"busy":{"!description":"Whether the control is currently in busy state.","!type":"Boolean","!category":"enum"},"MessageBox":"sap.ui.commons.MessageBox","smallStepWidth":{"!description":"The grip can only be moved in steps of this width.","!type":"Number","!category":"enum"},"Menu":"sap.ui.commons.Menu_obj","MenuButton":"sap.ui.commons.MenuButton_obj","TabStrip":"sap.ui.commons.TabStrip_obj","Button":"sap.ui.commons.Button_obj","height":{"!description":"Tree height","!type":"sap.ui.core.CSSSize","!category":"enum"},"selectionMode":{"!description":"Selection mode of the Tree.","!type":"sap.ui.commons.TreeSelectionMode","!category":"enum"},"sorter":{"!description":"The sorter object.","!type":"Object","!category":"enum"},"ToggleButton":"sap.ui.commons.ToggleButton_obj","maxWidth":{"!description":"Determines the maximum width of the ListBox. If not set, there is no maximum width.","!type":"sap.ui.core.CSSSize","!category":"enum"},"userName":{"!description":"User name that will be displayed beside the welcome text","!type":"String","!category":"enum"},"searchHelpIcon":{"!description":"(optional) The URI of the icon to use for the search help entry.","!type":"sap.ui.core.URI","!category":"enum"},"key":{"!description":"A key which can be used to identify the range (optional).","!type":"String","!category":"enum"},"PaginatorEvent":"sap.ui.commons.PaginatorEvent","closeDuration":{"!description":"Optional. Close Duration in milliseconds.","!type":"Number","!category":"enum"},"enabled":{"!description":"Switches enabled state of the control. Disabled fields have different colors, and can not be focused.","!type":"Boolean","!category":"enum"},"text":{"!description":"Defines the text displayed next to the check box","!type":"String","!category":"enum"},"openedSectionsId":{"!description":"Section IDs that are opened by default at application start","!type":"String","!category":"enum"},"TextViewDesign":"sap.ui.commons.TextViewDesign","RatingIndicator":"sap.ui.commons.RatingIndicator_obj","explanation":{"!description":"text which appears, in case quick-help is switched on","!type":"String","!category":"enum"},"labels":{"!description":"Labels to be displayed instead of numbers. Attribute totalUnits and label count should be the same\n\n<b>Note:<\/b> To show the labels <code>stepLabels<\/code> must be activated.","!type":"[String]","!category":"enum"},"width":{"!description":"Width of text field. When it is set (CSS-size such as % or px), this is the exact size. When left blank, the text field length defines the width.","!type":"sap.ui.core.CSSSize","!category":"enum"},"label":{"!description":"Label of the step","!type":"String","!category":"enum"},"DropdownBox":"sap.ui.commons.DropdownBox_obj","showCloseButton":{"!description":"Displays a close button in the title bar.","!type":"Boolean","!category":"enum"},"RowRepeaterDesign":"sap.ui.commons.RowRepeaterDesign","MenuItemBase":"sap.ui.commons.MenuItemBase_obj","visibleItemCount":{"!description":"Defines the number of items in the suggestion list that shall be displayed at once. If the overall number of list items is higher than the setting,\na scroll bar is provided.","!type":"Number","!category":"enum"},"logoText":{"!description":"The text that will be displayed beside the logo in the application header. This property is optional.","!type":"String","!category":"enum"},"editable":{"!description":"Switches edit state of the control. Read-only fields have different colors, depending on theme setting.","!type":"Boolean","!category":"enum"},"secondaryValueTextAlign":{"!description":"Determines the text alignment in the secondary ListBox text column (if available).","!type":"sap.ui.core.TextAlign","!category":"enum"},"borderDesign":{"!description":"Determines if the Panel can have a box as border.\nNote that displaying borders is theme-dependent.","!type":"sap.ui.commons.enums.BorderDesign","!category":"enum"},"handleSize":{"!description":"Determines the size of the handle in pixels. (Height for vertical carousel, width for horizontal carousel)","!type":"Number","!category":"enum"},"dockMenu":{"!description":"The position / edge (see sap.ui.core.Popup.Dock) of the menu which is docked to the button. Default is 'begin top'.","!type":"String","!category":"enum"},"isSelected":{"!description":"Node is selected","!type":"Boolean","!category":"enum"},"splitterPosition":{"!description":"Position of splitter bar in percentage.\nThe default value means that the splitter is positioned in the middle of the area that is available for the splitter.","!type":"sap.ui.core.Percentage","!category":"enum"},"searchHelpEnabled":{"!description":"Whether the DropdownBox's search help should be enabled.","!type":"Boolean","!category":"enum"},"visualMode":{"!description":"Defines how float values are visualized: Full, Half, Continuous\n(see enumeration RatingIndicatorVisualMode)","!type":"sap.ui.commons.RatingIndicatorVisualMode","!category":"enum"},"allowMultiSelect":{"!description":"Determines whether multiple selection is allowed.","!type":"Boolean","!category":"enum"},"SegmentedButton":"sap.ui.commons.SegmentedButton_obj","areaDesign":{"!description":"Determines the background color.\nNote that color settings are theme-dependent.","!type":"sap.ui.commons.enums.AreaDesign","!category":"enum"},"ApplicationHeader":"sap.ui.commons.ApplicationHeader_obj","Accordion":"sap.ui.commons.Accordion_obj","maxSuggestionItems":{"!description":"Maximum number of suggestion items in the suggestion list.","!type":"Number","!category":"enum"},"atPosition":{"!description":"Optional. At position defines which position on the target control to align the positioned tooltip.","!type":"sap.ui.core.Dock","!category":"enum"},"TextArea":"sap.ui.commons.TextArea_obj","ToolbarSeparatorDesign":"sap.ui.commons.ToolbarSeparatorDesign","ColorPickerMode":"sap.ui.commons.ColorPickerMode","RowRepeater":"sap.ui.commons.RowRepeater_obj","ResponsiveContainerRange":"sap.ui.commons.ResponsiveContainerRange_obj","logoSrc":{"!description":"Path (src) to the logo icon to be displayed in the application header.","!type":"sap.ui.core.URI","!category":"enum"},"style":{"!description":"Style of the button.\n(e.g. emphasized)","!type":"sap.ui.commons.ButtonStyle","!category":"enum"},"alt":{"!description":"The alternative text that is displayed in case the Image is not available, or cannot be displayed.\nIf the image is set to decorative this property is ignored.","!type":"String","!category":"enum"},"name":{"!description":"The <code>name<\/code> property to be used in the HTML code (e.g. for HTML forms that send data to the server via 'submit').","!type":"String","!category":"enum"},"textAlign":{"!description":"Sets the horizontal alignment of the text.","!type":"sap.ui.core.TextAlign","!category":"enum"},"offset":{"!description":"Optional. Offset adds these left-top values to the calculated position.\nExample: \"10 3\".","!type":"String","!category":"enum"},"startSuggestion":{"!description":"Minimum length of the entered string triggering the suggestion list.","!type":"Number","!category":"enum"},"enableFilterMode":{"!description":"Defines whether the search event should also be fired when the SearchField is empty (like a Filter field) and when the clear button (if activated) is pressed.","!type":"Boolean","!category":"enum"},"icon":{"!description":"Icon to display in front of the node","!type":"sap.ui.core.URI","!category":"enum"},"selectedIndex":{"!description":"Specifies the index of the currently selected tab.","!type":"Number","!category":"enum"},"verticalScrolling":{"!description":"Specifies the vertical scrolling.","!type":"sap.ui.core.Scrolling","!category":"enum"},"imageSrc":{"!description":"If RichTooltip contains an image, this property is used to define the source path.","!type":"sap.ui.core.URI","!category":"enum"},"RadioButton":"sap.ui.commons.RadioButton_obj","Dialog":"sap.ui.commons.Dialog_obj","RadioButtonGroup":"sap.ui.commons.RadioButtonGroup_obj","TextField":"sap.ui.commons.TextField_obj","threshold":{"!description":"Threshold to fetch the next chunk of data. The minimal threshold can be the numberOfRows of the RR.","!type":"Number","!category":"enum"},"defaultItemHeight":{"!description":"Default height of the item in a carousel if no height can be determined","!type":"Number","!category":"enum"},"MenuItem":"sap.ui.commons.MenuItem_obj","ResponsiveContainer":"sap.ui.commons.ResponsiveContainer_obj","coords":{"!description":"Coordinates of the area","!type":"String","!category":"enum"},"showHeader":{"!description":"Tree Header is display. If false, the tree will be in a transparent mode","!type":"Boolean","!category":"enum"},"selectedItemId":{"!description":"Id of the selected item. If the value has no corresponding item, the <code>selectedItemId<\/code> is empty.\n\nIf the <code>selectedItemId<\/code> is set to an not existing item, it will not be changed.","!type":"String","!category":"enum"},"FileUploaderParameter":"sap.ui.commons.FileUploaderParameter_obj","Carousel":"sap.ui.commons.Carousel_obj","iconURL":{"!description":"URL of the standard icon for the value help. If no parameter is supplied the default icon image will be shown.\nThis can be an URI to an image or an icon font URI.","!type":"sap.ui.core.URI","!category":"enum"},"stepLabels":{"!description":"Display step numbers for the ticks on the slider.","!type":"Boolean","!category":"enum"},"DatePicker":"sap.ui.commons.DatePicker_obj","RangeSlider":"sap.ui.commons.RangeSlider_obj","SplitterSize":"sap.ui.commons.SplitterSize","showMoreSteps":{"!description":"Step size used to increase the numberOfRows value. This feature is only active if value is greater than 0. This will deactivate the paging feature.","!type":"Number","!category":"enum"},"showScrollBars":{"!description":"Specifies if the browser should display scroll bars or simply cut the content of a splitter pane when the content does not fit into its pane.","!type":"Boolean","!category":"enum"},"RatingIndicatorVisualMode":"sap.ui.commons.RatingIndicatorVisualMode","MessageList":"sap.ui.commons.MessageList_obj","MessageToast":"sap.ui.commons.MessageToast_obj","autoClose":{"!description":"If this property is set to true the Dialog will close if the Dialog loses its focus","!type":"Boolean","!category":"enum"},"accessibleRole":{"!description":"Accessibility role for the text field.","!type":"sap.ui.core.AccessibleRole","!category":"enum"},"keepInWindow":{"!description":"Specifies whether Dialog movement should be restricted to the visible area of the window. This only affects drag&drop movements by the user. This doesn't affect modal dialogs -> modal dialogs always stay in the window.","!type":"Boolean","!category":"enum"},"PasswordField":"sap.ui.commons.PasswordField_obj","htmlText":{"!description":"Determines text with placeholders.","!type":"String","!category":"enum"},"showCollapseIcon":{"!description":"Determines whether the Panel will have an icon for collapsing/expanding, or not.","!type":"Boolean","!category":"enum"},"resizable":{"!description":"Specifies whether the dialog window can be resized by the user. The dialog frame contains the visual symbol.","!type":"Boolean","!category":"enum"},"labeledBy":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.5.2 Please use association AriaLabelledBy instead.<br>ID of label control","!type":"String","!category":"enum"},"showHorizontalScrollbar":{"!description":"Display horizontal scrollbar. If false, the overflow content will be hidden","!type":"Boolean","!category":"enum"},"orientation":{"!description":"Determines the orientation of the Carousel. Can be either \"horizontal\" or \"vertical\"","!type":"sap.ui.commons.enums.Orientation","!category":"enum"},"form":"sap.ui.commons.form","contentBorderDesign":{"!description":"Specifies the border design. Border design is theme dependent.","!type":"sap.ui.commons.enums.BorderDesign","!category":"enum"},"TriStateCheckBox":"sap.ui.commons.TriStateCheckBox_obj","imeMode":{"!description":"State of the Input Method Editor (IME).","!type":"sap.ui.core.ImeMode","!category":"enum"},"iconUnselected":{"!description":"The URI to the image which shall be displayed for all unselected rating symbols.\nIf this attribute is used, a requirement is that all custom icons need to have the same size.\nNote that when this attribute is used also the other icon attributes need to be set.","!type":"sap.ui.core.URI","!category":"enum"},"RowRepeaterSorter":"sap.ui.commons.RowRepeaterSorter_obj","RoadMap":"sap.ui.commons.RoadMap_obj","maxPopupItems":{"!description":"Defines the number of items that shall be displayed at once. If the overall number of items is higher than this setting, a scrollbar is provided.","!type":"Number","!category":"enum"},"TriStateCheckBoxState":"sap.ui.commons.TriStateCheckBoxState","dockButton":{"!description":"The position / edge (see sap.ui.core.Popup.Dock) of the button where the menu is docked. Default is 'begin bottom'.","!type":"String","!category":"enum"},"iconSelected":{"!description":"Icon to be displayed as graphical element within the button when it is selected (only if also a base icon was specified). If not specified the base or hovered icon is used.\nIf a icon font icon is used, this property is ignored.","!type":"sap.ui.core.URI","!category":"enum"},"closeDelay":{"!description":"Closing delay of the tooltip in milliseconds","!type":"Number","!category":"enum"},"filters":{"!description":"The set of filter objects.","!type":"Object","!category":"enum"},"valueState":{"!description":"Visualizes warnings or errors related to the text field. Possible values: Warning, Error, Success.","!type":"sap.ui.core.ValueState","!category":"enum"},"enableScrolling":{"!description":"Determines whether scrolling should be enabled when the number of items is higher than maxPopupItems.\nIf set to false only the first n items (n=maxPopupItems) are shown.","!type":"Boolean","!category":"enum"},"myPosition":{"!description":"Optional. My position defines which position on the extended tooltip being positioned to align with the target control.","!type":"sap.ui.core.Dock","!category":"enum"},"pressed":{"!description":"The property is \u201ctrue\u201d when the control is toggled. The default state of this property is \"false\".","!type":"Boolean","!category":"enum"},"averageValue":{"!description":"Determines the average value. This value is shown if no value is set.\nThis can be used to display an average Value before the user votes.","!type":"Number","!category":"enum"},"helpId":{"!description":"Unique identifier used for help service.","!type":"String","!category":"enum"},"defaultItemWidth":{"!description":"Default width of the item in a carousel if no height can be determined","!type":"Number","!category":"enum"},"value2":{"!description":"Current second value of the slider. (Position of the second grip.)\n\n<b>Note:<\/b> If the value is not in the valid range (between <code>min<\/code> and <code>max<\/code>) it will be changed to be in the valid range.\nIf it is smaller than <code>value<\/code> it will be set to the same value.","!type":"Number","!category":"enum"},"mode":{"!description":"Determines the mode the ColorPicker works with - Hue Saturation and Value (HSV) or Hue Saturation and Lightness (HSL)","!type":"sap.ui.commons.ColorPickerMode","!category":"enum"},"horizontalScrolling":{"!description":"Specifies the horizontal scrolling.","!type":"sap.ui.core.Scrolling","!category":"enum"},"Panel":"sap.ui.commons.Panel_obj","title":{"!description":"Tree title","!type":"String","!category":"enum"},"ComboBox":"sap.ui.commons.ComboBox_obj","HorizontalDividerType":"sap.ui.commons.HorizontalDividerType","associatedElementId":{"!description":"Associated UI element ID. (Optional)\nFor navigation to error field.","!type":"String","!category":"enum"},"src":{"!description":"Relative or absolute path to URL where the image file is stored.","!type":"sap.ui.core.URI","!category":"enum"},"modal":{"!description":"Specifies whether the dialog should be modal, or not. In case of <code>true<\/code> the focus is kept inside the dialog.","!type":"Boolean","!category":"enum"},"iconFirst":{"!description":"If set to true (default), the display sequence is 1. icon 2. control text .","!type":"Boolean","!category":"enum"},"min":{"!description":"Minimal value of the slider.\n\n<b>Note:<\/b> If <code>min<\/code> is larger than <code>max<\/code> both values will be switched","!type":"Number","!category":"enum"},"Message":"sap.ui.commons.Message_obj","placeholder":{"!description":"Placeholder for the text field.","!type":"String","!category":"enum"},"imageAltText":{"!description":"This is the alt text for the image","!type":"String","!category":"enum"},"requiredAtBegin":{"!description":"Determines whether the required indicator is at the beginning of the label (if set) or at the end (if not set).","!type":"Boolean","!category":"enum"},"SearchProvider":"sap.ui.commons.SearchProvider_obj","RoadMapStep":"sap.ui.commons.RoadMapStep_obj","selectedStep":{"!description":"ID of the step which is currently selected","!type":"String","!category":"enum"},"displayIcons":{"!description":"Determines whether the icons of the list items shall also be displayed.\nEnabling icons requires some space to be reserved for them.\nDisplaying icons can also influence the width and height of a single item,\nwhich affects the overall height of the ListBox when defined in number of items.\nNote that the number of icons that can be displayed in the ListBox depends on the\nsize of the icons themselves and of the total ListBox height.","!type":"Boolean","!category":"enum"},"valueStateText":{"!description":"This property is an individual text that will be used instead of the default ValueState text","!type":"String","!category":"enum"},"fixedRowHeight":{"!description":"Row height adapts to rendered content. If a fixed height is specified the cells have a maximum height and the overflow will be hidden.","!type":"sap.ui.core.CSSSize","!category":"enum"},"ColorPicker":"sap.ui.commons.ColorPicker_obj","AutoComplete":"sap.ui.commons.AutoComplete_obj","design":{"!description":"Font type. valid values are Standard and Monospace.","!type":"sap.ui.core.Design","!category":"enum"},"cols":{"!description":"Number of Columns. Cols means number of characters per row. This proprty is only used if Width is not used.","!type":"Number","!category":"enum"},"HorizontalDivider":"sap.ui.commons.HorizontalDivider_obj","CalloutBase":"sap.ui.commons.CalloutBase_obj","minWidth":{"!description":"Minimal width for the Tree. Can be useful when, for example, the width is specified in percentage, to avoid the tree to become too narrow when container is resize","!type":"sap.ui.core.CSSSize","!category":"enum"},"Area":"sap.ui.commons.Area_obj","type":{"!description":"\"Success\", or \"Warning\", or \"Error\" messages. (Mandatory)","!type":"sap.ui.commons.MessageType","!category":"enum"},"FormattedTextViewControl":"sap.ui.commons.FormattedTextViewControl","maxHistoryItems":{"!description":"Maximum number of history items in the suggestion list.\n0 displays and stores no history. The history is locally stored on the client. Therefore do not activate this feature when this control handles confidential data.","!type":"Number","!category":"enum"},"ButtonStyle":"sap.ui.commons.ButtonStyle","MessageBar":"sap.ui.commons.MessageBar_obj","selectedKey":{"!description":"Key of the selected item.\n\nIf the value has no corresponding item the key is empty.\n\nIf duplicate keys exists the first item matching the key is used.\n\nIf the key is set to a not existing value it will not be changed.","!type":"String","!category":"enum"},"ImageMap":"sap.ui.commons.ImageMap_obj","value":{"!description":"Text inside the <code>TextField<\/code>","!type":"String","!category":"enum"},"Tab":"sap.ui.commons.Tab_obj","InPlaceEdit":"sap.ui.commons.InPlaceEdit_obj","busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!type":"Number","!category":"enum"},"required":{"!description":"Depending on theme the <code>TextField<\/code> is shown as required.\nIf a <code>Label<\/code> is assigned to the <code>TextField<\/code> it will visualize the requires state too.","!type":"Boolean","!category":"enum"},"iconHovered":{"!description":"Icon to be displayed as graphical element within the button when it is hovered (only if also a base icon was specified). If not specified the base icon is used.\nIf a icon font icon is used, this property is ignored.","!type":"sap.ui.core.URI","!category":"enum"},"showListExpander":{"!description":"Defines whether the list expander shall be displayed in the case of an enabled list for suggestions. This feature is deactivated on mobile devices.","!type":"Boolean","!category":"enum"},"ToolbarSeparator":"sap.ui.commons.ToolbarSeparator_obj","numberOfRows":{"!description":"Number of rows displayed.","!type":"Number","!category":"enum"},"shape":{"!description":"The value is a string and can be 'rect' for rectangle, 'poly' for poligon, 'circle', or default.","!type":"String","!category":"enum"},"displayValue":{"!description":"Determines the text value that will be displayed in the bar.","!type":"String","!category":"enum"},"semanticColor":{"!description":"Semantic color of the text View","!type":"sap.ui.commons.TextViewColor","!category":"enum"},"rows":{"!description":"Number of Rows. This proprty is only used if Height is not used.","!type":"Number","!category":"enum"},"collapsed":{"!description":"Determines whether the Panel will be initially collapsed.\nWhen it is initially collapsed, the contents are not rendered.\nA collapsed Panel consumes less space than an expanded one.","!type":"Boolean","!category":"enum"},"colorString":{"!description":"This is the import-parameter of the ColorPicker.\nAs input-parameter, it can be a Hexadecimal string (#FFFFFF), a RGB-string rgb(255,255,255), a HSV-string hsv(360,100,100) or a CSS-colorname 'red'.\nAs output-parameter it is a RGB-string containing the current color.","!type":"String","!category":"enum"},"barColor":{"!description":"Determines the color of the bar which visualizes the progress.\nPossible values defined in the sap.ui.core.BarColor enumeration are the following:\nCRITICAL (yellow), NEGATIVE (red), POSITIVE (green), NEUTRAL (blue) (default value).","!type":"sap.ui.core.BarColor","!category":"enum"},"maxHeight":{"!description":"Maximum outer height of the dialog window. If set, neither the user nor some layout settings can make the window larger.","!type":"sap.ui.core.CSSSize","!category":"enum"},"ToolbarItem":"sap.ui.commons.ToolbarItem","hasExpander":{"!description":"Should the node has an expander.","!type":"Boolean","!category":"enum"},"maxToasted":{"!description":"Maximum number of simultaneous messages being toasted in a row. Value '0' means this dynamic part is switched off.","!type":"Number","!category":"enum"},"numberOfVisibleSteps":{"!description":"Total number of steps to be displayed at once","!type":"Number","!category":"enum"},"decorative":{"!description":"A decorative image is included for design reasons. Accessibility tools will ignore decorative images.\nNote: If the Image has an image map (useMap is set), this property will be overridden (the image will not be rendered as decorative).\nA decorative image has no ALT attribute, so the Alt property is ignored if the image is decorative.","!type":"Boolean","!category":"enum"},"percentValue":{"!description":"Determines the numerical value for the displayed length of the progress bar.","!type":"Number","!category":"enum"},"AccordionSection":"sap.ui.commons.AccordionSection_obj","searchHelpText":{"!description":"(optional) The text to use for the search help entry.","!type":"String","!category":"enum"},"locale":{"!description":"Defines the locale (language and country), e.g. \"en-US\", whose translations and Date formatters should be used to render the DatePicker.If the value property is bound to a model using a Date type the locale will be ignored, because the locale information of the model are used.","!type":"String","!category":"enum"},"enableCache":{"!description":"When list suggestion is enabled all suggestions are cached and no suggest event is fired.","!type":"Boolean","!category":"enum"},"openDelay":{"!description":"Opening delay of the tooltip in milliseconds","!type":"Number","!category":"enum"},"Paginator":"sap.ui.commons.Paginator_obj","showHeaderIcons":{"!description":"Show Header icons (e.g. Expand/Collapse all). Only consider if showHeader is true","!type":"Boolean","!category":"enum"},"TreeSelectionMode":"sap.ui.commons.TreeSelectionMode","standalone":{"!description":"Per default, tool bars have the stand alone status.\nAlternatively, they can be nested in other controls and then inherit the design from their parent control.","!type":"Boolean","!category":"enum"},"Slider":"sap.ui.commons.Slider_obj","ProgressIndicator":"sap.ui.commons.ProgressIndicator_obj","anchorId":{"!description":"ID of the anchor on top of which the MessageToast is to render.","!type":"String","!category":"enum"},"selected":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 0.17.0 This property is not used. To identify the selected tab in a TabStrip selectedIndex is used.<br>Defines whether the tab is the active one.","!type":"Boolean","!category":"enum"},"closable":{"!description":"Specifies whether the tab contains a close button.","!type":"Boolean","!category":"enum"},"layout":"sap.ui.commons.layout","ValueHelpField":"sap.ui.commons.ValueHelpField_obj","CheckBox":"sap.ui.commons.CheckBox_obj","scrollTop":{"!description":"Determines the scroll position from top to bottom. Value \"0\" means topmost position.","!type":"Number","!category":"enum"},"lite":{"!description":"The button is rendered as lite button.","!type":"Boolean","!category":"enum"},"splitterBarVisible":{"!description":"set the splitter bar to be visible or not.","!type":"Boolean","!category":"enum"},"displayVisualSeparator":{"!description":"When set to false, there is no visual indication of separation by a vertical line but by a wider space.","!type":"Boolean","!category":"enum"},"cursorPos":{"!description":"Position of cursor, e.g., to let the user re-start typing at the same position as before the server roundtrip","!type":"Number","!category":"enum"},"firstVisibleStep":{"!description":"ID of the first step to be displayed","!type":"String","!category":"enum"},"ListBox":"sap.ui.commons.ListBox_obj","anchorID":{"!description":"Element ID upon which the MessageBar will be initially positioned.","!type":"String","!category":"enum"},"selectable":{"!description":"The node is selectable. If true, clicking on the node text triggers \"selected\" event","!type":"Boolean","!category":"enum"},"target":{"!description":"Options are _self, _top, _blank, _parent, _search. Alternatively, a frame name can be entered.","!type":"String","!category":"enum"},"Callout":"sap.ui.commons.Callout_obj","splitterOrientation":{"!description":"The splitter can have horizontal or vertical orientation.","!type":"sap.ui.core.Orientation","!category":"enum"},"currentPage":{"!description":"The index of the page currently displayed. The index starts at 1.","!type":"Number","!category":"enum"},"ToolbarDesign":"sap.ui.commons.ToolbarDesign","FormattedTextView":"sap.ui.commons.FormattedTextView_obj","HorizontalDividerHeight":"sap.ui.commons.HorizontalDividerHeight"},"sap.ui.commons.Button":{"getIconSelected":{"!description":"Gets current value of property <code>iconSelected<\/code>.\n\nIcon to be displayed as graphical element within the button when it is selected (only if also a base icon was specified). If not specified the base or hovered icon is used.\nIf a icon font icon is used, this property is ignored.\n\nDefault value is <code><\/code>.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nBoolean property to enable the control (default is true). Buttons that are disabled have other colors than enabled ones, depending on custom settings.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setIconHovered":{"!description":"Sets a new value for property <code>iconHovered<\/code>.\n\nIcon to be displayed as graphical element within the button when it is hovered (only if also a base icon was specified). If not specified the base icon is used.\nIf a icon font icon is used, this property is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!type":"fn(sIconHovered: sap.ui.core.URI) -> sap.ui.commons.Button","!category":"function","!static":false},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.commons.Button","!category":"function","!static":false},"getLite":{"!description":"Gets current value of property <code>lite<\/code>.\n\nThe button is rendered as lite button.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nButton text displayed at runtime.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!type":"fn(sText: String) -> sap.ui.commons.Button","!category":"function","!static":false},"removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"!module":"sap/ui/commons/Button","getHelpId":{"!description":"Gets current value of property <code>helpId<\/code>.\n\nUnique identifier used for help service\n\nDefault value is <code><\/code>.","!type":"fn() -> String","!category":"function","!static":false},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nIcon to be displayed as graphical element within the button.\nThis can be an URI to an image or an icon font URI.\n\nDefault value is <code><\/code>.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nButton text displayed at runtime.\n\nDefault value is <code><\/code>.","!type":"fn() -> String","!category":"function","!static":false},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nSpecifies the button height. If this property is set, the height which is specified by the underlying theme is not used any longer.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.ui.commons.Button","!category":"function","!static":false},"getIconHovered":{"!description":"Gets current value of property <code>iconHovered<\/code>.\n\nIcon to be displayed as graphical element within the button when it is hovered (only if also a base icon was specified). If not specified the base icon is used.\nIf a icon font icon is used, this property is ignored.\n\nDefault value is <code><\/code>.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"!category":"class","setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nBoolean property to enable the control (default is true). Buttons that are disabled have other colors than enabled ones, depending on custom settings.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.Button","!category":"function","!static":false},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nControl width as common CSS-size (px or % as unit, for example)","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"focus":{"!description":"Puts the focus to the button.","!type":"fn()","!category":"function","!static":false},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nControl width as common CSS-size (px or % as unit, for example)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Button","!category":"function","!static":false},"getAccessibilityInfo":{"!type":"fn()","!category":"function","!static":false},"setLite":{"!description":"Sets a new value for property <code>lite<\/code>.\n\nThe button is rendered as lite button.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bLite: Boolean) -> sap.ui.commons.Button","!category":"function","!static":false},"setIconSelected":{"!description":"Sets a new value for property <code>iconSelected<\/code>.\n\nIcon to be displayed as graphical element within the button when it is selected (only if also a base icon was specified). If not specified the base or hovered icon is used.\nIf a icon font icon is used, this property is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!type":"fn(sIconSelected: sap.ui.core.URI) -> sap.ui.commons.Button","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Button with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"setIconFirst":{"!description":"Sets a new value for property <code>iconFirst<\/code>.\n\nIf set to true (default), the display sequence is 1. icon 2. control text .\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bIconFirst: Boolean) -> sap.ui.commons.Button","!category":"function","!static":false},"!constructorDescription":"Constructor for a new Button.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHelpId helpId} : string (default: )<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getIconHovered iconHovered} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getIconSelected iconSelected} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getIconFirst iconFirst} : boolean (default: true)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getStyled styled} : boolean (default: true)<\/li>\n<li>{@link #getLite lite} : boolean (default: false)<\/li>\n<li>{@link #getStyle style} : sap.ui.commons.ButtonStyle (default: Default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getStyle":{"!description":"Gets current value of property <code>style<\/code>.\n\nStyle of the button.\n(e.g. emphasized)\n\nDefault value is <code>Default<\/code>.","!type":"fn() -> sap.ui.commons.ButtonStyle","!category":"function","!static":false},"setStyled":{"!description":"Sets a new value for property <code>styled<\/code>.\n\nIndicates if the button is styled. If not it is rendered as native HTML-button. In this case a custom styling can be added usig addStyleClass.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bStyled: Boolean) -> sap.ui.commons.Button","!category":"function","!static":false},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.ui.commons.Button<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.Button<\/code> itself.\n\nEvent is fired when the user presses the control.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.Button","!category":"function","!static":false},"setHelpId":{"!description":"Sets a new value for property <code>helpId<\/code>.\n\nUnique identifier used for help service\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!type":"fn(sHelpId: String) -> sap.ui.commons.Button","!category":"function","!static":false},"addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.commons.Button","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Button<\/code> control.<br>Enables users to trigger actions such as save or print. For the button UI, you can define some text or an icon, or both.","setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nSpecifies the button height. If this property is set, the height which is specified by the underlying theme is not used any longer.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.Button","!category":"function","!static":false},"getIconFirst":{"!description":"Gets current value of property <code>iconFirst<\/code>.\n\nIf set to true (default), the display sequence is 1. icon 2. control text .\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setStyle":{"!description":"Sets a new value for property <code>style<\/code>.\n\nStyle of the button.\n(e.g. emphasized)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Default<\/code>.","!type":"fn(sStyle: sap.ui.commons.ButtonStyle) -> sap.ui.commons.Button","!category":"function","!static":false},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nIcon to be displayed as graphical element within the button.\nThis can be an URI to an image or an icon font URI.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!type":"fn(sIcon: sap.ui.core.URI) -> sap.ui.commons.Button","!category":"function","!static":false},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.ui.commons.Button<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.Button","!category":"function","!static":false},"getStyled":{"!description":"Gets current value of property <code>styled<\/code>.\n\nIndicates if the button is styled. If not it is rendered as native HTML-button. In this case a custom styling can be added usig addStyleClass.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Button.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.Splitter_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Splitter with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Splitter"},"sap.ui.commons.Message_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Message with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Message"},"sap.ui.commons.SearchField_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.SearchField with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.SearchField"},"sap.ui.commons.CalloutBase":{"attachBeforeOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>beforeOpen<\/code> event of this <code>sap.ui.commons.CalloutBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.CalloutBase<\/code> itself.\n\nEvent is fired before a Callout is displayed. Call the preventDefault method of the event object to postpone opening. Application may use this event to start asynchronous Ajax call to load the Callout content","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.CalloutBase","!category":"function","!static":false},"fireBeforeOpen":{"!description":"Fires event <code>beforeOpen<\/code> to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.\n\nExpects the following event parameters:\n<ul>\n<li><code>parent<\/code> of type <code>sap.ui.core.Control<\/code>Parent control that has this Callout as a tooltip<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> Boolean","!category":"function","!static":false},"adjustPosition":{"!description":"Adjust position of the already opened Callout window.\nCall this method each time when the size of the opened\nCallout window may be changed due to new or changed\ncontents.","!type":"fn()","!category":"function","!static":false},"fireOpen":{"!description":"Fires event <code>open<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>parent<\/code> of type <code>sap.ui.core.Control<\/code>Parent control that has this Callout as a tooltip<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.CalloutBase","!category":"function","!static":false},"detachClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>close<\/code> event of this <code>sap.ui.commons.CalloutBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.CalloutBase","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.CalloutBase with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.TooltipBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"detachOpened":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>opened<\/code> event of this <code>sap.ui.commons.CalloutBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.CalloutBase","!category":"function","!static":false},"detachOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>open<\/code> event of this <code>sap.ui.commons.CalloutBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.CalloutBase","!category":"function","!static":false},"fireClose":{"!description":"Fires event <code>close<\/code> to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.commons.CalloutBase","!category":"function","!static":false},"attachOpened":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>opened<\/code> event of this <code>sap.ui.commons.CalloutBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.CalloutBase<\/code> itself.\n\nIs fired when the Callout has been opened","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.CalloutBase","!category":"function","!static":false},"setPosition":{"!description":"Set position of the Callout window relative to the parent control.\nThis function automatically calculates and sets the correct offset,\nuse it instead of <code>setMyPosition/setAtPosition<\/code>.","!type":"fn(myPosition: sap.ui.core.Dock, atPosition: sap.ui.core.Dock) -> sap.ui.commons.CalloutBase","!category":"function","!static":false},"!constructorDescription":"Constructor for a new CalloutBase.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Events\n<ul>\n<li>{@link #event:open open} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:close close} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeOpen beforeOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:opened opened} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.TooltipBase#constructor sap.ui.core.TooltipBase}\ncan be used as well.","!module":"sap/ui/commons/CalloutBase","attachClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>close<\/code> event of this <code>sap.ui.commons.CalloutBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.CalloutBase<\/code> itself.\n\nEvent is fired when the Callout window is closed.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.CalloutBase","!category":"function","!static":false},"attachOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>open<\/code> event of this <code>sap.ui.commons.CalloutBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.CalloutBase<\/code> itself.\n\nThe event is fired when the popup is opened.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.CalloutBase","!category":"function","!static":false},"close":{"!description":"Closes Callout","!type":"fn()","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Popover<\/code> control.<br>CalloutBase is a building block for Callout. Do not use it directly. Use the Callout control instead","!category":"class","fireOpened":{"!description":"Fires event <code>opened<\/code> to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.commons.CalloutBase","!category":"function","!static":false},"detachBeforeOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>beforeOpen<\/code> event of this <code>sap.ui.commons.CalloutBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.CalloutBase","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.CalloutBase.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.TooltipBase"},"sap.ui.commons.layout.VerticalLayout":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 Moved to sap.ui.layout library. Please use this one.<br>In this layout the elemnts are orderd one below the other","extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.VerticalLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.VerticalLayout.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!category":"class","!constructorDescription":"Constructor for a new layout/VerticalLayout.","!module":"sap/ui/commons/layout/VerticalLayout","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.layout.VerticalLayout.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.layout.VerticalLayout"},"sap.ui.commons.RatingIndicatorVisualMode":{"!description":"Possible values for the visualization of float values in the RatingIndicator Control.","Continuous":{"!description":"Values are not rounded.","!type":"String","!category":"enum"},"Full":{"!description":"Values are rounded to the nearest integer value (e.g. 1.7 -> 2).","!type":"String","!category":"enum"},"!category":"static class","Half":{"!description":"Values are rounded to the nearest half value (e.g. 1.7 -> 1.5).","!type":"String","!category":"enum"},"!module":"sap/ui/commons/library"},"sap.ui.commons.Panel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Panel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Panel"},"sap.ui.commons.form.FormElement":{"getVisible":{"!description":"Getter for property <code>visible<\/code>.\nInvisible FormElements are not rendered.\n\nDefault value is <code>true<\/code>","!type":"fn() -> Boolean","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>A form element is a combination of one label and different controls associated to this label.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.FormElement with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.FormElement.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"setVisible":{"!description":"Setter for property <code>visible<\/code>.\n\nDefault value is <code>true<\/code>","!type":"fn(bVisible: Boolean) -> sap.ui.commons.form.FormElement","!category":"function","!static":false},"!category":"class","!constructorDescription":"Constructor for a new form/FormElement.","!module":"sap/ui/commons/form/FormElement","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.form.FormElement.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.layout.form.FormElement"},"sap.ui.commons.MessageBox":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.MessageBox<\/code> control.<br>Provides methods to create standard alerts, confirmation dialogs, or arbitrary message boxes.\n\nAs <code>MessageBox<\/code> is a static class, a <code>jQuery.sap.require(\"sap.ui.commons.MessageBox\");<\/code> statement\nmust be explicitly executed before the class can be used. Example:\n<pre>\n  jQuery.sap.require(\"sap.ui.commons.MessageBox\");\n  sap.ui.commons.MessageBox.show(\n      \"This message should appear in the message box.\",\n      sap.ui.commons.MessageBox.Icon.INFORMATION,\n      \"My message box title\",\n      [sap.ui.commons.MessageBox.Action.YES, sap.ui.commons.MessageBox.Action.NO],\n      function() { / * do something * / }\n  );\n<\/pre>","Action":"sap.ui.commons.MessageBox.Action","alert":{"!description":"Displays an alert box with the given message and an OK button (no icons).\nIf a callback is given, it is called after the alert box has been closed\nby the user via the OK button or via the Close icon. The callback is called\nwith the following signature:\n\n<pre>\n  function ()\n<\/pre>\n\nThe alert box opened by this method is modal and it is processed asynchronously.\nApplications have to use the <code>fnCallback<\/code> to continue work after the\nuser closed the alert box.","!type":"fn(vMessage: String | sap.ui.core.Control, fnCallback?: fn(), sTitle?: String, sDialogId?: String)","!category":"function","!static":"true"},"!category":"namespace","show":{"!description":"Creates and displays a simple message box with the given text and buttons, and optionally other parts.\nAfter the user has selected a button or closed the message box using the close icon, the <code>callback<\/code>\nfunction is invoked when given.\n\nThe only mandatory parameter is <code>vMessage<\/code>. Either a string with the corresponding text or even\na layout control could be provided.\n\nThe created dialog box is executed asynchronously. When it has been created and registered for rendering,\nthis function returns without waiting for a user reaction.\n\nWhen applications have to react on the users choice, they have to provide a callback function and\npostpone any reaction on the user choice until that callback is triggered.\n\nThe signature of the callback is\n\n  function (oAction);\n\nwhere <code>oAction<\/code> is the button that the user has pressed. When the user has pressed the close button,\na MessageBox.Action.Close is returned.","!type":"fn(vMessage: String | sap.ui.core.Control, oIcon?: sap.ui.commons.MessageBox.Icon, sTitle?: String, vActions?: [sap.ui.commons.MessageBox.Action | sap.ui.commons.MessageBox.Action], fnCallback?: fn(), oDefaultAction?: sap.ui.commons.MessageBox.Action, sDialogId?: String)","!category":"function","!static":"true"},"!module":"sap/ui/commons/MessageBox","confirm":{"!description":"Displays a confirmation dialog box with the given message, a question icon,\nan OK button, and a Cancel button. If a callback is given, it is called after the\nalert box has been closed by the user via one of the buttons or via the close icon.\nThe callback is called with the following signature\n\n<pre>\n  function(bConfirmed)\n<\/pre>\n\nwhere bConfirmed is set to true when the user has activated the OK button.\n\nThe confirmation dialog box opened by this method is modal and it is processed asynchronously.\nApplications have to use the <code>fnCallback<\/code> to continue work after the\nuser closed the alert box.","!type":"fn(vMessage: String | sap.ui.core.Control, fnCallback?: fn(), sTitle?: String, sDialogId?: String)","!category":"function","!static":"true"},"Icon":"sap.ui.commons.MessageBox.Icon"},"sap.ui.commons.RangeSlider":{"setValue2":{"!description":"Sets a new value for property <code>value2<\/code>.\n\nCurrent second value of the slider. (Position of the second grip.)\n\n<b>Note:<\/b> If the value is not in the valid range (between <code>min<\/code> and <code>max<\/code>) it will be changed to be in the valid range.\nIf it is smaller than <code>value<\/code> it will be set to the same value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>80<\/code>.","!type":"fn(fValue2: Number) -> sap.ui.commons.RangeSlider","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.RangeSlider<\/code> control.<br>The interactive control is displayed either as a horizontal or a vertical line with two pointers and units of measurement.\nUsers can move the pointers along the line to change a range with graphical support.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.RangeSlider with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.Slider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"getValue2":{"!description":"Gets current value of property <code>value2<\/code>.\n\nCurrent second value of the slider. (Position of the second grip.)\n\n<b>Note:<\/b> If the value is not in the valid range (between <code>min<\/code> and <code>max<\/code>) it will be changed to be in the valid range.\nIf it is smaller than <code>value<\/code> it will be set to the same value.\n\nDefault value is <code>80<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"!category":"class","!constructorDescription":"Constructor for a new <code>RangeSlider<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue2 value2} : float (default: 80)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.commons.Slider#constructor sap.ui.commons.Slider}\ncan be used as well.","!module":"sap/ui/commons/RangeSlider","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.RangeSlider.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.commons.Slider"},"sap.ui.commons.Tab_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Tab with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.Panel.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Tab"},"sap.ui.commons.Area_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Area with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Area"},"sap.ui.commons.form.GridContainerData_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.GridContainerData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.GridContainerData.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.form.GridContainerData"},"sap.ui":{"commons":"sap.ui.commons","!category":"namespace"},"sap.ui.commons.ToolbarDesign":{"Standard":{"!description":"The toolbar elements such as buttons for example have their normal visual design, and the toolbar appears solid.\nThe feature might be not supported by all themes.","!type":"String","!category":"enum"},"!description":"Determines the visual design of a Toolbar.","Transparent":{"!description":"The controls included in the toolbar have a normal visual design where the toolbar appears transparent.\nThe feature might be not supported by all themes.","!type":"String","!category":"enum"},"Flat":{"!description":"The included controls have a very light appearance. The feature might be not supported by all themes.","!type":"String","!category":"enum"},"!category":"static class","!module":"sap/ui/commons/library"},"sap.ui.commons.form.GridLayout":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>This Layout implements a guideline 2.0 grid. This can be a 16 column grid or an 8 column grid.\n\nTo adjust the content inside the GridLayout GridContainerData and GridElementData could be used.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.GridLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.GridLayout.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!category":"class","!constructorDescription":"Constructor for a new form/GridLayout.","!module":"sap/ui/commons/form/GridLayout","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.form.GridLayout.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.layout.form.GridLayout"},"sap.ui.commons.Tree":{"removeAllNodes":{"!description":"Removes all the controls from the aggregation <code>nodes<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.TreeNode]","!category":"function","!static":false},"getShowHeaderIcons":{"!description":"Gets current value of property <code>showHeaderIcons<\/code>.\n\nShow Header icons (e.g. Expand/Collapse all). Only consider if showHeader is true\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"detachSelectionChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>selectionChange<\/code> event of this <code>sap.ui.commons.Tree<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.Tree","!category":"function","!static":false},"destroyNodes":{"!description":"Destroys all the nodes in the aggregation <code>nodes<\/code>.","!type":"fn() -> sap.ui.commons.Tree","!category":"function","!static":false},"setMinWidth":{"!description":"Sets a new value for property <code>minWidth<\/code>.\n\nMinimal width for the Tree. Can be useful when, for example, the width is specified in percentage, to avoid the tree to become too narrow when container is resize\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sMinWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Tree","!category":"function","!static":false},"setShowHeader":{"!description":"Sets a new value for property <code>showHeader<\/code>.\n\nTree Header is display. If false, the tree will be in a transparent mode\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowHeader: Boolean) -> sap.ui.commons.Tree","!category":"function","!static":false},"expandAll":{"!description":"Expands all nodes in the tree","!type":"fn()","!category":"function","!static":false},"!module":"sap/ui/commons/Tree","attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>select<\/code> event of this <code>sap.ui.commons.Tree<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.Tree<\/code> itself.\n\nEvent is fired when a tree node is selected.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.Tree","!category":"function","!static":false},"getNodes":{"!description":"Gets content of aggregation <code>nodes<\/code>.\n\nFirst level nodes","!type":"fn() -> [sap.ui.commons.TreeNode]","!category":"function","!static":false},"setShowHorizontalScrollbar":{"!description":"Sets a new value for property <code>showHorizontalScrollbar<\/code>.\n\nDisplay horizontal scrollbar. If false, the overflow content will be hidden\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bShowHorizontalScrollbar: Boolean) -> sap.ui.commons.Tree","!category":"function","!static":false},"setSelectionMode":{"!description":"Sets a new value for property <code>selectionMode<\/code>.\n\nSelection mode of the Tree.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Legacy<\/code>.","!type":"fn(sSelectionMode: sap.ui.commons.TreeSelectionMode) -> sap.ui.commons.Tree","!category":"function","!static":false},"collapseAll":{"!description":"Collapses all nodes in the tree","!type":"fn()","!category":"function","!static":false},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nTree height\n\nDefault value is <code>auto<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getSelectionMode":{"!description":"Gets current value of property <code>selectionMode<\/code>.\n\nSelection mode of the Tree.\n\nDefault value is <code>Legacy<\/code>.","!type":"fn() -> sap.ui.commons.TreeSelectionMode","!category":"function","!static":false},"removeNode":{"!description":"Removes a node from the aggregation <code>nodes<\/code>.","!type":"fn(vNode: Number | String | sap.ui.commons.TreeNode) -> sap.ui.commons.TreeNode","!category":"function","!static":false},"getNodeByContext":{"!description":"Returns the node with the given context, or null if no such node currently exists","!type":"fn(oContext: sap.ui.model.Context)","!category":"function","!static":false},"!category":"class","setShowHeaderIcons":{"!description":"Sets a new value for property <code>showHeaderIcons<\/code>.\n\nShow Header icons (e.g. Expand/Collapse all). Only consider if showHeader is true\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowHeaderIcons: Boolean) -> sap.ui.commons.Tree","!category":"function","!static":false},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nTree width\n\nDefault value is <code>auto<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nTree title","!type":"fn() -> String","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nTree width\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>auto<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Tree","!category":"function","!static":false},"fireSelect":{"!description":"Fires event <code>select<\/code> to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.\n\nExpects the following event parameters:\n<ul>\n<li><code>node<\/code> of type <code>sap.ui.commons.TreeNode<\/code>The node which has been selected.<\/li>\n<li><code>nodeContext<\/code> of type <code>object<\/code>The binding context of the selected node.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> Boolean","!category":"function","!static":false},"insertNode":{"!description":"Inserts a node into the aggregation <code>nodes<\/code>.","!type":"fn(oNode: sap.ui.commons.TreeNode, iIndex: Number) -> sap.ui.commons.Tree","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Tree with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"getMinWidth":{"!description":"Gets current value of property <code>minWidth<\/code>.\n\nMinimal width for the Tree. Can be useful when, for example, the width is specified in percentage, to avoid the tree to become too narrow when container is resize","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>select<\/code> event of this <code>sap.ui.commons.Tree<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.Tree","!category":"function","!static":false},"fireSelectionChange":{"!description":"Fires event <code>selectionChange<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>nodes<\/code> of type <code>sap.ui.commons.TreeNode[]<\/code>The nodes which has been selected.<\/li>\n<li><code>nodeContexts<\/code> of type <code>object[]<\/code>The binding context of the selected nodes.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.Tree","!category":"function","!static":false},"!constructorDescription":"Constructor for a new Tree.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getShowHeader showHeader} : boolean (default: true)<\/li>\n<li>{@link #getShowHeaderIcons showHeaderIcons} : boolean (default: true)<\/li>\n<li>{@link #getShowHorizontalScrollbar showHorizontalScrollbar} : boolean (default: false)<\/li>\n<li>{@link #getMinWidth minWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getSelectionMode selectionMode} : sap.ui.commons.TreeSelectionMode (default: Legacy)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getNodes nodes} : sap.ui.commons.TreeNode[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selectionChange selectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","unbindNodes":{"!description":"Unbinds aggregation <code>nodes<\/code> from model data.","!type":"fn() -> sap.ui.commons.Tree","!category":"function","!static":false},"getShowHeader":{"!description":"Gets current value of property <code>showHeader<\/code>.\n\nTree Header is display. If false, the tree will be in a transparent mode\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"bindNodes":{"!description":"Binds aggregation <code>nodes<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!type":"fn(oBindingInfo: Object) -> sap.ui.commons.Tree","!category":"function","!static":false},"indexOfNode":{"!description":"Checks for the provided <code>sap.ui.commons.TreeNode<\/code> in the aggregation <code>nodes<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oNode: sap.ui.commons.TreeNode) -> Number","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Simple tree to display item in a hierarchical way","getShowHorizontalScrollbar":{"!description":"Gets current value of property <code>showHorizontalScrollbar<\/code>.\n\nDisplay horizontal scrollbar. If false, the overflow content will be hidden\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nTree title\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitle: String) -> sap.ui.commons.Tree","!category":"function","!static":false},"addNode":{"!description":"Adds some node to the aggregation <code>nodes<\/code>.","!type":"fn(oNode: sap.ui.commons.TreeNode) -> sap.ui.commons.Tree","!category":"function","!static":false},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nTree height\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>auto<\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.Tree","!category":"function","!static":false},"attachSelectionChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>selectionChange<\/code> event of this <code>sap.ui.commons.Tree<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.Tree<\/code> itself.\n\nfired when the selection of the tree has been changed","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.Tree","!category":"function","!static":false},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Tree.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.layout.BackgroundDesign":{"!description":"Background design (i.e. color), e.g. of a layout cell.","Header":{"!description":"\nA background design suitable for headers.","!type":"String","!category":"enum"},"Transparent":{"!description":"\nA transparent background.","!type":"String","!category":"enum"},"Fill2":{"!description":"\nAn opaque background design that looks medium filled.","!type":"String","!category":"enum"},"Border":{"!description":"\nA background design suitable for borders.","!type":"String","!category":"enum"},"Fill1":{"!description":"\nAn opaque background design that looks dark filled.","!type":"String","!category":"enum"},"Fill3":{"!description":"\nAn opaque background design that looks light filled.","!type":"String","!category":"enum"},"!category":"static class","Plain":{"!description":"\nA plain but opaque background design.","!type":"String","!category":"enum"},"!module":"sap/ui/commons/library"},"sap.ui.commons.form.FormLayout":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>Base layout for Forms.\nOther Layouts must inherit from this one.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.FormLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.FormLayout.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!category":"class","!constructorDescription":"Constructor for a new form/FormLayout.","!module":"sap/ui/commons/form/FormLayout","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.form.FormLayout.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.layout.form.FormLayout"},"sap.ui.commons.DatePicker":{"setLocale":{"!description":"Sets a new value for property <code>locale<\/code>.\n\nDefines the locale (language and country), e.g. \"en-US\", whose translations and Date formatters should be used to render the DatePicker.If the value property is bound to a model using a Date type the locale will be ignored, because the locale information of the model are used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sLocale: String) -> sap.ui.commons.DatePicker","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.DatePicker with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.TextField.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!constructorDescription":"Constructor for a new DatePicker.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLocale locale} : string<\/li>\n<li>{@link #getYyyymmdd yyyymmdd} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.commons.TextField#constructor sap.ui.commons.TextField}\ncan be used as well.","!module":"sap/ui/commons/DatePicker","getLocale":{"!description":"Gets current value of property <code>locale<\/code>.\n\nDefines the locale (language and country), e.g. \"en-US\", whose translations and Date formatters should be used to render the DatePicker.If the value property is bound to a model using a Date type the locale will be ignored, because the locale information of the model are used.","!type":"fn() -> String","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.DatePicker<\/code> control.<br>Allows end users to interact with dates.\nEntries can directly be written in, or selected from a calendar pad.\nNote: Dates can always be manually entered in the fix YYYYMMDD format, on top of the flexible \"locale\" format.\nIf the value is provided via data binding, using a Date.type the formatter of the Date.type is used.\nSince version 1.22 the unified.Calendar is used inside the datePicker. So applications using the DatePicker should load the unified library. Otherwise it will be loaded the first time a DatePicker is opened.","fireChange":{"!description":"Fire event change to attached listeners.\n\nProvides the following event parameters:\n<ul>\n<li>'newValue' of type <code>string<\/code> The new / changed value of the DatePicker.<\/li>\n<li>'newYyyymmdd' of type <code>string<\/code> The new / changed Yyyymmdd of the DatePicker. <\/li>\n<li>'invalidValue' of type <code>boolean<\/code> The new / changed value of the DatePicker is not a valid date. <\/li>\n<\/ul>","!type":"fn(bInvalidValue: Boolean) -> sap.ui.commons.DatePicker","!category":"function","!static":false},"!category":"class","getYyyymmdd":{"!description":"Gets current value of property <code>yyyymmdd<\/code>.\n\nDefines the date as a \"yyyymmdd\" string, independent from the format used. The inherited textField \"value\" attribute uses the date format as configured via the locale.\nThe date is interpreted as gregorian date","!type":"fn() -> String","!category":"function","!static":false},"setYyyymmdd":{"!description":"Sets a new value for property <code>yyyymmdd<\/code>.\n\nDefines the date as a \"yyyymmdd\" string, independent from the format used. The inherited textField \"value\" attribute uses the date format as configured via the locale.\nThe date is interpreted as gregorian date\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sYyyymmdd: String) -> sap.ui.commons.DatePicker","!category":"function","!static":false},"!proto":"sap.ui.commons.TextField","getAccessibilityInfo":{"!type":"fn()","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.DatePicker.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.Callout":{"addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.commons.Callout","!category":"function","!static":false},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nDetermines the content of the Callout","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Callout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.CalloutBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.ui.core.Control) -> Number","!category":"function","!static":false},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"!constructorDescription":"Constructor for a new Callout.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.commons.CalloutBase#constructor sap.ui.commons.CalloutBase}\ncan be used as well.","!module":"sap/ui/commons/Callout","destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!type":"fn() -> sap.ui.commons.Callout","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Popover<\/code> control.<br>Callout is a small popup with some useful information and links that is shown when a mouse is hovered over a specific view element.","insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.commons.Callout","!category":"function","!static":false},"!category":"class","!proto":"sap.ui.commons.CalloutBase","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Callout.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.FileUploader_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.FileUploader with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.FileUploader.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.FileUploader"},"sap.ui.commons.form.GridElementData_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.GridElementData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.GridElementData.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.form.GridElementData"},"sap.ui.commons.RatingIndicator_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RatingIndicator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.RatingIndicator"},"sap.ui.commons.ToggleButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ToggleButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.Button.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.ToggleButton"},"sap.ui.commons.SegmentedButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.SegmentedButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.SegmentedButton"},"sap.ui.commons.ImageMap_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ImageMap with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.ImageMap"},"sap.ui.commons.ToggleButton":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.ToggleButton<\/code> control.<br>The ToggleButton Control is a Button that can be toggled between pressed and normal state","extend":{"!description":"Creates a new subclass of class sap.ui.commons.ToggleButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.Button.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"setPressed":{"!description":"Sets a new value for property <code>pressed<\/code>.\n\nThe property is \u201ctrue\u201d when the control is toggled. The default state of this property is \"false\".\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bPressed: Boolean) -> sap.ui.commons.ToggleButton","!category":"function","!static":false},"!category":"class","!constructorDescription":"Constructor for a new ToggleButton.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPressed pressed} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.commons.Button#constructor sap.ui.commons.Button}\ncan be used as well.","!module":"sap/ui/commons/ToggleButton","getPressed":{"!description":"Gets current value of property <code>pressed<\/code>.\n\nThe property is \u201ctrue\u201d when the control is toggled. The default state of this property is \"false\".\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.ToggleButton.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"getAccessibilityInfo":{"!type":"fn()","!category":"function","!static":false},"!proto":"sap.ui.commons.Button"},"sap.ui.commons.layout.MatrixLayoutCell_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.MatrixLayoutCell with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.layout.MatrixLayoutCell"},"sap.ui.commons.FileUploaderParameter_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.FileUploaderParameter with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.FileUploaderParameter.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.FileUploaderParameter"},"sap.ui.commons.TriStateCheckBox_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.TriStateCheckBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.TriStateCheckBox"},"sap.ui.commons.FormattedTextViewControl":{"!description":"Marker interface for common controls which are suitable for use within a FormattedTextView.","!category":"static class","!module":"sap/ui/commons/library"},"sap.ui.commons.HorizontalDivider":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.HorizontalDivider with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"setType":{"!description":"Sets a new value for property <code>type<\/code>.\n\nDefines the type of the divider.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Area<\/code>.","!type":"fn(sType: sap.ui.commons.HorizontalDividerType) -> sap.ui.commons.HorizontalDivider","!category":"function","!static":false},"!constructorDescription":"Constructor for a new HorizontalDivider.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getType type} : sap.ui.commons.HorizontalDividerType (default: Area)<\/li>\n<li>{@link #getHeight height} : sap.ui.commons.HorizontalDividerHeight (default: Medium)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/commons/HorizontalDivider","getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nDefines the height of the divider.\n\nDefault value is <code>Medium<\/code>.","!type":"fn() -> sap.ui.commons.HorizontalDividerHeight","!category":"function","!static":false},"getType":{"!description":"Gets current value of property <code>type<\/code>.\n\nDefines the type of the divider.\n\nDefault value is <code>Area<\/code>.","!type":"fn() -> sap.ui.commons.HorizontalDividerType","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Divides the screen in visual areas.","setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nDefines the height of the divider.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Medium<\/code>.","!type":"fn(sHeight: sap.ui.commons.HorizontalDividerHeight) -> sap.ui.commons.HorizontalDivider","!category":"function","!static":false},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDefines the width of the divider.\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nDefines the width of the divider.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.HorizontalDivider","!category":"function","!static":false},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.HorizontalDivider.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.ColorPicker":{"getRGB":{"!description":"Deliver current RGB-values.","!type":"fn() -> Object","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ColorPicker with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"detachLiveChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>liveChange<\/code> event of this <code>sap.ui.commons.ColorPicker<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.ColorPicker","!category":"function","!static":false},"setMode":{"!description":"Sets a new value for property <code>mode<\/code>.\n\nDetermines the mode the ColorPicker works with - Hue Saturation and Value (HSV) or Hue Saturation and Lightness (HSL)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>HSV<\/code>.","!type":"fn(sMode: sap.ui.commons.ColorPickerMode) -> sap.ui.commons.ColorPicker","!category":"function","!static":false},"!constructorDescription":"Constructor for a new ColorPicker.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColorString colorString} : string<\/li>\n<li>{@link #getMode mode} : sap.ui.commons.ColorPickerMode (default: HSV)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/commons/ColorPicker","getColorString":{"!description":"Gets current value of property <code>colorString<\/code>.\n\nThis is the import-parameter of the ColorPicker.\nAs input-parameter, it can be a Hexadecimal string (#FFFFFF), a RGB-string rgb(255,255,255), a HSV-string hsv(360,100,100) or a CSS-colorname 'red'.\nAs output-parameter it is a RGB-string containing the current color.","!type":"fn() -> String","!category":"function","!static":false},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>change<\/code> event of this <code>sap.ui.commons.ColorPicker<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.ColorPicker","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>This control gives the user the opportunity to choose a color. The color can be defined using HEX-, RGB- or HSV-values or a CSS colorname.","setColorString":{"!description":"Sets a new value for property <code>colorString<\/code>.\n\nThis is the import-parameter of the ColorPicker.\nAs input-parameter, it can be a Hexadecimal string (#FFFFFF), a RGB-string rgb(255,255,255), a HSV-string hsv(360,100,100) or a CSS-colorname 'red'.\nAs output-parameter it is a RGB-string containing the current color.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sColorString: String) -> sap.ui.commons.ColorPicker","!category":"function","!static":false},"fireLiveChange":{"!description":"Fires event <code>liveChange<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>r<\/code> of type <code>int<\/code>Parameter containing the RED value (0-255)<\/li>\n<li><code>g<\/code> of type <code>int<\/code>Parameter containing the GREEN value (0-255)<\/li>\n<li><code>b<\/code> of type <code>int<\/code>Parameter containing the BLUE value (0-255)<\/li>\n<li><code>h<\/code> of type <code>int<\/code>Parameter containing the HUE value (0-360)<\/li>\n<li><code>s<\/code> of type <code>int<\/code>Parameter containing the SATURATION value (0-100)<\/li>\n<li><code>v<\/code> of type <code>int<\/code>Parameter containing the VALUE value (0-100)<\/li>\n<li><code>l<\/code> of type <code>int<\/code>Parameter containing the LIGHTNESS value (0-100)<\/li>\n<li><code>hex<\/code> of type <code>string<\/code>Parameter containing the Hexadecimal string (#FFFFFF)<\/li>\n<li><code>alpha<\/code> of type <code>string<\/code>Parameter containing the alpha value (transparency)<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.ColorPicker","!category":"function","!static":false},"attachLiveChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>liveChange<\/code> event of this <code>sap.ui.commons.ColorPicker<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.ColorPicker<\/code> itself.\n\nValue was changed. This event is fired during the mouse move. The normal change event ist only fired by mouseup.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.ColorPicker","!category":"function","!static":false},"fireChange":{"!description":"Fires event <code>change<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>r<\/code> of type <code>int<\/code>Parameter containing the RED value (0-255)<\/li>\n<li><code>g<\/code> of type <code>int<\/code>Parameter containing the GREEN value (0-255)<\/li>\n<li><code>b<\/code> of type <code>int<\/code>Parameter containing the BLUE value (0-255)<\/li>\n<li><code>h<\/code> of type <code>int<\/code>Parameter containing the HUE value (0-360)<\/li>\n<li><code>s<\/code> of type <code>int<\/code>Parameter containing the SATURATION value (0-100)<\/li>\n<li><code>v<\/code> of type <code>int<\/code>Parameter containing the VALUE value (0-100)<\/li>\n<li><code>l<\/code> of type <code>int<\/code>Parameter containing the LIGHTNESS value (0-100)<\/li>\n<li><code>hex<\/code> of type <code>string<\/code>Parameter containing the Hexadecimal string (#FFFFFF)<\/li>\n<li><code>alpha<\/code> of type <code>string<\/code>Parameter containing the alpha value (transparency)<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.ColorPicker","!category":"function","!static":false},"getMode":{"!description":"Gets current value of property <code>mode<\/code>.\n\nDetermines the mode the ColorPicker works with - Hue Saturation and Value (HSV) or Hue Saturation and Lightness (HSL)\n\nDefault value is <code>HSV<\/code>.","!type":"fn() -> sap.ui.commons.ColorPickerMode","!category":"function","!static":false},"!category":"class","attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>change<\/code> event of this <code>sap.ui.commons.ColorPicker<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.ColorPicker<\/code> itself.\n\nValue was changed. This event is fired if the value has changed by an user action.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.ColorPicker","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.ColorPicker.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Control"},"sap.ui.commons.TriStateCheckBoxState":{"!description":"States for TriStateCheckBox","Unchecked":{"!description":"unchecked, default value for tri-state checkbox","!type":"String","!category":"enum"},"Checked":{"!description":"checked value for tri-state checkbox","!type":"String","!category":"enum"},"!category":"static class","Mixed":{"!description":"mixed state for tri-state checkbox","!type":"String","!category":"enum"},"!module":"sap/ui/commons/library"},"sap.ui.commons.TriStateCheckBox":{"getTextDirection":{"!description":"Gets current value of property <code>textDirection<\/code>.\n\nThe value can be set to LTR or RTL. Otherwise, the control inherits the text direction from its parent control.\n\nDefault value is <code>Inherit<\/code>.","!type":"fn() -> sap.ui.core.TextDirection","!category":"function","!static":false},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nUsing this property, the control could be disabled, if required.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!module":"sap/ui/commons/TriStateCheckBox","getValueState":{"!description":"Gets current value of property <code>valueState<\/code>.\n\nAccepts the core enumeration ValueState.type that supports 'None', 'Error', 'Warning' and 'Success'.\n\nDefault value is <code>None<\/code>.","!type":"fn() -> sap.ui.core.ValueState","!category":"function","!static":false},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nDefines the text displayed next to the check box\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sText: String) -> sap.ui.commons.TriStateCheckBox","!category":"function","!static":false},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nDefines the text displayed next to the check box","!type":"fn() -> String","!category":"function","!static":false},"setEditable":{"!description":"Sets a new value for property <code>editable<\/code>.\n\nSpecifies whether the user shall be allowed to flag the check box\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEditable: Boolean) -> sap.ui.commons.TriStateCheckBox","!category":"function","!static":false},"toggle":{"!description":"Method called whenever a user clicks on a tri-state checkbox","!type":"fn(destState: sap.ui.commons.TriStateCheckBoxState)","!category":"function","!static":false},"setValueState":{"!description":"Sets a new value for property <code>valueState<\/code>.\n\nAccepts the core enumeration ValueState.type that supports 'None', 'Error', 'Warning' and 'Success'.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!type":"fn(sValueState: sap.ui.core.ValueState) -> sap.ui.commons.TriStateCheckBox","!category":"function","!static":false},"!category":"class","setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nUsing this property, the control could be disabled, if required.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.TriStateCheckBox","!category":"function","!static":false},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nThe width can be set to an absolute value. If no value is set, the control width results from the text length.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nThe width can be set to an absolute value. If no value is set, the control width results from the text length.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.TriStateCheckBox","!category":"function","!static":false},"setSelectionState":{"!description":"Sets a new value for property <code>selectionState<\/code>.\n\nDefines the states of the checkbox\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Unchecked<\/code>.","!type":"fn(sSelectionState: sap.ui.commons.TriStateCheckBoxState) -> sap.ui.commons.TriStateCheckBox","!category":"function","!static":false},"getEditable":{"!description":"Gets current value of property <code>editable<\/code>.\n\nSpecifies whether the user shall be allowed to flag the check box\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setTextDirection":{"!description":"Sets a new value for property <code>textDirection<\/code>.\n\nThe value can be set to LTR or RTL. Otherwise, the control inherits the text direction from its parent control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.ui.commons.TriStateCheckBox","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.TriStateCheckBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!constructorDescription":"Constructor for a new TriStateCheckBox.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSelectionState selectionState} : sap.ui.commons.TriStateCheckBoxState (default: Unchecked)<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>change<\/code> event of this <code>sap.ui.commons.TriStateCheckBox<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.TriStateCheckBox","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>TriStateCheckBox to reflect mixed state for checkboxes. The control can display three states, namely checked, unchecked and mixed. However, mixed state cannot be directly reached by user interaction on the particular control.\nIt can be only set by the control's public toggle function, to make a behaviour possible which is e.g. required in checkbox trees.","fireChange":{"!description":"Fires event <code>change<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>selectionState<\/code> of type <code>string<\/code>Checks whether the box is flagged or not flagged.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.TriStateCheckBox","!category":"function","!static":false},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>change<\/code> event of this <code>sap.ui.commons.TriStateCheckBox<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.TriStateCheckBox<\/code> itself.\n\nEvent is triggered when the control status is changed by the user by flagging or unflagging the checkbox.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.TriStateCheckBox","!category":"function","!static":false},"getSelectionState":{"!description":"Gets current value of property <code>selectionState<\/code>.\n\nDefines the states of the checkbox\n\nDefault value is <code>Unchecked<\/code>.","!type":"fn() -> sap.ui.commons.TriStateCheckBoxState","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.TriStateCheckBox.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Control"},"sap.ui.commons.Paginator":{"attachPage":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>page<\/code> event of this <code>sap.ui.commons.Paginator<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.Paginator<\/code> itself.\n\nEvent is fired when the user navigates to another page by selecting it directly, or by jumping forward/backward.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.Paginator","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Paginator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"firePage":{"!description":"Fires event <code>page<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>srcPage<\/code> of type <code>int<\/code>The page which is the current one before the page event is fired (and another page is displayed)<\/li>\n<li><code>targetPage<\/code> of type <code>int<\/code>The page that shall be displayed next after the page event is fired.\n\nThe page number is 1-based: the first page has index 1, not 0, to match the number visible in the UI.<\/li>\n<li><code>type<\/code> of type <code>sap.ui.commons.PaginatorEvent<\/code>Provides the values 'First', 'Last', 'Next', 'Previous', 'Goto'. The event parameter informs the application\nhow the user navigated to the new page: Whether the 'Next' button was used, or another button, or whether the page was directly\nselected<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.Paginator","!category":"function","!static":false},"!constructorDescription":"Constructor for a new Paginator.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getCurrentPage currentPage} : int (default: 1)<\/li>\n<li>{@link #getNumberOfPages numberOfPages} : int<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:page page} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/commons/Paginator","detachPage":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>page<\/code> event of this <code>sap.ui.commons.Paginator<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.Paginator","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Provides navigation between pages within a list of numbered pages.","getNumberOfPages":{"!description":"Gets current value of property <code>numberOfPages<\/code>.\n\nRepresents the overall number of pages that are embedded into the parent control","!type":"fn() -> Number","!category":"function","!static":false},"setNumberOfPages":{"!description":"Sets a new value for property <code>numberOfPages<\/code>.\n\nRepresents the overall number of pages that are embedded into the parent control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(iNumberOfPages: Number) -> sap.ui.commons.Paginator","!category":"function","!static":false},"!category":"class","getCurrentPage":{"!description":"Gets current value of property <code>currentPage<\/code>.\n\nRepresents the current page (first page has index 1, not 0, to match the visual number)\n\nDefault value is <code>1<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"setCurrentPage":{"!description":"Sets a new value for property <code>currentPage<\/code>.\n\nRepresents the current page (first page has index 1, not 0, to match the visual number)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1<\/code>.","!type":"fn(iCurrentPage: Number) -> sap.ui.commons.Paginator","!category":"function","!static":false},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Paginator.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.layout.ResponsiveFlowLayoutData":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>This is a LayoutData Element that can be added to a control if this control is used within a ResponsiveFlowLayout","setMargin":{"!description":"Setter for property <code>margin<\/code>.\n\nDefault value is <code>true<\/code>","!type":"fn(bMargin: Boolean) -> sap.ui.layout.ResponsiveFlowLayoutData","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.ResponsiveFlowLayoutData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.ResponsiveFlowLayoutData.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"getMargin":{"!description":"Getter for property <code>margin<\/code>.\nThis property prevents any margin of the element if set to false\n\nDefault value is <code>true<\/code>","!type":"fn() -> Boolean","!category":"function","!static":false},"!category":"class","!constructorDescription":"Constructor for a new layout/ResponsiveFlowLayoutData.","!module":"sap/ui/commons/layout/ResponsiveFlowLayoutData","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.layout.ResponsiveFlowLayoutData.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.layout.ResponsiveFlowLayoutData"},"sap.ui.commons.MenuBar_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.MenuBar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.MenuBar"},"sap.ui.commons.ResponsiveContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ResponsiveContainer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.ResponsiveContainer"},"sap.ui.commons.Splitter":{"insertFirstPaneContent":{"!description":"Inserts a firstPaneContent into the aggregation <code>firstPaneContent<\/code>.","!type":"fn(oFirstPaneContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.commons.Splitter","!category":"function","!static":false},"getFirstPaneContent":{"!description":"Gets content of aggregation <code>firstPaneContent<\/code>.\n\nControls inside the first pane. These are the left ones in case of defining a vertical splitter, and the top ones in case of using the horizontal splitter.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"getMinSizeSecondPane":{"!description":"Gets current value of property <code>minSizeSecondPane<\/code>.\n\nThe minimum size (width for vertical splitter or height for horizontal splitter) of the second Pane\n\nDefault value is <code>0%<\/code>.","!type":"fn() -> sap.ui.core.Percentage","!category":"function","!static":false},"setSplitterOrientation":{"!description":"Sets a new value for property <code>splitterOrientation<\/code>.\n\nThe splitter can have horizontal or vertical orientation.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Vertical<\/code>.","!type":"fn(sSplitterOrientation: sap.ui.core.Orientation) -> sap.ui.commons.Splitter","!category":"function","!static":false},"setMinSizeSecondPane":{"!description":"Sets a new value for property <code>minSizeSecondPane<\/code>.\n\nThe minimum size (width for vertical splitter or height for horizontal splitter) of the second Pane\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0%<\/code>.","!type":"fn(sMinSizeSecondPane: sap.ui.core.Percentage) -> sap.ui.commons.Splitter","!category":"function","!static":false},"getMinSizeFirstPane":{"!description":"Gets current value of property <code>minSizeFirstPane<\/code>.\n\nThe minimum size (width for vertical splitter or height for horizontal splitter) of the first Pane\n\nDefault value is <code>0%<\/code>.","!type":"fn() -> sap.ui.core.Percentage","!category":"function","!static":false},"removeFirstPaneContent":{"!description":"Removes a firstPaneContent from the aggregation <code>firstPaneContent<\/code>.","!type":"fn(vFirstPaneContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"addSecondPaneContent":{"!description":"Adds some secondPaneContent to the aggregation <code>secondPaneContent<\/code>.","!type":"fn(oSecondPaneContent: sap.ui.core.Control) -> sap.ui.commons.Splitter","!category":"function","!static":false},"!module":"sap/ui/commons/Splitter","insertSecondPaneContent":{"!description":"Inserts a secondPaneContent into the aggregation <code>secondPaneContent<\/code>.","!type":"fn(oSecondPaneContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.commons.Splitter","!category":"function","!static":false},"removeSecondPaneContent":{"!description":"Removes a secondPaneContent from the aggregation <code>secondPaneContent<\/code>.","!type":"fn(vSecondPaneContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"addFirstPaneContent":{"!description":"Adds some firstPaneContent to the aggregation <code>firstPaneContent<\/code>.","!type":"fn(oFirstPaneContent: sap.ui.core.Control) -> sap.ui.commons.Splitter","!category":"function","!static":false},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nThe height of the split area in px or in %\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.commons.SplitterSize","!category":"function","!static":false},"getSplitterBarVisible":{"!description":"Gets current value of property <code>splitterBarVisible<\/code>.\n\nset the splitter bar to be visible or not.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getShowScrollBars":{"!description":"Gets current value of property <code>showScrollBars<\/code>.\n\nSpecifies if the browser should display scroll bars or simply cut the content of a splitter pane when the content does not fit into its pane.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setSplitterBarVisible":{"!description":"Sets a new value for property <code>splitterBarVisible<\/code>.\n\nset the splitter bar to be visible or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bSplitterBarVisible: Boolean) -> sap.ui.commons.Splitter","!category":"function","!static":false},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nThe width of the split area in px or in %\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.commons.SplitterSize","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nThe width of the split area in px or in %\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sWidth: sap.ui.commons.SplitterSize) -> sap.ui.commons.Splitter","!category":"function","!static":false},"destroyFirstPaneContent":{"!description":"Destroys all the firstPaneContent in the aggregation <code>firstPaneContent<\/code>.","!type":"fn() -> sap.ui.commons.Splitter","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Splitter with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!constructorDescription":"Constructor for a new Splitter.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSplitterOrientation splitterOrientation} : sap.ui.core.Orientation (default: Vertical)<\/li>\n<li>{@link #getSplitterPosition splitterPosition} : sap.ui.core.Percentage (default: 50%)<\/li>\n<li>{@link #getMinSizeFirstPane minSizeFirstPane} : sap.ui.core.Percentage (default: 0%)<\/li>\n<li>{@link #getMinSizeSecondPane minSizeSecondPane} : sap.ui.core.Percentage (default: 0%)<\/li>\n<li>{@link #getWidth width} : sap.ui.commons.SplitterSize (default: 100%)<\/li>\n<li>{@link #getHeight height} : sap.ui.commons.SplitterSize (default: 100%)<\/li>\n<li>{@link #getShowScrollBars showScrollBars} : boolean (default: true)<\/li>\n<li>{@link #getSplitterBarVisible splitterBarVisible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getFirstPaneContent firstPaneContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getSecondPaneContent secondPaneContent} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getSplitterPosition":{"!description":"Gets current value of property <code>splitterPosition<\/code>.\n\nPosition of splitter bar in percentage.\nThe default value means that the splitter is positioned in the middle of the area that is available for the splitter.\n\nDefault value is <code>50%<\/code>.","!type":"fn() -> sap.ui.core.Percentage","!category":"function","!static":false},"destroySecondPaneContent":{"!description":"Destroys all the secondPaneContent in the aggregation <code>secondPaneContent<\/code>.","!type":"fn() -> sap.ui.commons.Splitter","!category":"function","!static":false},"setMinSizeFirstPane":{"!description":"Sets a new value for property <code>minSizeFirstPane<\/code>.\n\nThe minimum size (width for vertical splitter or height for horizontal splitter) of the first Pane\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0%<\/code>.","!type":"fn(sMinSizeFirstPane: sap.ui.core.Percentage) -> sap.ui.commons.Splitter","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.ui.layout.Splitter<\/code> control.<br>Allows to split the screen into two areas. Make sure that the container for the splitter has an absolute height or set an absolute height for the splitter using the height property. Otherwise the height of the splitter is calculated by the height of its contents.","removeAllSecondPaneContent":{"!description":"Removes all the controls from the aggregation <code>secondPaneContent<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"removeAllFirstPaneContent":{"!description":"Removes all the controls from the aggregation <code>firstPaneContent<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"indexOfFirstPaneContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>firstPaneContent<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oFirstPaneContent: sap.ui.core.Control) -> Number","!category":"function","!static":false},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nThe height of the split area in px or in %\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sHeight: sap.ui.commons.SplitterSize) -> sap.ui.commons.Splitter","!category":"function","!static":false},"getSecondPaneContent":{"!description":"Gets content of aggregation <code>secondPaneContent<\/code>.\n\nControls inside the second pane. These are the right ones in case of defining a vertical splitter, and the bottom ones in case of using the horizontal splitter.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"setSplitterPosition":{"!description":"Sets a new value for property <code>splitterPosition<\/code>.\n\nPosition of splitter bar in percentage.\nThe default value means that the splitter is positioned in the middle of the area that is available for the splitter.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>50%<\/code>.","!type":"fn(sSplitterPosition: sap.ui.core.Percentage) -> sap.ui.commons.Splitter","!category":"function","!static":false},"indexOfSecondPaneContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>secondPaneContent<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oSecondPaneContent: sap.ui.core.Control) -> Number","!category":"function","!static":false},"setShowScrollBars":{"!description":"Sets a new value for property <code>showScrollBars<\/code>.\n\nSpecifies if the browser should display scroll bars or simply cut the content of a splitter pane when the content does not fit into its pane.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowScrollBars: Boolean) -> sap.ui.commons.Splitter","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Splitter.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Control","getSplitterOrientation":{"!description":"Gets current value of property <code>splitterOrientation<\/code>.\n\nThe splitter can have horizontal or vertical orientation.\n\nDefault value is <code>Vertical<\/code>.","!type":"fn() -> sap.ui.core.Orientation","!category":"function","!static":false}},"sap.ui.commons.ColorPicker_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ColorPicker with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.ColorPicker"},"sap.ui.commons.Dialog":{"getAutoClose":{"!description":"Gets current value of property <code>autoClose<\/code>.\n\nIf this property is set to true the Dialog will close if the Dialog loses its focus\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setMaxHeight":{"!description":"Sets a new value for property <code>maxHeight<\/code>.\n\nMaximum outer height of the dialog window. If set, neither the user nor some layout settings can make the window larger.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sMaxHeight: sap.ui.core.CSSSize) -> sap.ui.commons.Dialog","!category":"function","!static":false},"setModal":{"!description":"Sets a new value for property <code>modal<\/code>.\n\nSpecifies whether the dialog should be modal, or not. In case of <code>true<\/code> the focus is kept inside the dialog.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bModal: Boolean) -> sap.ui.commons.Dialog","!category":"function","!static":false},"!module":"sap/ui/commons/Dialog","removeButton":{"!description":"Removes a button from the aggregation <code>buttons<\/code>.","!type":"fn(vButton: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"close":{"!description":"Closes the dialog control instance.","!type":"fn()","!category":"function","!static":false},"getResizable":{"!description":"Gets current value of property <code>resizable<\/code>.\n\nSpecifies whether the dialog window can be resized by the user. The dialog frame contains the visual symbol.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"open":{"!description":"Opens the dialog control instance.","!type":"fn()","!category":"function","!static":false},"getScrollLeft":{"!description":"Gets current value of property <code>scrollLeft<\/code>.\n\nScroll position from left to right. \"0\" means leftmost position.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"setApplyContentPadding":{"!description":"Sets a new value for property <code>applyContentPadding<\/code>.\n\nPadding is theme-dependent. When set to \"false\", the content extends to the dialog borders.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bApplyContentPadding: Boolean) -> sap.ui.commons.Dialog","!category":"function","!static":false},"getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nDialog title displayed in the header.\n\nDefault value is <code><\/code>.","!type":"fn() -> String","!category":"function","!static":false},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nOuter width of dialog window. When not set and not constrained by one of the width parameters (minWidth/maxWidth), the window size is automatically adapted to the content.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getShowCloseButton":{"!description":"Gets current value of property <code>showCloseButton<\/code>.\n\nDisplays a close button in the title bar.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getApplyContentPadding":{"!description":"Gets current value of property <code>applyContentPadding<\/code>.\n\nPadding is theme-dependent. When set to \"false\", the content extends to the dialog borders.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.commons.Dialog","!category":"function","!static":false},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nAggregation of the content of the dialog (one or more controls).\n\nWarning: when content is added with width given as a percentage, the Dialog itself should have a width set.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"getMinWidth":{"!description":"Gets current value of property <code>minWidth<\/code>.\n\nMinimum outer width of the dialog window. When set, neither the user nor some layout settings can make the window smaller.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"!constructorDescription":"Constructor for a new Dialog.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getScrollLeft scrollLeft} : int (default: 0)<\/li>\n<li>{@link #getScrollTop scrollTop} : int (default: 0)<\/li>\n<li>{@link #getTitle title} : string (default: )<\/li>\n<li>{@link #getApplyContentPadding applyContentPadding} : boolean (default: true)<\/li>\n<li>{@link #getShowCloseButton showCloseButton} : boolean (default: true)<\/li>\n<li>{@link #getResizable resizable} : boolean (default: true)<\/li>\n<li>{@link #getMinWidth minWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getMinHeight minHeight} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getMaxWidth maxWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getMaxHeight maxHeight} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getContentBorderDesign contentBorderDesign} : sap.ui.commons.enums.BorderDesign (default: None)<\/li>\n<li>{@link #getModal modal} : boolean (default: false)<\/li>\n<li>{@link #getAccessibleRole accessibleRole} : sap.ui.core.AccessibleRole (default: Dialog)<\/li>\n<li>{@link #getKeepInWindow keepInWindow} : boolean (default: false)<\/li>\n<li>{@link #getAutoClose autoClose} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getButtons buttons} : sap.ui.core.Control[]<\/li>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:closed closed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getOpenState":{"!description":"Indicates whether the Dialog is currently open, closed, or transitioning between these states.","!type":"fn() -> sap.ui.core.OpenState","!category":"function","!static":false},"fireClosed":{"!description":"Fires event <code>closed<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>width<\/code> of type <code>int<\/code>The width of the dialog when closed<\/li>\n<li><code>height<\/code> of type <code>int<\/code>The height of the dialog when closed<\/li>\n<li><code>top<\/code> of type <code>int<\/code>The top position of the dialog when closed<\/li>\n<li><code>left<\/code> of type <code>int<\/code>The left position of the dialog when closed<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.Dialog","!category":"function","!static":false},"setKeepInWindow":{"!description":"Sets a new value for property <code>keepInWindow<\/code>.\n\nSpecifies whether Dialog movement should be restricted to the visible area of the window. This only affects drag&drop movements by the user. This doesn't affect modal dialogs -> modal dialogs always stay in the window.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bKeepInWindow: Boolean) -> sap.ui.commons.Dialog","!category":"function","!static":false},"getAccessibleRole":{"!description":"Gets current value of property <code>accessibleRole<\/code>.\n\nThe ARIA role for the control. E.g. for alert-style Dialogs this can be set to \"AlertDialog\".\n\nDefault value is <code>Dialog<\/code>.","!type":"fn() -> sap.ui.core.AccessibleRole","!category":"function","!static":false},"getMaxHeight":{"!description":"Gets current value of property <code>maxHeight<\/code>.\n\nMaximum outer height of the dialog window. If set, neither the user nor some layout settings can make the window larger.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nDialog title displayed in the header.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!type":"fn(sTitle: String) -> sap.ui.commons.Dialog","!category":"function","!static":false},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nOuter height of dialog window. When not set and not constrained by one of the height parameters (minHeight/maxHeight), the window size is automatically adapted to the content.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.Dialog","!category":"function","!static":false},"getKeepInWindow":{"!description":"Gets current value of property <code>keepInWindow<\/code>.\n\nSpecifies whether Dialog movement should be restricted to the visible area of the window. This only affects drag&drop movements by the user. This doesn't affect modal dialogs -> modal dialogs always stay in the window.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setAutoClose":{"!description":"Sets a new value for property <code>autoClose<\/code>.\n\nIf this property is set to true the Dialog will close if the Dialog loses its focus\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bAutoClose: Boolean) -> sap.ui.commons.Dialog","!category":"function","!static":false},"detachClosed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>closed<\/code> event of this <code>sap.ui.commons.Dialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.Dialog","!category":"function","!static":false},"!proto":"sap.ui.core.Control","getDefaultButton":{"!description":"ID of the element which is the current target of the association <code>defaultButton<\/code>, or <code>null<\/code>.","!type":"fn() -> sap.ui.commons.Button","!category":"function","!static":false},"getEnabled":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!type":"fn() -> Boolean","!category":"function","!static":false},"setAccessibleRole":{"!description":"Sets a new value for property <code>accessibleRole<\/code>.\n\nThe ARIA role for the control. E.g. for alert-style Dialogs this can be set to \"AlertDialog\".\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Dialog<\/code>.","!type":"fn(sAccessibleRole: sap.ui.core.AccessibleRole) -> sap.ui.commons.Dialog","!category":"function","!static":false},"setScrollLeft":{"!description":"Sets a new value for property <code>scrollLeft<\/code>.\n\nScroll position from left to right. \"0\" means leftmost position.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(iScrollLeft: Number) -> sap.ui.commons.Dialog","!category":"function","!static":false},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.ui.core.Control) -> Number","!category":"function","!static":false},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"setMinWidth":{"!description":"Sets a new value for property <code>minWidth<\/code>.\n\nMinimum outer width of the dialog window. When set, neither the user nor some layout settings can make the window smaller.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sMinWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Dialog","!category":"function","!static":false},"setDefaultButton":{"!description":"Sets the associated <code>defaultButton<\/code>.","!type":"fn(oDefaultButton: sap.ui.commons.Button) -> sap.ui.commons.Dialog","!category":"function","!static":false},"setMinHeight":{"!description":"Sets a new value for property <code>minHeight<\/code>.\n\nMinimum outer height of the dialog window. When set, neither the user nor some layout settings can make the window smaller.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sMinHeight: sap.ui.core.CSSSize) -> sap.ui.commons.Dialog","!category":"function","!static":false},"setScrollTop":{"!description":"Sets a new value for property <code>scrollTop<\/code>.\n\nScroll position from top to bottom. \"0\" means topmost position.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(iScrollTop: Number) -> sap.ui.commons.Dialog","!category":"function","!static":false},"destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!type":"fn() -> sap.ui.commons.Dialog","!category":"function","!static":false},"getMaxWidth":{"!description":"Gets current value of property <code>maxWidth<\/code>.\n\nMaximum outer width of the dialog window. If set, neither the user nor some layout settings can make the window larger.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nOuter height of dialog window. When not set and not constrained by one of the height parameters (minHeight/maxHeight), the window size is automatically adapted to the content.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"destroyButtons":{"!description":"Destroys all the buttons in the aggregation <code>buttons<\/code>.","!type":"fn() -> sap.ui.commons.Dialog","!category":"function","!static":false},"getScrollTop":{"!description":"Gets current value of property <code>scrollTop<\/code>.\n\nScroll position from top to bottom. \"0\" means topmost position.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"setInitialFocus":{"!description":"Sets the associated <code>initialFocus<\/code>.","!type":"fn(oInitialFocus: sap.ui.core.Control) -> sap.ui.commons.Dialog","!category":"function","!static":false},"!category":"class","indexOfButton":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>buttons<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oButton: sap.ui.core.Control) -> Number","!category":"function","!static":false},"getButtons":{"!description":"Gets content of aggregation <code>buttons<\/code>.\n\nAggregation of the buttons to display at the bottom of the dialog, for example OK and Cancel. Association defaultButton can be used for one of the defined buttons.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nOuter width of dialog window. When not set and not constrained by one of the width parameters (minWidth/maxWidth), the window size is automatically adapted to the content.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Dialog","!category":"function","!static":false},"setMaxWidth":{"!description":"Sets a new value for property <code>maxWidth<\/code>.\n\nMaximum outer width of the dialog window. If set, neither the user nor some layout settings can make the window larger.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sMaxWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Dialog","!category":"function","!static":false},"getInitialFocus":{"!description":"ID of the element which is the current target of the association <code>initialFocus<\/code>, or <code>null<\/code>.","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false},"getModal":{"!description":"Gets current value of property <code>modal<\/code>.\n\nSpecifies whether the dialog should be modal, or not. In case of <code>true<\/code> the focus is kept inside the dialog.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Dialog with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"getContentBorderDesign":{"!description":"Gets current value of property <code>contentBorderDesign<\/code>.\n\nSpecifies the border design. Border design is theme dependent.\n\nDefault value is <code>None<\/code>.","!type":"fn() -> sap.ui.commons.enums.BorderDesign","!category":"function","!static":false},"attachClosed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>closed<\/code> event of this <code>sap.ui.commons.Dialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.Dialog<\/code> itself.\n\nEvent is fired when the dialog has been closed (after closing-animation etc.). Event parameters provide information about last position and last size.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.Dialog","!category":"function","!static":false},"isOpen":{"!description":"Indicates whether the Dialog is open (this includes opening and closing animations).\nFor more detailed information about the current state check Dialog.getOpenState().","!type":"fn() -> Boolean","!category":"function","!static":false},"removeAllButtons":{"!description":"Removes all the controls from the aggregation <code>buttons<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"insertButton":{"!description":"Inserts a button into the aggregation <code>buttons<\/code>.","!type":"fn(oButton: sap.ui.core.Control, iIndex: Number) -> sap.ui.commons.Dialog","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Dialog<\/code> control.<br>An interactive window appearing on request displaying information to the user. The API supports features such as popups with fixed sizes, popups with unlimited width, scrolling bars for large windows, and control nesting (for example, a drop-down list can be included in the window).","insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.commons.Dialog","!category":"function","!static":false},"addButton":{"!description":"Adds some button to the aggregation <code>buttons<\/code>.","!type":"fn(oButton: sap.ui.core.Control) -> sap.ui.commons.Dialog","!category":"function","!static":false},"setShowCloseButton":{"!description":"Sets a new value for property <code>showCloseButton<\/code>.\n\nDisplays a close button in the title bar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowCloseButton: Boolean) -> sap.ui.commons.Dialog","!category":"function","!static":false},"setResizable":{"!description":"Sets a new value for property <code>resizable<\/code>.\n\nSpecifies whether the dialog window can be resized by the user. The dialog frame contains the visual symbol.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bResizable: Boolean) -> sap.ui.commons.Dialog","!category":"function","!static":false},"getMinHeight":{"!description":"Gets current value of property <code>minHeight<\/code>.\n\nMinimum outer height of the dialog window. When set, neither the user nor some layout settings can make the window smaller.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setContentBorderDesign":{"!description":"Sets a new value for property <code>contentBorderDesign<\/code>.\n\nSpecifies the border design. Border design is theme dependent.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!type":"fn(sContentBorderDesign: sap.ui.commons.enums.BorderDesign) -> sap.ui.commons.Dialog","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Dialog.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.TreeNode":{"removeAllNodes":{"!description":"Removes all the controls from the aggregation <code>nodes<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.TreeNode]","!category":"function","!static":false},"setSelectable":{"!description":"Redefinition of Setter for property <code>selectable<\/code> for validation purpose.\n\nDefault value is <code>true<\/code>","!type":"fn(bSelectable: Boolean) -> sap.ui.commons.TreeNode","!category":"function","!static":false},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"getExpanded":{"!description":"Gets current value of property <code>expanded<\/code>.\n\nNode is expanded\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"destroyNodes":{"!description":"Destroys all the nodes in the aggregation <code>nodes<\/code>.","!type":"fn() -> sap.ui.commons.TreeNode","!category":"function","!static":false},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nNode text\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sText: String) -> sap.ui.commons.TreeNode","!category":"function","!static":false},"removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"!module":"sap/ui/commons/TreeNode","getNodes":{"!description":"Gets content of aggregation <code>nodes<\/code>.\n\nSubnodes for the current node","!type":"fn() -> [sap.ui.commons.TreeNode]","!category":"function","!static":false},"setHasExpander":{"!description":"Sets a new value for property <code>hasExpander<\/code>.\n\nShould the node has an expander.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bHasExpander: Boolean) -> sap.ui.commons.TreeNode","!category":"function","!static":false},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nIcon to display in front of the node","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nNode text","!type":"fn() -> String","!category":"function","!static":false},"attachSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>selected<\/code> event of this <code>sap.ui.commons.TreeNode<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.TreeNode<\/code> itself.\n\nNode is selected","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.TreeNode","!category":"function","!static":false},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"detachSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>selected<\/code> event of this <code>sap.ui.commons.TreeNode<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.TreeNode","!category":"function","!static":false},"fireSelected":{"!description":"Fires event <code>selected<\/code> to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.commons.TreeNode","!category":"function","!static":false},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.ui.commons.TreeNode","!category":"function","!static":false},"removeNode":{"!description":"Removes a node from the aggregation <code>nodes<\/code>.","!type":"fn(vNode: Number | String | sap.ui.commons.TreeNode) -> sap.ui.commons.TreeNode","!category":"function","!static":false},"!category":"class","setIsSelected":{"!description":"Redefinition of Setter for property <code>isSelected<\/code> for validation purpose\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn(bIsSelected: Boolean) -> sap.ui.commons.TreeNode","!category":"function","!static":false},"expand":{"!description":"Expands the node.","!type":"fn(bExpandChildren: Boolean, bDisableExpandFinishedHandler: Boolean)","!category":"function","!static":false},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"getIsSelected":{"!description":"Gets current value of property <code>isSelected<\/code>.\n\nNode is selected\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"collapse":{"!description":"Collapses the node.","!type":"fn(bCollapseChildren: Boolean, bDisableCollapseFinishedHandler: Boolean)","!category":"function","!static":false},"select":{"!description":"Select the node, and if any, deselects the previously selected node","!type":"fn(bSuppressEvent: Boolean, bDeselectOtherNodes: Boolean)","!category":"function","!static":false},"insertNode":{"!description":"Inserts a node into the aggregation <code>nodes<\/code>.","!type":"fn(oNode: sap.ui.commons.TreeNode, iIndex: Number) -> sap.ui.commons.TreeNode","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.TreeNode with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"fireToggleOpenState":{"!description":"Fires event <code>toggleOpenState<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>opened<\/code> of type <code>boolean<\/code>Node has been opened if true<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.TreeNode","!category":"function","!static":false},"getSelectable":{"!description":"Gets current value of property <code>selectable<\/code>.\n\nThe node is selectable. If true, clicking on the node text triggers \"selected\" event\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"getHasExpander":{"!description":"Gets current value of property <code>hasExpander<\/code>.\n\nShould the node has an expander.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!constructorDescription":"Constructor for a new TreeNode.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getExpanded expanded} : boolean (default: true)<\/li>\n<li>{@link #getHasExpander hasExpander} : boolean (default: false)<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getIsSelected isSelected} : boolean (default: false)<\/li>\n<li>{@link #getSelectable selectable} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getNodes nodes} : sap.ui.commons.TreeNode[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:toggleOpenState toggleOpenState} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selected selected} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","detachToggleOpenState":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>toggleOpenState<\/code> event of this <code>sap.ui.commons.TreeNode<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.TreeNode","!category":"function","!static":false},"indexOfNode":{"!description":"Checks for the provided <code>sap.ui.commons.TreeNode<\/code> in the aggregation <code>nodes<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oNode: sap.ui.commons.TreeNode) -> Number","!category":"function","!static":false},"addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.commons.TreeNode","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Tree node element","setExpanded":{"!description":"Sets a new value for property <code>expanded<\/code>.\n\nNode is expanded\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bExpanded: Boolean) -> sap.ui.commons.TreeNode","!category":"function","!static":false},"addNode":{"!description":"Adds some node to the aggregation <code>nodes<\/code>.","!type":"fn(oNode: sap.ui.commons.TreeNode) -> sap.ui.commons.TreeNode","!category":"function","!static":false},"attachToggleOpenState":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>toggleOpenState<\/code> event of this <code>sap.ui.commons.TreeNode<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.TreeNode<\/code> itself.\n\nNode state has changed.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.TreeNode","!category":"function","!static":false},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nIcon to display in front of the node\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIcon: sap.ui.core.URI) -> sap.ui.commons.TreeNode","!category":"function","!static":false},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"!proto":"sap.ui.core.Element","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.TreeNode.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.layout.ResponsiveFlowLayout":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>This is a layout where several controls can be added. These controls are blown up to fit a whole line. If the window resizes the controls are moved between the lines and resized again.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.ResponsiveFlowLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.ResponsiveFlowLayout.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!category":"class","!constructorDescription":"Constructor for a new layout/ResponsiveFlowLayout.","!module":"sap/ui/commons/layout/ResponsiveFlowLayout","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.layout.ResponsiveFlowLayout.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.layout.ResponsiveFlowLayout"},"sap.ui.commons.ListBox":{"getVisibleItems":{"!description":"Returns the number of visible items.","!type":"fn() -> Number","!category":"function","!static":false},"removeItem":{"!description":"Removes a item from the aggregation <code>items<\/code>.","!type":"fn(vItem: Number | String | sap.ui.core.Item) -> sap.ui.core.Item","!category":"function","!static":false},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"!module":"sap/ui/commons/ListBox","indexOfItem":{"!description":"Checks for the provided <code>sap.ui.core.Item<\/code> in the aggregation <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oItem: sap.ui.core.Item) -> Number","!category":"function","!static":false},"setEditable":{"!description":"Sets a new value for property <code>editable<\/code>.\n\nDetermines whether the ListBox is interactive or not.\nCan be used to disable interaction with mouse or keyboard.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEditable: Boolean) -> sap.ui.commons.ListBox","!category":"function","!static":false},"setItems":{"!description":"Allows setting the list items as array for this instance of ListBox.","!type":"fn(aItems: [sap.ui.core.ListItem], bDestroyItems: Boolean) -> sap.ui.commons.ListBox","!category":"function","!static":false},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nControl width as common CSS-size (px or % as unit, for example).","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"setVisibleItems":{"!description":"Makes the ListBox render with a height that allows it to display exactly the given number of items.","!type":"fn(iItemCount: Number) -> sap.ui.commons.ListBox","!category":"function","!static":false},"getEditable":{"!description":"Gets current value of property <code>editable<\/code>.\n\nDetermines whether the ListBox is interactive or not.\nCan be used to disable interaction with mouse or keyboard.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setDisplayIcons":{"!description":"Sets a new value for property <code>displayIcons<\/code>.\n\nDetermines whether the icons of the list items shall also be displayed.\nEnabling icons requires some space to be reserved for them.\nDisplaying icons can also influence the width and height of a single item,\nwhich affects the overall height of the ListBox when defined in number of items.\nNote that the number of icons that can be displayed in the ListBox depends on the\nsize of the icons themselves and of the total ListBox height.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bDisplayIcons: Boolean) -> sap.ui.commons.ListBox","!category":"function","!static":false},"setValueTextAlign":{"!description":"Sets a new value for property <code>valueTextAlign<\/code>.\n\nDetermines the text alignment in the primary ListBox column.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Begin<\/code>.","!type":"fn(sValueTextAlign: sap.ui.core.TextAlign) -> sap.ui.commons.ListBox","!category":"function","!static":false},"getMinWidth":{"!description":"Gets current value of property <code>minWidth<\/code>.\n\nDetermines the minimum width of the ListBox. If not set, there is no minimum width.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getSelectedIndices":{"!description":"Zero-based indices of selected items, wrapped in an array. An empty array means \"no selection\".","!type":"fn() -> [Number]","!category":"function","!static":false},"!constructorDescription":"Constructor for a new ListBox.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getAllowMultiSelect allowMultiSelect} : boolean (default: false)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getScrollTop scrollTop} : int (default: -1)<\/li>\n<li>{@link #getDisplayIcons displayIcons} : boolean (default: false)<\/li>\n<li>{@link #getDisplaySecondaryValues displaySecondaryValues} : boolean (default: false)<\/li>\n<li>{@link #getValueTextAlign valueTextAlign} : sap.ui.core.TextAlign (default: Begin)<\/li>\n<li>{@link #getSecondaryValueTextAlign secondaryValueTextAlign} : sap.ui.core.TextAlign (default: Begin)<\/li>\n<li>{@link #getMinWidth minWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getMaxWidth maxWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getVisibleItems visibleItems} : int<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.core.Item[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","removeSelectedIndex":{"!description":"Removes the given index from this selection. When the index is invalid or not selected, the call is ignored.","!type":"fn(iIndex: Number) -> sap.ui.commons.ListBox","!category":"function","!static":false},"scrollToIndex":{"!description":"If the ListBox has a scroll bar because the number of items is larger than the number of visible items,\nthis method scrolls to the item with the given index.\nIf there are enough items, this item will then appear at the topmost visible position in the ListBox.\nIf bLazy is true, it only scrolls as far as required to make the item visible.\nSetting the scrollTop property and calling scrollToIndex are two operations\ninfluencing the same \"physical\" property, so the last call \"wins\".","!type":"fn(iIndex: Number, bLazy: Boolean) -> sap.ui.commons.ListBox","!category":"function","!static":false},"setDisplaySecondaryValues":{"!description":"Sets a new value for property <code>displaySecondaryValues<\/code>.\n\nDetermines whether the text values from the additionalText property (see sap.ui.core.ListItems) shall be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bDisplaySecondaryValues: Boolean) -> sap.ui.commons.ListBox","!category":"function","!static":false},"getDisplayIcons":{"!description":"Gets current value of property <code>displayIcons<\/code>.\n\nDetermines whether the icons of the list items shall also be displayed.\nEnabling icons requires some space to be reserved for them.\nDisplaying icons can also influence the width and height of a single item,\nwhich affects the overall height of the ListBox when defined in number of items.\nNote that the number of icons that can be displayed in the ListBox depends on the\nsize of the icons themselves and of the total ListBox height.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.commons.ListBox","!category":"function","!static":false},"isIndexSelected":{"!description":"Returns whether the given index is selected.","!type":"fn(iIndex: Number) -> Boolean","!category":"function","!static":false},"setAllowMultiSelect":{"!description":"Sets a new value for property <code>allowMultiSelect<\/code>.\n\nDetermines whether multiple selection is allowed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bAllowMultiSelect: Boolean) -> sap.ui.commons.ListBox","!category":"function","!static":false},"setSelectedKeys":{"!description":"Keys of the items to be selected, wrapped in an array. An empty array means no selection.\nWhen multiple selection is disabled, and multiple keys are given,\nthe selection is set to the item with the first valid key in the given array.\nAny invalid keys are ignored.\nThe previous selection is replaced in any case.","!type":"fn(aSelectedKeys: [String]) -> sap.ui.commons.ListBox","!category":"function","!static":false},"setHeight":{"!description":"Sets the height of this ListBox in CSS units.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.ListBox","!category":"function","!static":false},"getSelectedIndex":{"!description":"Zero-based index of selected item. Index value for no selection is -1.\nWhen multiple selection is enabled and multiple items are selected,\nthe method returns the first selected item.","!type":"fn() -> Number","!category":"function","!static":false},"!proto":"sap.ui.core.Control","getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nDetermines whether the ListBox is enabled or not.\nCan be used to disable interaction with mouse or keyboard.\nDisabled controls have another color display depending on custom settings.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getAllowMultiSelect":{"!description":"Gets current value of property <code>allowMultiSelect<\/code>.\n\nDetermines whether multiple selection is allowed.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setMinWidth":{"!description":"Sets a new value for property <code>minWidth<\/code>.\n\nDetermines the minimum width of the ListBox. If not set, there is no minimum width.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sMinWidth: sap.ui.core.CSSSize) -> sap.ui.commons.ListBox","!category":"function","!static":false},"addItem":{"!description":"Adds some item to the aggregation <code>items<\/code>.","!type":"fn(oItem: sap.ui.core.Item) -> sap.ui.commons.ListBox","!category":"function","!static":false},"removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>select<\/code> event of this <code>sap.ui.commons.ListBox<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.ListBox<\/code> itself.\n\nEvent is fired when selection is changed by user interaction.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.ListBox","!category":"function","!static":false},"getDisplaySecondaryValues":{"!description":"Gets current value of property <code>displaySecondaryValues<\/code>.\n\nDetermines whether the text values from the additionalText property (see sap.ui.core.ListItems) shall be displayed.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setScrollTop":{"!description":"Positions the ListBox contents so that they are scrolled-down by the given number of pixels.","!type":"fn(iScrollTop: Number) -> sap.ui.commons.ListBox","!category":"function","!static":false},"getMaxWidth":{"!description":"Gets current value of property <code>maxWidth<\/code>.\n\nDetermines the maximum width of the ListBox. If not set, there is no maximum width.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nControl height as common CSS-size (px or % as unit, for example).\nThe setting overrides any definitions made for the setVisibleItems() method.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"setSecondaryValueTextAlign":{"!description":"Sets a new value for property <code>secondaryValueTextAlign<\/code>.\n\nDetermines the text alignment in the secondary ListBox text column (if available).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Begin<\/code>.","!type":"fn(sSecondaryValueTextAlign: sap.ui.core.TextAlign) -> sap.ui.commons.ListBox","!category":"function","!static":false},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.ui.commons.ListBox","!category":"function","!static":false},"getScrollTop":{"!description":"Returns how many pixels the ListBox contents are currently scrolled down.","!type":"fn() -> Number","!category":"function","!static":false},"!category":"class","setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nDetermines whether the ListBox is enabled or not.\nCan be used to disable interaction with mouse or keyboard.\nDisabled controls have another color display depending on custom settings.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.ListBox","!category":"function","!static":false},"setWidth":{"!description":"Sets the width of this ListBox in CSS units.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.ListBox","!category":"function","!static":false},"setMaxWidth":{"!description":"Sets a new value for property <code>maxWidth<\/code>.\n\nDetermines the maximum width of the ListBox. If not set, there is no maximum width.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sMaxWidth: sap.ui.core.CSSSize) -> sap.ui.commons.ListBox","!category":"function","!static":false},"getValueTextAlign":{"!description":"Gets current value of property <code>valueTextAlign<\/code>.\n\nDetermines the text alignment in the primary ListBox column.\n\nDefault value is <code>Begin<\/code>.","!type":"fn() -> sap.ui.core.TextAlign","!category":"function","!static":false},"fireSelect":{"!description":"Fires event <code>select<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>id<\/code> of type <code>string<\/code>ID of the ListBox which triggered the event.<\/li>\n<li><code>selectedIndex<\/code> of type <code>int<\/code>The currently selected index of the ListBox.\nIn the case of multiple selection, this is exactly one of the selected indices -\nthe one whose selection has triggered the selection change.\nTo get all currently selected indices, use selectedIndices.<\/li>\n<li><code>selectedItem<\/code> of type <code>sap.ui.core.Item<\/code>The currently selected item of the ListBox.\nIn the case of multiple selection, this is exactly one of the selected items -\nthe one whose selection has triggered the selection change.<\/li>\n<li><code>selectedIndices<\/code> of type <code>int[]<\/code>Array containing the indices which are selected.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.ListBox","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ListBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"clearSelection":{"!description":"Removes complete selection.","!type":"fn() -> sap.ui.commons.ListBox","!category":"function","!static":false},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>select<\/code> event of this <code>sap.ui.commons.ListBox<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.ListBox","!category":"function","!static":false},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"getSecondaryValueTextAlign":{"!description":"Gets current value of property <code>secondaryValueTextAlign<\/code>.\n\nDetermines the text alignment in the secondary ListBox text column (if available).\n\nDefault value is <code>Begin<\/code>.","!type":"fn() -> sap.ui.core.TextAlign","!category":"function","!static":false},"getSelectedItem":{"!description":"Returns selected item. When no item is selected, \"null\" is returned.\nWhen multi-selection is enabled and multiple items are selected, only the first selected item is returned.","!type":"fn() -> sap.ui.core.Item","!category":"function","!static":false},"setSelectedIndices":{"!description":"Zero-based indices of selected items, wrapped in an array. An empty array means \"no selection\".\nWhen multiple selection is disabled and multiple items are given,\nthe selection is set to the index of the first valid index in the given array.\nAny invalid indices are ignored.\nThe previous selection is in any case replaced.","!type":"fn(aSelectedIndices: [Number]) -> sap.ui.commons.ListBox","!category":"function","!static":false},"getSelectedItems":{"!description":"Returns an array containing the selected items. In the case of no selection, an empty array is returned.","!type":"fn() -> [sap.ui.core.Item]","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.List<\/code> control.<br>Provides a list of items from which users can choose an item.\nFor the design of the list box, features such as defining the list box height, fixing the number of visible items,\nchoosing one item to be the item that is marked by default when the list box is shown,\nor a scroll bar for large list boxes are available.","getItems":{"!description":"Gets content of aggregation <code>items<\/code>.\n\nAggregation of items to be displayed. Must be either of type sap.ui.core.ListItem or sap.ui.core.SeparatorItem.","!type":"fn() -> [sap.ui.core.Item]","!category":"function","!static":false},"addSelectedIndex":{"!description":"Adds the given index to current selection.\nWhen multiple selection is disabled, this replaces the current selection.\nWhen the given index is invalid, the call is ignored.","!type":"fn(iSelectedIndex: Number) -> sap.ui.commons.ListBox","!category":"function","!static":false},"addSelectedIndices":{"!description":"Adds the given indices to selection. Any invalid indices are ignored.","!type":"fn(aSelectedIndices: [Number]) -> sap.ui.commons.ListBox","!category":"function","!static":false},"destroyItems":{"!description":"Destroys all the items in the aggregation <code>items<\/code>.","!type":"fn() -> sap.ui.commons.ListBox","!category":"function","!static":false},"getSelectedKeys":{"!description":"Returns the keys of the selected items in an array.\nIf a selected item does not have a key, the respective array entry will be undefined.","!type":"fn() -> [String]","!category":"function","!static":false},"removeAllItems":{"!description":"Removes all the controls from the aggregation <code>items<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Item]","!category":"function","!static":false},"setSelectedIndex":{"!description":"Sets the zero-based index of the currently selected item.\nThis method removes any previous selections. When the given index is invalid, the call is ignored.","!type":"fn(iSelectedIndex: Number) -> sap.ui.commons.ListBox","!category":"function","!static":false},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"insertItem":{"!description":"Inserts a item into the aggregation <code>items<\/code>.","!type":"fn(oItem: sap.ui.core.Item, iIndex: Number) -> sap.ui.commons.ListBox","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.ListBox.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.RowRepeaterFilter":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RowRepeaterFilter with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!constructorDescription":"Constructor for a new RowRepeaterFilter.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getIcon icon} : string<\/li>\n<li>{@link #getFilters filters} : object<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/commons/RowRepeaterFilter","setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nThe filter title if needed for display.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sText: String) -> sap.ui.commons.RowRepeaterFilter","!category":"function","!static":false},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nThe filter icon if needed for display.","!type":"fn() -> String","!category":"function","!static":false},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nThe filter title if needed for display.","!type":"fn() -> String","!category":"function","!static":false},"setFilters":{"!description":"Sets a new value for property <code>filters<\/code>.\n\nThe set of filter objects.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(oFilters: Object) -> sap.ui.commons.RowRepeaterFilter","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.ui.table.Table<\/code> control.<br>This element is used by the RowRepeater and allows to define a filter in this context along with the related data such as a text and an icon.","!category":"class","getFilters":{"!description":"Gets current value of property <code>filters<\/code>.\n\nThe set of filter objects.","!type":"fn() -> Object","!category":"function","!static":false},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nThe filter icon if needed for display.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIcon: String) -> sap.ui.commons.RowRepeaterFilter","!category":"function","!static":false},"!proto":"sap.ui.core.Element","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.RowRepeaterFilter.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.layout.HAlign":{"Right":{"!description":"\nRight aligned, regardless of the current locale's writing direction.","!type":"String","!category":"enum"},"End":{"!description":"\nAligned towards the end of a line, in the current locale's writing direction.","!type":"String","!category":"enum"},"!description":"Horizontal alignment, e.g. of a layout cell's content within the cell's borders.\nNote that some values depend on the current locale's writing direction while\nothers do not.","!category":"static class","Center":{"!description":"\nHorizontally centered.","!type":"String","!category":"enum"},"!module":"sap/ui/commons/library","Begin":{"!description":"\nAligned towards the beginning of a line, in the current locale's writing direction.","!type":"String","!category":"enum"},"Left":{"!description":"\nLeft aligned, regardless of the current locale's writing direction.","!type":"String","!category":"enum"}},"sap.ui.commons.TextArea_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.TextArea with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.TextField.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.TextArea"},"sap.ui.commons.HorizontalDividerHeight":{"Medium":{"!description":"Divider gets a medium top and bottom margin.","!type":"String","!category":"enum"},"!description":"Enumeration of possible HorizontalDivider height settings.","Large":{"!description":"Divider gets a large top and bottom margin.","!type":"String","!category":"enum"},"!category":"static class","!module":"sap/ui/commons/library","Ruleheight":{"!description":"Divider gets no top and bottom margin.","!type":"String","!category":"enum"},"Small":{"!description":"Divider gets a small top and bottom margin.","!type":"String","!category":"enum"}},"sap.ui.commons.layout.VerticalLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.VerticalLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.VerticalLayout.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.layout.VerticalLayout"},"sap.ui.commons.ApplicationHeader_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ApplicationHeader with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.ApplicationHeader"},"sap.ui.commons.ApplicationHeader":{"detachLogoff":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>logoff<\/code> event of this <code>sap.ui.commons.ApplicationHeader<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.ApplicationHeader","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ApplicationHeader with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"getDisplayLogoff":{"!description":"Gets current value of property <code>displayLogoff<\/code>.\n\nDetermines if the logoff area will be displayed at the right hand side of the application header.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getLogoText":{"!description":"Gets current value of property <code>logoText<\/code>.\n\nThe text that will be displayed beside the logo in the application header. This property is optional.","!type":"fn() -> String","!category":"function","!static":false},"!constructorDescription":"Constructor for a new ApplicationHeader.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLogoSrc logoSrc} : sap.ui.core.URI<\/li>\n<li>{@link #getLogoText logoText} : string<\/li>\n<li>{@link #getDisplayLogoff displayLogoff} : boolean (default: true)<\/li>\n<li>{@link #getUserName userName} : string<\/li>\n<li>{@link #getDisplayWelcome displayWelcome} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:logoff logoff} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/commons/ApplicationHeader","getLogoSrc":{"!description":"Gets current value of property <code>logoSrc<\/code>.\n\nPath (src) to the logo icon to be displayed in the application header.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"fireLogoff":{"!description":"Fires event <code>logoff<\/code> to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.commons.ApplicationHeader","!category":"function","!static":false},"attachLogoff":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>logoff<\/code> event of this <code>sap.ui.commons.ApplicationHeader<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.ApplicationHeader<\/code> itself.\n\nFires an event to log off the user from the application.\nNo parameters.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.ApplicationHeader","!category":"function","!static":false},"setDisplayWelcome":{"!description":"Sets a new value for property <code>displayWelcome<\/code>.\n\nDetermines if the welcome text is displayed\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bDisplayWelcome: Boolean) -> sap.ui.commons.ApplicationHeader","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.tnt.ToolHeader<\/code> control.<br>The application header control stands on the top of any application page. It consists of 4 areas: Logo area, Function area provided by application, Search area, Logout area.","getDisplayWelcome":{"!description":"Gets current value of property <code>displayWelcome<\/code>.\n\nDetermines if the welcome text is displayed\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setUserName":{"!description":"Sets a new value for property <code>userName<\/code>.\n\nUser name that will be displayed beside the welcome text\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sUserName: String) -> sap.ui.commons.ApplicationHeader","!category":"function","!static":false},"setDisplayLogoff":{"!description":"Sets a new value for property <code>displayLogoff<\/code>.\n\nDetermines if the logoff area will be displayed at the right hand side of the application header.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bDisplayLogoff: Boolean) -> sap.ui.commons.ApplicationHeader","!category":"function","!static":false},"!category":"class","setLogoSrc":{"!description":"Sets a new value for property <code>logoSrc<\/code>.\n\nPath (src) to the logo icon to be displayed in the application header.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sLogoSrc: sap.ui.core.URI) -> sap.ui.commons.ApplicationHeader","!category":"function","!static":false},"setLogoText":{"!description":"Sets a new value for property <code>logoText<\/code>.\n\nThe text that will be displayed beside the logo in the application header. This property is optional.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sLogoText: String) -> sap.ui.commons.ApplicationHeader","!category":"function","!static":false},"getUserName":{"!description":"Gets current value of property <code>userName<\/code>.\n\nUser name that will be displayed beside the welcome text","!type":"fn() -> String","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.ApplicationHeader.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Control"},"sap.ui.commons.SegmentedButton":{"fireSelect":{"!description":"Fires event <code>select<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>selectedButtonId<\/code> of type <code>string<\/code>Id of selected ToggleButton<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.SegmentedButton","!category":"function","!static":false},"getSelectedButton":{"!description":"ID of the element which is the current target of the association <code>selectedButton<\/code>, or <code>null<\/code>.","!type":"fn() -> sap.ui.commons.Button","!category":"function","!static":false},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nenabled\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.SegmentedButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>select<\/code> event of this <code>sap.ui.commons.SegmentedButton<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.SegmentedButton","!category":"function","!static":false},"!constructorDescription":"Constructor for a new SegmentedButton.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getButtons buttons} : sap.ui.commons.Button[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","removeButton":{"!description":"Removes a button from the aggregation <code>buttons<\/code>.","!type":"fn(vButton: Number | String | sap.ui.commons.Button) -> sap.ui.commons.Button","!category":"function","!static":false},"!module":"sap/ui/commons/SegmentedButton","attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>select<\/code> event of this <code>sap.ui.commons.SegmentedButton<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.SegmentedButton<\/code> itself.\n\nEvent fired when button selected","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.SegmentedButton","!category":"function","!static":false},"removeAllButtons":{"!description":"Removes all the controls from the aggregation <code>buttons<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.Button]","!category":"function","!static":false},"insertButton":{"!description":"Inserts a button into the aggregation <code>buttons<\/code>.","!type":"fn(oButton: sap.ui.commons.Button, iIndex: Number) -> sap.ui.commons.SegmentedButton","!category":"function","!static":false},"_rerenderButtons":{"!description":"Rerendering of the Buttons","!type":"fn()","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.SegmentedButton<\/code> control.<br>The SegmentedButton provides a group of multiple buttons. Only one button can be active. The behaviour is more ore less like a radio button group.","destroyButtons":{"!description":"Destroys all the buttons in the aggregation <code>buttons<\/code>.","!type":"fn() -> sap.ui.commons.SegmentedButton","!category":"function","!static":false},"addButton":{"!description":"Adds some button to the aggregation <code>buttons<\/code>.","!type":"fn(oButton: sap.ui.commons.Button) -> sap.ui.commons.SegmentedButton","!category":"function","!static":false},"!category":"class","setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nenabled\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.SegmentedButton","!category":"function","!static":false},"indexOfButton":{"!description":"Checks for the provided <code>sap.ui.commons.Button<\/code> in the aggregation <code>buttons<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oButton: sap.ui.commons.Button) -> Number","!category":"function","!static":false},"setSelectedButton":{"!description":"Sets the associated <code>selectedButton<\/code>.","!type":"fn(oSelectedButton: sap.ui.commons.Button) -> sap.ui.commons.SegmentedButton","!category":"function","!static":false},"getButtons":{"!description":"Gets content of aggregation <code>buttons<\/code>.\n\nButtons","!type":"fn() -> [sap.ui.commons.Button]","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.SegmentedButton.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Control"},"sap.ui.commons.RichTooltip":{"onAfterRendering":{"!description":"Calculates the height of the RichTooltip to set a proper min-height.\nAdditionally the ARIA attributes are set to the corresponding elements.","!type":"fn()","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RichTooltip with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.TooltipBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"setValueStateText":{"!description":"This sets an individual text for the ValueState of the parent element of the RichTooltip.","!type":"fn(sText: String) -> sap.ui.commons.RichTooltip","!category":"function","!static":false},"!constructorDescription":"Constructor for a new RichTooltip.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getImageSrc imageSrc} : sap.ui.core.URI<\/li>\n<li>{@link #getValueStateText valueStateText} : string<\/li>\n<li>{@link #getImageAltText imageAltText} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.TooltipBase#constructor sap.ui.core.TooltipBase}\ncan be used as well.","setImageAltText":{"!description":"Sets a new value for property <code>imageAltText<\/code>.\n\nThis is the alt text for the image\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sImageAltText: String) -> sap.ui.commons.RichTooltip","!category":"function","!static":false},"!module":"sap/ui/commons/RichTooltip","getImageSrc":{"!description":"Gets current value of property <code>imageSrc<\/code>.\n\nIf RichTooltip contains an image, this property is used to define the source path.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Popover<\/code> control.<br>\nIs used to provide tool tips that can have long text, image and title. This tool tip extends the TooltipBase.","setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nTool tip title to be displayed in the header.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitle: String) -> sap.ui.commons.RichTooltip","!category":"function","!static":false},"getValueStateText":{"!description":"This returns the previously set text. Since a FormattedTextView is used for\nrendering and stuff the corresponding property of the FormattedTextView is\nbeing read and returned. If no text was set an empty string is being\nreturned.","!type":"fn() -> String","!category":"function","!static":false},"setImageSrc":{"!description":"Sets a new value for property <code>imageSrc<\/code>.\n\nIf RichTooltip contains an image, this property is used to define the source path.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sImageSrc: sap.ui.core.URI) -> sap.ui.commons.RichTooltip","!category":"function","!static":false},"!category":"class","getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nTool tip title to be displayed in the header.","!type":"fn() -> String","!category":"function","!static":false},"getImageAltText":{"!description":"Gets current value of property <code>imageAltText<\/code>.\n\nThis is the alt text for the image","!type":"fn() -> String","!category":"function","!static":false},"!proto":"sap.ui.core.TooltipBase","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.RichTooltip.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.form.Form":{"getVisible":{"!description":"Getter for property <code>visible<\/code>.\nInvisible Forms are not rendered.\n\nDefault value is <code>true<\/code>","!type":"fn() -> Boolean","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>Form control.\nHolder for form control to be rendered in a specific form layout.\nA Form supports VariantLayoutData for it's conent to allow a simple switching of Layouts.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.Form with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.Form.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"setVisible":{"!description":"Setter for property <code>visible<\/code>.\n\nDefault value is <code>true<\/code>","!type":"fn(bVisible: Boolean) -> sap.ui.commons.form.Form","!category":"function","!static":false},"!category":"class","!constructorDescription":"Constructor for a new form/Form.","!module":"sap/ui/commons/form/Form","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.form.Form.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.layout.form.Form"},"sap.ui.commons.FileUploaderParameter":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.21.0 Please use the element sap.ui.unified.FileUploaderParameter of the library sap.ui.unified instead.<br>Represents a parameter for the FileUploader which is rendered as a hidden inputfield.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.FileUploaderParameter with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.FileUploaderParameter.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!category":"class","!constructorDescription":"Constructor for a new FileUploaderParameter.","!module":"sap/ui/commons/FileUploaderParameter","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.FileUploaderParameter.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.unified.FileUploaderParameter"},"sap.ui.commons.ValueHelpField":{"setIconURL":{"!description":"Sets a new value for property <code>iconURL<\/code>.\n\nURL of the standard icon for the value help. If no parameter is supplied the default icon image will be shown.\nThis can be an URI to an image or an icon font URI.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIconURL: sap.ui.core.URI) -> sap.ui.commons.ValueHelpField","!category":"function","!static":false},"attachValueHelpRequest":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>valueHelpRequest<\/code> event of this <code>sap.ui.commons.ValueHelpField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.ValueHelpField<\/code> itself.\n\nEvent which is fired when the ValueHelp is requested.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.ValueHelpField","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ValueHelpField with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.TextField.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"setIconHoverURL":{"!description":"Sets a new value for property <code>iconHoverURL<\/code>.\n\nURL of the icon for the value help when hovered. If no parameter is supplied the standard icon image will be shown.\nIf an icon font icon is used, this property is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIconHoverURL: sap.ui.core.URI) -> sap.ui.commons.ValueHelpField","!category":"function","!static":false},"!constructorDescription":"Constructor for a new ValueHelpField.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIconURL iconURL} : sap.ui.core.URI<\/li>\n<li>{@link #getIconHoverURL iconHoverURL} : sap.ui.core.URI<\/li>\n<li>{@link #getIconDisabledURL iconDisabledURL} : sap.ui.core.URI<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:valueHelpRequest valueHelpRequest} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.commons.TextField#constructor sap.ui.commons.TextField}\ncan be used as well.","!module":"sap/ui/commons/ValueHelpField","setIconDisabledURL":{"!description":"Sets a new value for property <code>iconDisabledURL<\/code>.\n\nURL of the icon for the value help when disabled. If no parameter is supplied the default icon image will be shown.\nIf an icon font icon is used, this property is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIconDisabledURL: sap.ui.core.URI) -> sap.ui.commons.ValueHelpField","!category":"function","!static":false},"detachValueHelpRequest":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>valueHelpRequest<\/code> event of this <code>sap.ui.commons.ValueHelpField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.ValueHelpField","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Input<\/code> control.<br>A TextField with an attached icon which triggeres an event.","fireValueHelpRequest":{"!description":"Fires event <code>valueHelpRequest<\/code> to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.commons.ValueHelpField","!category":"function","!static":false},"getIconURL":{"!description":"Gets current value of property <code>iconURL<\/code>.\n\nURL of the standard icon for the value help. If no parameter is supplied the default icon image will be shown.\nThis can be an URI to an image or an icon font URI.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"!category":"class","getIconDisabledURL":{"!description":"Gets current value of property <code>iconDisabledURL<\/code>.\n\nURL of the icon for the value help when disabled. If no parameter is supplied the default icon image will be shown.\nIf an icon font icon is used, this property is ignored.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"onsapshow":{"!description":"Handle F4 event","!type":"fn(oEvent: jQuery.Event)","!category":"function","!static":false},"getIconHoverURL":{"!description":"Gets current value of property <code>iconHoverURL<\/code>.\n\nURL of the icon for the value help when hovered. If no parameter is supplied the standard icon image will be shown.\nIf an icon font icon is used, this property is ignored.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"!proto":"sap.ui.commons.TextField","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.ValueHelpField.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.MessageToast":{"isIdle":{"!description":"Returns the idle state of the control. Returns true if no message is being toasted.","!type":"fn() -> Boolean","!category":"function","!static":false},"attachNext":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>next<\/code> event of this <code>sap.ui.commons.MessageToast<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.MessageToast<\/code> itself.\n\nFired once the <code>toast()<\/code> method is over, so that the MessageBar can \"toast\" another message if needed.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.MessageToast","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.MessageToast with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"getAnchorId":{"!description":"Gets current value of property <code>anchorId<\/code>.\n\nID of the anchor on top of which the MessageToast is to render.","!type":"fn() -> String","!category":"function","!static":false},"detachNext":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>next<\/code> event of this <code>sap.ui.commons.MessageToast<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.MessageToast","!category":"function","!static":false},"toast":{"!description":"Triggers the toasting of a message, on top of the MessageBar.\nIf no message is supplied, displays the \"Multiple new messages...\" message.\n\nReceives the list of Messages to be displayed,\nand re-renders this Control if it is visible.","!type":"fn(oMessage: sap.ui.commons.Message, sAnchorId: String)","!category":"function","!static":false},"!constructorDescription":"Constructor for a new MessageToast.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAnchorId anchorId} : string<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:next next} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/commons/MessageToast","setAnchorId":{"!description":"Sets a new value for property <code>anchorId<\/code>.\n\nID of the anchor on top of which the MessageToast is to render.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sAnchorId: String) -> sap.ui.commons.MessageToast","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.4.0 Instead, use the <code>sap.m.MessageToast<\/code> control.<br>Responsible for displaying the new incoming messages, one at the time, on top of the MessageBar.","!category":"class","fireNext":{"!description":"Fires event <code>next<\/code> to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.commons.MessageToast","!category":"function","!static":false},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.MessageToast.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.InPlaceEdit":{"getDesign":{"!description":"Gets current value of property <code>design<\/code>.\n\nDefines the visual appearance of the control.\nCurrently this is not supported for Labels.\n\nDefault value is <code>Standard<\/code>.","!type":"fn() -> sap.ui.commons.TextViewDesign","!category":"function","!static":false},"detachLiveChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>liveChange<\/code> event of this <code>sap.ui.commons.InPlaceEdit<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.InPlaceEdit","!category":"function","!static":false},"!module":"sap/ui/commons/InPlaceEdit","getValueState":{"!description":"Gets current value of property <code>valueState<\/code>.\n\nVisualizes warnings or errors related to the InPlaceEdit. Possible values: Warning, Error, Success.\nIf the content control has a own valueState property this will be used.\n\nDefault value is <code>None<\/code>.","!type":"fn() -> sap.ui.core.ValueState","!category":"function","!static":false},"destroyContent":{"!description":"Destroys the content in the aggregation <code>content<\/code>.","!type":"fn() -> sap.ui.commons.InPlaceEdit","!category":"function","!static":false},"setTooltip":{"!description":"Sets a new tooltip for this InPlaceEdit. The tooltip can either be a simple string\n(which in most cases will be rendered as the <code>title<\/code> attribute of this\nElement) or an instance of {@link sap.ui.core.TooltipBase}.\n\nIf a new tooltip is set, any previously set tooltip is deactivated.\n\nIf a content control is assigned to the InPlaceEdit the tooltip of this control\nis used. A directly set tooltip to the InPlaceEdit is ignored in this case.","!type":"fn(oTooltip: String | sap.ui.core.TooltipBase) -> sap.ui.commons.InPlaceEdit","!category":"function","!static":false},"setValueState":{"!description":"Sets a new value for property <code>valueState<\/code>.\n\nVisualizes warnings or errors related to the InPlaceEdit. Possible values: Warning, Error, Success.\nIf the content control has a own valueState property this will be used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!type":"fn(sValueState: sap.ui.core.ValueState) -> sap.ui.commons.InPlaceEdit","!category":"function","!static":false},"!category":"class","getAccessibilityInfo":{"!type":"fn()","!category":"function","!static":false},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nContent control of the InPlaceEdit.\nThe following controls are allowed:\nTextField, ComboBox, DropdownBox and Link","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.InPlaceEdit with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"setUndoEnabled":{"!description":"Sets a new value for property <code>undoEnabled<\/code>.\n\nIf undo is enabled after changing the text an undo button appears.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bUndoEnabled: Boolean) -> sap.ui.commons.InPlaceEdit","!category":"function","!static":false},"!constructorDescription":"Constructor for a new InPlaceEdit.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getUndoEnabled undoEnabled} : boolean (default: true)<\/li>\n<li>{@link #getDesign design} : sap.ui.commons.TextViewDesign (default: Standard)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setContent":{"!description":"Sets the aggregated <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.commons.InPlaceEdit","!category":"function","!static":false},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>change<\/code> event of this <code>sap.ui.commons.InPlaceEdit<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.InPlaceEdit","!category":"function","!static":false},"getTooltip":{"!description":"Returns the tooltip for this InPlaceEdit if any or an undefined value.\nThe tooltip can either be a simple string or a subclass of\n{@link sap.ui.core.TooltipBase}.\n\nCallers that are only interested in tooltips of type string (e.g. to render\nthem as a <code>title<\/code> attribute), should call the convenience method\n{@link #getTooltip_AsString} instead. If they want to get a tooltip text no\nmatter where it comes from (be it a string tooltip or the text from a TooltipBase\ninstance) then they could call {@link #getTooltip_Text} instead.\n\nIf a content control is assigned to the InPlaceEdit the tooltip of this control\nis used. A directly set tooltip to the InPlaceEdit is ignored in this case.","!type":"fn() -> String | sap.ui.core.TooltipBase","!category":"function","!static":false},"getUndoEnabled":{"!description":"Gets current value of property <code>undoEnabled<\/code>.\n\nIf undo is enabled after changing the text an undo button appears.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"clearOldText":{"!description":"Clear the old text after a change to disable the undo functionality. If undoEnabled is false this has no effect.","!type":"fn()","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>The InPlaceEdit is a functionality to have text in display mode that can be changed in place.","fireLiveChange":{"!description":"Fires event <code>liveChange<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>liveValue<\/code> of type <code>string<\/code>Current value of the Textfield.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.InPlaceEdit","!category":"function","!static":false},"fireChange":{"!description":"Fires event <code>change<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>newValue<\/code> of type <code>string<\/code>The new / changed value of the InPlaceEdit.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.InPlaceEdit","!category":"function","!static":false},"attachLiveChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>liveChange<\/code> event of this <code>sap.ui.commons.InPlaceEdit<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.InPlaceEdit<\/code> itself.\n\nThis event if fired during typing into the InPlaceEdit and returns the currently entered value. This is not the content of the value property. The value property is only updated by ENTER and by leaving the control.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.InPlaceEdit","!category":"function","!static":false},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>change<\/code> event of this <code>sap.ui.commons.InPlaceEdit<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.InPlaceEdit<\/code> itself.\n\nEvent is fired when the text in the field has changed AND the focus leaves the InPlaceEdit or the Enter key is pressed.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.InPlaceEdit","!category":"function","!static":false},"setDesign":{"!description":"Sets a new value for property <code>design<\/code>.\n\nDefines the visual appearance of the control.\nCurrently this is not supported for Labels.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Standard<\/code>.","!type":"fn(sDesign: sap.ui.commons.TextViewDesign) -> sap.ui.commons.InPlaceEdit","!category":"function","!static":false},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.InPlaceEdit.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.MessageList_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.MessageList with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.MessageList"},"sap.ui.commons.form.SimpleForm":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>Use the SimpleForm to create a form based on title, label and fields that are stacked in the content aggregation. Add Title to start a new FormContainer(Group). Add Label to start a new row in the container. Add Input/Display controls as needed. Use LayoutData to influence the layout for special cases in the Input/Display controls.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.SimpleForm with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.SimpleForm.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!category":"class","setLayout":{"!description":"Setter for property <code>layout<\/code>.\n\nDefault value is <code>ResponsiveLayout<\/code>","!type":"fn(oLayout: sap.ui.commons.form.SimpleFormLayout) -> sap.ui.commons.form.SimpleForm","!category":"function","!static":false},"getLayout":{"!description":"Getter for property <code>layout<\/code>.\nThe FormLayout that is used to render the SimpleForm\n\nDefault value is <code>ResponsiveLayout<\/code>","!type":"fn() -> sap.ui.commons.form.SimpleFormLayout","!category":"function","!static":false},"!constructorDescription":"Constructor for a new form/SimpleForm.","!module":"sap/ui/commons/form/SimpleForm","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.form.SimpleForm.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.layout.form.SimpleForm"},"sap.ui.commons.FileUploader":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.21.0 Please use the control sap.ui.unified.FileUploader of the library sap.ui.unified instead.<br>The framework generates an input field and a button with text \"Browse ...\". The API supports features such as on change uploads (the upload starts immediately after a file has been selected), file uploads with explicit calls, adjustable control sizes, text display after uploads, or tooltips containing complete file paths.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.FileUploader with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.FileUploader.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!category":"class","!constructorDescription":"Constructor for a new FileUploader.","!module":"sap/ui/commons/FileUploader","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.FileUploader.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.unified.FileUploader"},"sap.ui.commons.RowRepeaterDesign":{"Standard":{"!description":"The RowRepeater header and footer elements, as well as the row container background, appear solid.","!type":"String","!category":"enum"},"!description":"Determines the visual design of a RowRepeater.","Transparent":{"!description":"The RowRepeater header and footer elements, as well as the row container background, appear transparent.","!type":"String","!category":"enum"},"BareShell":{"!description":"The RowRepeater will be displayed without header, toolbar or footer. Background will be transparent.","!type":"String","!category":"enum"},"!category":"static class","!module":"sap/ui/commons/library"},"sap.ui.commons.ButtonStyle":{"Default":{"!description":"default style (no special styling).","!type":"String","!category":"enum"},"Emph":{"!description":"Button is emphasized.","!type":"String","!category":"enum"},"!description":"different styles for a button.","!category":"static class","Reject":{"!description":"Reject button (normally red).","!type":"String","!category":"enum"},"!module":"sap/ui/commons/library","Accept":{"!description":"Accept button (normally green).","!type":"String","!category":"enum"}},"sap.ui.commons.TabStrip":{"removeTab":{"!description":"Removes a tab from the aggregation <code>tabs<\/code>.","!type":"fn(vTab: Number | String | sap.ui.commons.Tab) -> sap.ui.commons.Tab","!category":"function","!static":false},"onBeforeRendering":{"!description":"Called before the rendering of the control is started.","!type":"fn()","!category":"function","!static":false},"detachClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>close<\/code> event of this <code>sap.ui.commons.TabStrip<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.TabStrip","!category":"function","!static":false},"destroyTabs":{"!description":"Destroys all the tabs in the aggregation <code>tabs<\/code>.","!type":"fn() -> sap.ui.commons.TabStrip","!category":"function","!static":false},"insertTab":{"!description":"Inserts a tab into the aggregation <code>tabs<\/code>.","!type":"fn(oTab: sap.ui.commons.Tab, iIndex: Number) -> sap.ui.commons.TabStrip","!category":"function","!static":false},"!module":"sap/ui/commons/TabStrip","getTabs":{"!description":"Gets content of aggregation <code>tabs<\/code>.\n\nThe tabs contained in the TabStrip.","!type":"fn() -> [sap.ui.commons.Tab]","!category":"function","!static":false},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>select<\/code> event of this <code>sap.ui.commons.TabStrip<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.TabStrip<\/code> itself.\n\nFires when the user selects a tab.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.TabStrip","!category":"function","!static":false},"getEnableTabReordering":{"!description":"Gets current value of property <code>enableTabReordering<\/code>.\n\nSpecifies whether tab reordering is enabled.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nSpecifies the height of the tab bar and content area.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nSpecifies the width of the bar and content area.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nSpecifies the width of the bar and content area.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.TabStrip","!category":"function","!static":false},"fireSelect":{"!description":"Fires event <code>select<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>index<\/code> of type <code>int<\/code>The index of the selected tab.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.TabStrip","!category":"function","!static":false},"indexOfTab":{"!description":"Checks for the provided <code>sap.ui.commons.Tab<\/code> in the aggregation <code>tabs<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oTab: sap.ui.commons.Tab) -> Number","!category":"function","!static":false},"removeAllTabs":{"!description":"Removes all the controls from the aggregation <code>tabs<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.Tab]","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.TabStrip with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"fireClose":{"!description":"Fires event <code>close<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>index<\/code> of type <code>int<\/code>The index of the closed tab.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.TabStrip","!category":"function","!static":false},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>select<\/code> event of this <code>sap.ui.commons.TabStrip<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.TabStrip","!category":"function","!static":false},"!constructorDescription":"Constructor for a new TabStrip.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getSelectedIndex selectedIndex} : int (default: 0)<\/li>\n<li>{@link #getEnableTabReordering enableTabReordering} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTabs tabs} : sap.ui.commons.Tab[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:close close} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","attachClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>close<\/code> event of this <code>sap.ui.commons.TabStrip<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.TabStrip<\/code> itself.\n\nFires when the user closes a tab.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.TabStrip","!category":"function","!static":false},"setEnableTabReordering":{"!description":"Sets whether tab reordering is enabled.","!type":"fn(bValue: Boolean) -> sap.ui.commons.TabStrip","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.TabContainer<\/code> control.<br>\nTabStrip represents a container for tab controls, which contain the content and generally other controls.\nThe user switches between the tabs to display the content.","setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nSpecifies the height of the tab bar and content area.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.TabStrip","!category":"function","!static":false},"addTab":{"!description":"Adds some tab to the aggregation <code>tabs<\/code>.","!type":"fn(oTab: sap.ui.commons.Tab) -> sap.ui.commons.TabStrip","!category":"function","!static":false},"setSelectedIndex":{"!description":"Sets a new value for property <code>selectedIndex<\/code>.\n\nSpecifies the index of the currently selected tab.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(iSelectedIndex: Number) -> sap.ui.commons.TabStrip","!category":"function","!static":false},"closeTab":{"!description":"Closes a tab (if the tab is selected, the next one will be selected;\nif it's the last tab, the previous one will be selected).\n\nThis method should be called if the close event is fired.\nIt can not be called automatically because the consumer might need to run some logic before the tab is closed.","!type":"fn(iIndex: Number)","!category":"function","!static":false},"getSelectedIndex":{"!description":"Gets current value of property <code>selectedIndex<\/code>.\n\nSpecifies the index of the currently selected tab.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"createTab":{"!description":"Creates a Tab and adds it to the TabStrip.","!type":"fn(sText: String, oContent: sap.ui.core.Control) -> sap.ui.commons.Tab","!category":"function","!static":false},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.TabStrip.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.SplitterSize":{"!description":"A string type that represents subset of CSS size values. For the Splitter only px and % are allowed.","!category":"namespace","!module":"sap/ui/commons/library"},"sap.ui.commons.MessageBar":{"getMaxListed":{"!description":"Gets current value of property <code>maxListed<\/code>.\n\nMaximum number of messages being displayed in the List before a scrollbar appears. Value '0' means no limit.\n\nDefault value is <code>7<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"setMaxListed":{"!description":"Sets a new value for property <code>maxListed<\/code>.\n\nMaximum number of messages being displayed in the List before a scrollbar appears. Value '0' means no limit.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>7<\/code>.","!type":"fn(iMaxListed: Number) -> sap.ui.commons.MessageBar","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.MessageBar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"setVisible":{"!description":"Setter for property <code>visible<\/code>.\n\nDefault value is <code>true<\/code>\n\nThe default implementation of function <code>setVisible()<\/code> is enhanced\nin order to toggle the <code>visibility:hidden;<\/code> attribute over the control.","!type":"fn(bVisible: Boolean) -> sap.ui.commons.MessageBar","!category":"function","!static":false},"setAnchorSnapPoint":{"!description":"Sets a new value for property <code>anchorSnapPoint<\/code>.\n\nType: sap.ui.core.Popup.Dock\nSnapPoint of MessageBar over anchorId.\nNote: Use \"begin\" or \"end\" for RTL support.\nNote: \"center\" is not indicated, as positioning is only set once, either via the css \"left\" or the \"right\" attribute. Therefore a MessageBar will only be extended in one direction, as Messages come in.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>begin top<\/code>.","!type":"fn(sAnchorSnapPoint: String) -> sap.ui.commons.MessageBar","!category":"function","!static":false},"getAnchorID":{"!description":"Gets current value of property <code>anchorID<\/code>.\n\nElement ID upon which the MessageBar will be initially positioned.\n\nDefault value is <code><\/code>.","!type":"fn() -> String","!category":"function","!static":false},"!constructorDescription":"Constructor for a new MessageBar.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAnchorID anchorID} : string (default: )<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getMaxToasted maxToasted} : int (default: 3)<\/li>\n<li>{@link #getMaxListed maxListed} : int (default: 7)<\/li>\n<li>{@link #getAnchorSnapPoint anchorSnapPoint} : string (default: begin top)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/commons/MessageBar","setMaxToasted":{"!description":"Sets a new value for property <code>maxToasted<\/code>.\n\nMaximum number of simultaneous messages being toasted in a row. Value '0' means this dynamic part is switched off.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>3<\/code>.","!type":"fn(iMaxToasted: Number) -> sap.ui.commons.MessageBar","!category":"function","!static":false},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nSpecifies whether or not the MessageBar is visible. Invisible controls are not rendered.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setAnchorID":{"!description":"Sets a new value for property <code>anchorID<\/code>.\n\nElement ID upon which the MessageBar will be initially positioned.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!type":"fn(sAnchorID: String) -> sap.ui.commons.MessageBar","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.4.0 Instead, use the <code>sap.m.MessagePopover<\/code> control.<br>Creates an instance of a MessageBar Control, for displaying messages.","deleteAllMessages":{"!description":"Deletes all messages.","!type":"fn() -> sap.ui.commons.MessageBar","!category":"function","!static":false},"deleteMessages":{"!description":"Deletes a supplied list of messages.\nThe MessageBar will disappear when no message remains.","!type":"fn(aIds: [String])","!category":"function","!static":false},"getAnchorSnapPoint":{"!description":"Gets current value of property <code>anchorSnapPoint<\/code>.\n\nType: sap.ui.core.Popup.Dock\nSnapPoint of MessageBar over anchorId.\nNote: Use \"begin\" or \"end\" for RTL support.\nNote: \"center\" is not indicated, as positioning is only set once, either via the css \"left\" or the \"right\" attribute. Therefore a MessageBar will only be extended in one direction, as Messages come in.\n\nDefault value is <code>begin top<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"getMaxToasted":{"!description":"Gets current value of property <code>maxToasted<\/code>.\n\nMaximum number of simultaneous messages being toasted in a row. Value '0' means this dynamic part is switched off.\n\nDefault value is <code>3<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"!category":"class","addMessages":{"!description":"Adds/updates a supplied list of messages.\nThe MessageBar will appear if at least one message exists.","!type":"fn(aAMessages: [sap.ui.commons.Message])","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.MessageBar.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Control"},"sap.ui.commons.RadioButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RadioButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.RadioButton"},"sap.ui.commons.Link":{"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nWhether the link can be triggered by the user.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","!type":"fn(mArguments?: Map) -> Boolean","!category":"function","!static":false},"getTarget":{"!description":"Gets current value of property <code>target<\/code>.\n\nOptions are _self, _top, _blank, _parent, _search. Alternatively, a frame name can be entered.","!type":"fn() -> String","!category":"function","!static":false},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nLink text to be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!type":"fn(sText: String) -> sap.ui.commons.Link","!category":"function","!static":false},"!module":"sap/ui/commons/Link","getHelpId":{"!description":"Gets current value of property <code>helpId<\/code>.\n\nUnique identifier used for help service.\n\nDefault value is <code><\/code>.","!type":"fn() -> String","!category":"function","!static":false},"removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"setTarget":{"!description":"Sets a new value for property <code>target<\/code>.\n\nOptions are _self, _top, _blank, _parent, _search. Alternatively, a frame name can be entered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTarget: String) -> sap.ui.commons.Link","!category":"function","!static":false},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nLink text to be displayed.\n\nDefault value is <code><\/code>.","!type":"fn() -> String","!category":"function","!static":false},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.ui.commons.Link","!category":"function","!static":false},"!category":"class","setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nWhether the link can be triggered by the user.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.Link","!category":"function","!static":false},"focus":{"!description":"Puts the focus to the link.","!type":"fn()","!category":"function","!static":false},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nWidth of text link. When it is set (CSS-size such as % or px), this is the exact size. When left blank, the text defines the size.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nWidth of text link. When it is set (CSS-size such as % or px), this is the exact size. When left blank, the text defines the size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Link","!category":"function","!static":false},"getAccessibilityInfo":{"!type":"fn()","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Link with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"!constructorDescription":"Constructor for a new Link.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getHelpId helpId} : string (default: )<\/li>\n<li>{@link #getHref href} : sap.ui.core.URI<\/li>\n<li>{@link #getTarget target} : string<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.ui.commons.Link<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.Link<\/code> itself.\n\nEvent is fired when the user clicks the control.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.Link","!category":"function","!static":false},"setHelpId":{"!description":"Sets a new value for property <code>helpId<\/code>.\n\nUnique identifier used for help service.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!type":"fn(sHelpId: String) -> sap.ui.commons.Link","!category":"function","!static":false},"addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.commons.Link","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Link<\/code> control.<br>\nProvides an absolute or relative reference to an internal or external URL. The classical target parameters are supported.\nAnother usage scenario is triggering an action, for example to open a popup window. In both cases, the link is a hypertext link.","setHref":{"!description":"Sets a new value for property <code>href<\/code>.\n\nThe link target URI. Supports standard hyperlink behavior. If an action should be triggered, this should not be set, but instead an event handler for the \"press\" event should be registered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sHref: sap.ui.core.URI) -> sap.ui.commons.Link","!category":"function","!static":false},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.ui.commons.Link<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.Link","!category":"function","!static":false},"getHref":{"!description":"Gets current value of property <code>href<\/code>.\n\nThe link target URI. Supports standard hyperlink behavior. If an action should be triggered, this should not be set, but instead an event handler for the \"press\" event should be registered.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Link.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.form.ResponsiveLayout":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>Renders a form with responsive layout. Internally the ResponsiveFlowLayout is used.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.ResponsiveLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.ResponsiveLayout.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!category":"class","!constructorDescription":"Constructor for a new form/ResponsiveLayout.","!module":"sap/ui/commons/form/ResponsiveLayout","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.form.ResponsiveLayout.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.layout.form.ResponsiveLayout"},"sap.ui.commons.TextView":{"getTextDirection":{"!description":"Gets current value of property <code>textDirection<\/code>.\n\nDetermines the text directionality. Available options are LTR and RTL. Alternatively, the control can inherit the text direction from its parent control.\n\nDefault value is <code>Inherit<\/code>.","!type":"fn() -> sap.ui.core.TextDirection","!category":"function","!static":false},"getSemanticColor":{"!description":"Gets current value of property <code>semanticColor<\/code>.\n\nSemantic color of the text View\n\nDefault value is <code>Default<\/code>.","!type":"fn() -> sap.ui.commons.TextViewColor","!category":"function","!static":false},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nSwitches the enabled state of the control. When the control is disabled, it is greyed out and no longer focusable.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setAccessibleRole":{"!description":"Sets a new value for property <code>accessibleRole<\/code>.\n\nThe ARIA role for the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sAccessibleRole: sap.ui.core.AccessibleRole) -> sap.ui.commons.TextView","!category":"function","!static":false},"getDesign":{"!description":"Gets current value of property <code>design<\/code>.\n\nDefines the visual appearance of the control.\n\nDefault value is <code>Standard<\/code>.","!type":"fn() -> sap.ui.commons.TextViewDesign","!category":"function","!static":false},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nText to be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!type":"fn(sText: String) -> sap.ui.commons.TextView","!category":"function","!static":false},"removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"!module":"sap/ui/commons/TextView","getHelpId":{"!description":"Gets current value of property <code>helpId<\/code>.\n\nUnique identifier used for help services.\n\nDefault value is <code><\/code>.","!type":"fn() -> String","!category":"function","!static":false},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nText to be displayed.\n\nDefault value is <code><\/code>.","!type":"fn() -> String","!category":"function","!static":false},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"setWrapping":{"!description":"Sets a new value for property <code>wrapping<\/code>.\n\nDisabled automatic wrapping of the text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bWrapping: Boolean) -> sap.ui.commons.TextView","!category":"function","!static":false},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.ui.commons.TextView","!category":"function","!static":false},"!category":"class","setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nSwitches the enabled state of the control. When the control is disabled, it is greyed out and no longer focusable.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.TextView","!category":"function","!static":false},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nWidth of the TextView","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nWidth of the TextView\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.TextView","!category":"function","!static":false},"getAccessibilityInfo":{"!type":"fn()","!category":"function","!static":false},"getWrapping":{"!description":"Gets current value of property <code>wrapping<\/code>.\n\nDisabled automatic wrapping of the text.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setTextDirection":{"!description":"Sets a new value for property <code>textDirection<\/code>.\n\nDetermines the text directionality. Available options are LTR and RTL. Alternatively, the control can inherit the text direction from its parent control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.ui.commons.TextView","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.TextView with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"setTextAlign":{"!description":"Sets a new value for property <code>textAlign<\/code>.\n\nSets the horizontal alignment of the text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Begin<\/code>.","!type":"fn(sTextAlign: sap.ui.core.TextAlign) -> sap.ui.commons.TextView","!category":"function","!static":false},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"unbindText":{"!description":"Unbinds property <code>text<\/code> from model data.","!type":"fn() -> sap.ui.commons.TextView","!category":"function","!static":false},"!constructorDescription":"Constructor for a new TextView.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getHelpId helpId} : string (default: )<\/li>\n<li>{@link #getAccessibleRole accessibleRole} : sap.ui.core.AccessibleRole<\/li>\n<li>{@link #getDesign design} : sap.ui.commons.TextViewDesign (default: Standard)<\/li>\n<li>{@link #getWrapping wrapping} : boolean (default: true)<\/li>\n<li>{@link #getSemanticColor semanticColor} : sap.ui.commons.TextViewColor (default: Default)<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Begin)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setHelpId":{"!description":"Sets a new value for property <code>helpId<\/code>.\n\nUnique identifier used for help services.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!type":"fn(sHelpId: String) -> sap.ui.commons.TextView","!category":"function","!static":false},"bindText":{"!description":"Binds property <code>text<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>","!type":"fn(oBindingInfo: Object) -> sap.ui.commons.TextView","!category":"function","!static":false},"getTextAlign":{"!description":"Gets current value of property <code>textAlign<\/code>.\n\nSets the horizontal alignment of the text.\n\nDefault value is <code>Begin<\/code>.","!type":"fn() -> sap.ui.core.TextAlign","!category":"function","!static":false},"getAccessibleRole":{"!description":"Gets current value of property <code>accessibleRole<\/code>.\n\nThe ARIA role for the control.","!type":"fn() -> sap.ui.core.AccessibleRole","!category":"function","!static":false},"addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.commons.TextView","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Is used to display some continous text. The control can inherit the text direction from its parent control.","setSemanticColor":{"!description":"Sets a new value for property <code>semanticColor<\/code>.\n\nSemantic color of the text View\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Default<\/code>.","!type":"fn(sSemanticColor: sap.ui.commons.TextViewColor) -> sap.ui.commons.TextView","!category":"function","!static":false},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"setDesign":{"!description":"Sets a new value for property <code>design<\/code>.\n\nDefines the visual appearance of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Standard<\/code>.","!type":"fn(sDesign: sap.ui.commons.TextViewDesign) -> sap.ui.commons.TextView","!category":"function","!static":false},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.TextView.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.form.FormContainer":{"getVisible":{"!description":"Getter for property <code>visible<\/code>.\nInvisible FormContainers are not rendered.\n\nDefault value is <code>true<\/code>","!type":"fn() -> Boolean","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>Used to group form elements.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.FormContainer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.FormContainer.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"setVisible":{"!description":"Setter for property <code>visible<\/code>.\n\nDefault value is <code>true<\/code>","!type":"fn(bVisible: Boolean) -> sap.ui.commons.form.FormContainer","!category":"function","!static":false},"!category":"class","!constructorDescription":"Constructor for a new form/FormContainer.","!module":"sap/ui/commons/form/FormContainer","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.form.FormContainer.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.layout.form.FormContainer"},"sap.ui.commons.RadioButton":{"getKey":{"!description":"Gets current value of property <code>key<\/code>.\n\nCan be used for subsequent actions.","!type":"fn() -> String","!category":"function","!static":false},"getTextDirection":{"!description":"Gets current value of property <code>textDirection<\/code>.\n\nDefines the text direction - options are left-to-right (LTR) and right-to-left (RTL). Alternatively, the control can\ninherit the text direction from its parent container.\n\nDefault value is <code>Inherit<\/code>.","!type":"fn() -> sap.ui.core.TextDirection","!category":"function","!static":false},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nDisplays the disabled controls in another color, depending on the customer settings.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nDefines the text displayed next to the RadioButton.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sText: String) -> sap.ui.commons.RadioButton","!category":"function","!static":false},"removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"!module":"sap/ui/commons/RadioButton","getValueState":{"!description":"Gets current value of property <code>valueState<\/code>.\n\nEnumeration sap.ui.core.ValueState provides state values Error, Success, Warning and None.\n\nDefault value is <code>None<\/code>.","!type":"fn() -> sap.ui.core.ValueState","!category":"function","!static":false},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>select<\/code> event of this <code>sap.ui.commons.RadioButton<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.RadioButton<\/code> itself.\n\nTriggers when the user makes a change on the RadioButton.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.RadioButton","!category":"function","!static":false},"setKey":{"!description":"Sets a new value for property <code>key<\/code>.\n\nCan be used for subsequent actions.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sKey: String) -> sap.ui.commons.RadioButton","!category":"function","!static":false},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nDefines the text displayed next to the RadioButton.","!type":"fn() -> String","!category":"function","!static":false},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"setEditable":{"!description":"Sets a new value for property <code>editable<\/code>.\n\nSpecifies whether the user can select the RadioButton.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEditable: Boolean) -> sap.ui.commons.RadioButton","!category":"function","!static":false},"setValueState":{"!description":"Sets a new value for property <code>valueState<\/code>.\n\nEnumeration sap.ui.core.ValueState provides state values Error, Success, Warning and None.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!type":"fn(sValueState: sap.ui.core.ValueState) -> sap.ui.commons.RadioButton","!category":"function","!static":false},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.ui.commons.RadioButton","!category":"function","!static":false},"!category":"class","setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nDisplays the disabled controls in another color, depending on the customer settings.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.RadioButton","!category":"function","!static":false},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDetermines the control width. By default, it depends on the text length. Alternatively, CSS sizes in % or px can be set.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nDetermines the control width. By default, it depends on the text length. Alternatively, CSS sizes in % or px can be set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.RadioButton","!category":"function","!static":false},"getGroupName":{"!description":"Gets current value of property <code>groupName<\/code>.\n\nDefines the name of the RadioButtonGroup, in which the current RadioButton belongs to. You can define a new name for\nthe group. If no new name is specified, the default is sapUiRbDefaultGroup. By default, when one of the RadioButtons\nin a group is selected, all others are unselected.\n\nDefault value is <code>sapUiRbDefaultGroup<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"setTextDirection":{"!description":"Sets a new value for property <code>textDirection<\/code>.\n\nDefines the text direction - options are left-to-right (LTR) and right-to-left (RTL). Alternatively, the control can\ninherit the text direction from its parent container.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.ui.commons.RadioButton","!category":"function","!static":false},"getEditable":{"!description":"Gets current value of property <code>editable<\/code>.\n\nSpecifies whether the user can select the RadioButton.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"fireSelect":{"!description":"Fires event <code>select<\/code> to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.commons.RadioButton","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RadioButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>select<\/code> event of this <code>sap.ui.commons.RadioButton<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.RadioButton","!category":"function","!static":false},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"!constructorDescription":"Constructor for a new RadioButton.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getGroupName groupName} : string (default: sapUiRbDefaultGroup)<\/li>\n<li>{@link #getKey key} : string<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.commons.RadioButton","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.RadioButton<\/code> control.<br>RadioButton is a control similar to CheckBox, but it allows the user to choose only one of the predefined set of options.\n\nUsually, RadioButton is used in a group with other RadioButtons (with the groupName property or by using\nsap.ui.commons.RadioButtonGroup), thus providing a limited choice for the user. An event is triggered when\nthe user makes a change of the selection.","getSelected":{"!description":"Gets current value of property <code>selected<\/code>.\n\nSpecifies the select state of the RadioButton.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"setSelected":{"!description":"Sets a new value for property <code>selected<\/code>.\n\nSpecifies the select state of the RadioButton.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bSelected: Boolean) -> sap.ui.commons.RadioButton","!category":"function","!static":false},"setGroupName":{"!description":"Sets a new value for property <code>groupName<\/code>.\n\nDefines the name of the RadioButtonGroup, in which the current RadioButton belongs to. You can define a new name for\nthe group. If no new name is specified, the default is sapUiRbDefaultGroup. By default, when one of the RadioButtons\nin a group is selected, all others are unselected.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>sapUiRbDefaultGroup<\/code>.","!type":"fn(sGroupName: String) -> sap.ui.commons.RadioButton","!category":"function","!static":false},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.RadioButton.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.form.GridContainerData":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>Grid layout specific properties for FormContainers.\nThe width and height properties of the elements are ignored since the witdh and heights are defined by the grid cells.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.GridContainerData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.GridContainerData.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!category":"class","!constructorDescription":"Constructor for a new form/GridContainerData.","!module":"sap/ui/commons/form/GridContainerData","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.form.GridContainerData.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.layout.form.GridContainerData"},"sap.ui.commons.layout.ResponsiveFlowLayoutData_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.ResponsiveFlowLayoutData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.ResponsiveFlowLayoutData.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.layout.ResponsiveFlowLayoutData"},"sap.ui.commons.Toolbar_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Toolbar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Toolbar"},"sap.ui.commons.ListBox_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ListBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.ListBox"},"sap.ui.commons.Menu_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Menu with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.Menu.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Menu"},"sap.ui.commons.Button_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Button with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Button"},"sap.ui.commons.layout.MatrixLayoutCell":{"getPadding":{"!description":"Gets current value of property <code>padding<\/code>.\n\nDetermines the padding of the matrix layout cell's content within the\ncell's borders. The default value is appropriate for all cells in a\nform-like layout. Consider to remove the padding on the outer layout in\ncase of nesting.\n\nDefault value is <code>End<\/code>.","!type":"fn() -> sap.ui.commons.layout.Padding","!category":"function","!static":false},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.ui.core.Control) -> Number","!category":"function","!static":false},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"!module":"sap/ui/commons/layout/MatrixLayoutCell","hasStyleClass":{"!description":"Returns true if the given style class string is valid and if this Element has this style class set via a previous call to addStyleClass().","!type":"fn(sStyleClass: String) -> Boolean","!category":"function","!static":false},"destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!type":"fn() -> sap.ui.commons.layout.MatrixLayoutCell","!category":"function","!static":false},"getSeparation":{"!description":"Gets current value of property <code>separation<\/code>.\n\nDetermines how a matrix layout cell is separated from its predecessor,\nvia a vertical gutter of variable width, with or without a vertical line.\n\nDefault value is <code>None<\/code>.","!type":"fn() -> sap.ui.commons.layout.Separation","!category":"function","!static":false},"setColSpan":{"!description":"Sets a new value for property <code>colSpan<\/code>.\n\nDetermines how many columns of the underlying grid structure are occupied\nby this matrix layout cell.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1<\/code>.","!type":"fn(iColSpan: Number) -> sap.ui.commons.layout.MatrixLayoutCell","!category":"function","!static":false},"!category":"class","setSeparation":{"!description":"Sets a new value for property <code>separation<\/code>.\n\nDetermines how a matrix layout cell is separated from its predecessor,\nvia a vertical gutter of variable width, with or without a vertical line.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!type":"fn(sSeparation: sap.ui.commons.layout.Separation) -> sap.ui.commons.layout.MatrixLayoutCell","!category":"function","!static":false},"addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.commons.layout.MatrixLayoutCell","!category":"function","!static":false},"getRowSpan":{"!description":"Gets current value of property <code>rowSpan<\/code>.\n\nDetermines how many rows of the underlying grid structure are occupied by this matrix layout cell.\nIn case a row-height is used, all rows affected by the RowSpan must have the same unit.\n\nDefault value is <code>1<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"getVAlign":{"!description":"Gets current value of property <code>vAlign<\/code>.\n\nDetermines the vertical alignment of the matrix layout cell's content\nwith the cell's borders.\n\nDefault value is <code>Middle<\/code>.","!type":"fn() -> sap.ui.commons.layout.VAlign","!category":"function","!static":false},"setHAlign":{"!description":"Sets a new value for property <code>hAlign<\/code>.\n\nDetermines the horizontal alignment of the matrix layout cell's content\nwith the cell's borders.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Begin<\/code>.","!type":"fn(sHAlign: sap.ui.commons.layout.HAlign) -> sap.ui.commons.layout.MatrixLayoutCell","!category":"function","!static":false},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nThe matrix layout cell's content (arbitrary controls).\n\nIf the matrix row has a defined height and the matrix has layoutFixed = true, the controls inside of a cell should all use the same unit for its height property.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"removeStyleClass":{"!description":"Removes the given string from the list of custom style classes that have been set previously.\nRegular style classes like \"sapUiBtn\" cannot be removed.\n\nReturns <code>this<\/code> to allow method chaining","!type":"fn(sStyleClass: String) -> sap.ui.commons.layout.MatrixLayoutCell","!category":"function","!static":false},"setBackgroundDesign":{"!description":"Sets a new value for property <code>backgroundDesign<\/code>.\n\nDetermines the matrix layout cell's background design.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Transparent<\/code>.","!type":"fn(sBackgroundDesign: sap.ui.commons.layout.BackgroundDesign) -> sap.ui.commons.layout.MatrixLayoutCell","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.MatrixLayoutCell with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"setRowSpan":{"!description":"Sets a new value for property <code>rowSpan<\/code>.\n\nDetermines how many rows of the underlying grid structure are occupied by this matrix layout cell.\nIn case a row-height is used, all rows affected by the RowSpan must have the same unit.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1<\/code>.","!type":"fn(iRowSpan: Number) -> sap.ui.commons.layout.MatrixLayoutCell","!category":"function","!static":false},"!constructorDescription":"Constructor for a new layout/MatrixLayoutCell.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.ui.commons.layout.BackgroundDesign (default: Transparent)<\/li>\n<li>{@link #getColSpan colSpan} : int (default: 1)<\/li>\n<li>{@link #getHAlign hAlign} : sap.ui.commons.layout.HAlign (default: Begin)<\/li>\n<li>{@link #getPadding padding} : sap.ui.commons.layout.Padding (default: End)<\/li>\n<li>{@link #getRowSpan rowSpan} : int (default: 1)<\/li>\n<li>{@link #getSeparation separation} : sap.ui.commons.layout.Separation (default: None)<\/li>\n<li>{@link #getVAlign vAlign} : sap.ui.commons.layout.VAlign (default: Middle)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.ui.layout.Grid<\/code> control.<br>\nNon-control element used as part of a matrix layout's inner structure.","insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.commons.layout.MatrixLayoutCell","!category":"function","!static":false},"setVAlign":{"!description":"Sets a new value for property <code>vAlign<\/code>.\n\nDetermines the vertical alignment of the matrix layout cell's content\nwith the cell's borders.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Middle<\/code>.","!type":"fn(sVAlign: sap.ui.commons.layout.VAlign) -> sap.ui.commons.layout.MatrixLayoutCell","!category":"function","!static":false},"setPadding":{"!description":"Sets a new value for property <code>padding<\/code>.\n\nDetermines the padding of the matrix layout cell's content within the\ncell's borders. The default value is appropriate for all cells in a\nform-like layout. Consider to remove the padding on the outer layout in\ncase of nesting.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>End<\/code>.","!type":"fn(sPadding: sap.ui.commons.layout.Padding) -> sap.ui.commons.layout.MatrixLayoutCell","!category":"function","!static":false},"getColSpan":{"!description":"Gets current value of property <code>colSpan<\/code>.\n\nDetermines how many columns of the underlying grid structure are occupied\nby this matrix layout cell.\n\nDefault value is <code>1<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"addStyleClass":{"!description":"The string given as \"sStyleClass\" will be added to the \"class\" attribute of this element's root HTML element.\n\nThis method is intended to be used to mark controls as being of a special type for which\nspecial styling can be provided using CSS selectors that reference this style class name.\n\n<pre>\nExample:\nmyButton.addStyleClass(\"myRedTextButton\"); // add a CSS class to one button instance\n\n...and in CSS:\n.myRedTextButton {\ncolor: red;\n}\n<\/pre>\n\nThis will add the CSS class \"myRedTextButton\" to the Button HTML and the CSS code above will then\nmake the text in this particular button red.\n\nOnly characters allowed inside HTML attributes are allowed.\nQuotes are not allowed and this method will ignore any strings containing quotes.\nStrings containing spaces are interpreted as ONE custom style class (even though CSS selectors interpret them\nas different classes) and can only removed later by calling removeStyleClass() with exactly the\nsame (space-containing) string as parameter.\nMultiple calls with the same sStyleClass will have no different effect than calling once.\nIf sStyleClass is null, the call is ignored.\n\nReturns <code>this<\/code> to allow method chaining","!type":"fn(sStyleClass: String) -> sap.ui.commons.layout.MatrixLayoutCell","!category":"function","!static":false},"getBackgroundDesign":{"!description":"Gets current value of property <code>backgroundDesign<\/code>.\n\nDetermines the matrix layout cell's background design.\n\nDefault value is <code>Transparent<\/code>.","!type":"fn() -> sap.ui.commons.layout.BackgroundDesign","!category":"function","!static":false},"getHAlign":{"!description":"Gets current value of property <code>hAlign<\/code>.\n\nDetermines the horizontal alignment of the matrix layout cell's content\nwith the cell's borders.\n\nDefault value is <code>Begin<\/code>.","!type":"fn() -> sap.ui.commons.layout.HAlign","!category":"function","!static":false},"!proto":"sap.ui.core.Element","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.layout.MatrixLayoutCell.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.ResponsiveContainerRange":{"getKey":{"!description":"Gets current value of property <code>key<\/code>.\n\nA key which can be used to identify the range (optional).\n\nDefault value is <code><\/code>.","!type":"fn() -> String","!category":"function","!static":false},"getContent":{"!description":"ID of the element which is the current target of the association <code>content<\/code>, or <code>null<\/code>.","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ResponsiveContainerRange with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!constructorDescription":"Constructor for a new ResponsiveContainerRange.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getKey key} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/commons/ResponsiveContainerRange","setContent":{"!description":"Sets the associated <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.commons.ResponsiveContainerRange","!category":"function","!static":false},"setKey":{"!description":"Sets a new value for property <code>key<\/code>.\n\nA key which can be used to identify the range (optional).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!type":"fn(sKey: String) -> sap.ui.commons.ResponsiveContainerRange","!category":"function","!static":false},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nThe minimal height for this range to be displayed.\n\nDefault value is <code><\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Defines a range for the ResponsiveContainer","setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nThe minimal height for this range to be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.ResponsiveContainerRange","!category":"function","!static":false},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nThe minimal width for this range to be displayed.\n\nDefault value is <code><\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nThe minimal width for this range to be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.ResponsiveContainerRange","!category":"function","!static":false},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.ResponsiveContainerRange.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.form":{"Form":"sap.ui.commons.form.Form_obj","ResponsiveLayout":"sap.ui.commons.form.ResponsiveLayout_obj","!category":"namespace","FormElement":"sap.ui.commons.form.FormElement_obj","GridLayout":"sap.ui.commons.form.GridLayout_obj","SimpleForm":"sap.ui.commons.form.SimpleForm_obj","GridElementData":"sap.ui.commons.form.GridElementData_obj","FormContainer":"sap.ui.commons.form.FormContainer_obj","GridContainerData":"sap.ui.commons.form.GridContainerData_obj","FormLayout":"sap.ui.commons.form.FormLayout_obj"},"sap.ui.commons.MenuButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.MenuButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.Button.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.MenuButton"},"sap.ui.commons.RichTooltip_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RichTooltip with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.TooltipBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.RichTooltip"},"sap":{"ui":"sap.ui","sap":"sap","!category":"namespace"},"sap.ui.commons.MessageToast_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.MessageToast with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.MessageToast"},"sap.ui.commons.form.SimpleForm_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.SimpleForm with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.SimpleForm.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.form.SimpleForm"},"sap.ui.commons.MenuBar":{"removeItem":{"!description":"Removes a item from the aggregation <code>items<\/code>.","!type":"fn(vItem: Number | String | sap.ui.unified.MenuItem) -> sap.ui.unified.MenuItem","!category":"function","!static":false},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nWhen the MenuBar is not enabled, automatically all single menu items are also displayed as 'disabled'.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.MenuBar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"getDesign":{"!description":"Gets current value of property <code>design<\/code>.\n\nAvailable design options are Header and Standard. Note that design settings are theme-dependent.\n\nDefault value is <code>Standard<\/code>.","!type":"fn() -> sap.ui.commons.MenuBarDesign","!category":"function","!static":false},"!constructorDescription":"Constructor for a new MenuBar.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getDesign design} : sap.ui.commons.MenuBarDesign (default: Standard)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.unified.MenuItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/commons/MenuBar","addItem":{"!description":"Adds some item to the aggregation <code>items<\/code>.","!type":"fn(oItem: sap.ui.unified.MenuItem) -> sap.ui.commons.MenuBar","!category":"function","!static":false},"indexOfItem":{"!description":"Checks for the provided <code>sap.ui.unified.MenuItem<\/code> in the aggregation <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oItem: sap.ui.unified.MenuItem) -> Number","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.OverflowToolbar<\/code> control.<br>Represents a user interface area which is the entry point for menus with their menu items. MenuBar is useful for applications which shall offer a\nset of actions that shall be provided in a structured way. The MenuBar contains the menu titles from where users navigate to the single items. The control supports\nfor example long menu item texts, automated scrolling for menu items when the browser space is not large enough to display all items, defining images for single\nor all items in a menu, automated layouting of items with or w/o image, and active/non-active items.","getItems":{"!description":"Gets content of aggregation <code>items<\/code>.\n\nAggregation of menu items.","!type":"fn() -> [sap.ui.unified.MenuItem]","!category":"function","!static":false},"!category":"class","destroyItems":{"!description":"Destroys all the items in the aggregation <code>items<\/code>.","!type":"fn() -> sap.ui.commons.MenuBar","!category":"function","!static":false},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nWhen the MenuBar is not enabled, automatically all single menu items are also displayed as 'disabled'.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.MenuBar","!category":"function","!static":false},"removeAllItems":{"!description":"Removes all the controls from the aggregation <code>items<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.unified.MenuItem]","!category":"function","!static":false},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nSpecifies the width of the MenuBar\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nSpecifies the width of the MenuBar\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.MenuBar","!category":"function","!static":false},"setDesign":{"!description":"Sets a new value for property <code>design<\/code>.\n\nAvailable design options are Header and Standard. Note that design settings are theme-dependent.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Standard<\/code>.","!type":"fn(sDesign: sap.ui.commons.MenuBarDesign) -> sap.ui.commons.MenuBar","!category":"function","!static":false},"insertItem":{"!description":"Inserts a item into the aggregation <code>items<\/code>.","!type":"fn(oItem: sap.ui.unified.MenuItem, iIndex: Number) -> sap.ui.commons.MenuBar","!category":"function","!static":false},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.MenuBar.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.layout.AbsoluteLayout":{"setPositionOfChild":{"!description":"Allows to set or change the position information of the given child control","!type":"fn(oControl: sap.ui.core.Control, oPos: Object) -> Boolean","!category":"function","!static":false},"setVerticalScrolling":{"!description":"Sets a new value for property <code>verticalScrolling<\/code>.\n\n'Auto', 'Scroll', 'Hidden', and 'None' are the available values for setting the vertical scrolling mode.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Hidden<\/code>.","!type":"fn(sVerticalScrolling: sap.ui.core.Scrolling) -> sap.ui.commons.layout.AbsoluteLayout","!category":"function","!static":false},"destroyPositions":{"!description":"Destroys all the positions in the aggregation <code>positions<\/code>.","!type":"fn() -> sap.ui.commons.layout.AbsoluteLayout","!category":"function","!static":false},"indexOfContent":{"!description":"Checks for the provided sap.ui.core.Control in the aggregated position containers, and returns the index of the container in the positions aggregation\nif found, or '-1' otherwise.","!type":"fn(oContent: sap.ui.core.Control) -> Number","!category":"function","!static":false},"removeContent":{"!description":"Removes the given control and its corresponding position container from the aggregation named 'positions'.","!type":"fn(oContent: Object) -> sap.ui.core.Control","!category":"function","!static":false},"!module":"sap/ui/commons/layout/AbsoluteLayout","destroyContent":{"!description":"Destroys all aggregated position containers and their child controls. Returns 'this' to allow method chaining.","!type":"fn() -> sap.ui.commons.layout.AbsoluteLayout","!category":"function","!static":false},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nThe overall height of the control. When not set, 100% is automatically set.\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"removePosition":{"!description":"Removes a position from the aggregation <code>positions<\/code>.","!type":"fn(vPosition: Number | String | sap.ui.commons.layout.PositionContainer) -> sap.ui.commons.layout.PositionContainer","!category":"function","!static":false},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nThe overall width of the control. When not set, 100% is automatically set.\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nThe overall width of the control. When not set, 100% is automatically set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.layout.AbsoluteLayout","!category":"function","!static":false},"addContent":{"!description":"Adds the given control and a corresponding position container into the aggregation named 'positions'. Returns 'this' to allow method chaining.","!type":"fn(oContent: sap.ui.core.Control, oPos: Object) -> sap.ui.commons.layout.AbsoluteLayout","!category":"function","!static":false},"indexOfPosition":{"!description":"Checks for the provided <code>sap.ui.commons.layout.PositionContainer<\/code> in the aggregation <code>positions<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oPosition: sap.ui.commons.layout.PositionContainer) -> Number","!category":"function","!static":false},"insertPosition":{"!description":"Inserts a position into the aggregation <code>positions<\/code>.","!type":"fn(oPosition: sap.ui.commons.layout.PositionContainer, iIndex: Number) -> sap.ui.commons.layout.AbsoluteLayout","!category":"function","!static":false},"getContent":{"!description":"Returns an array of the controls contained in the aggregated position containers (might be empty).","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"removeAllContent":{"!description":"Removes all aggregated position containers. Returns an array of the controls contained in the removed position containers (might be empty).","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"removeAllPositions":{"!description":"Removes all the controls from the aggregation <code>positions<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.layout.PositionContainer]","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.AbsoluteLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!constructorDescription":"Constructor for a new layout/AbsoluteLayout.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getVerticalScrolling verticalScrolling} : sap.ui.core.Scrolling (default: Hidden)<\/li>\n<li>{@link #getHorizontalScrolling horizontalScrolling} : sap.ui.core.Scrolling (default: Hidden)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getPositions positions} : sap.ui.commons.layout.PositionContainer[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getVerticalScrolling":{"!description":"Gets current value of property <code>verticalScrolling<\/code>.\n\n'Auto', 'Scroll', 'Hidden', and 'None' are the available values for setting the vertical scrolling mode.\n\nDefault value is <code>Hidden<\/code>.","!type":"fn() -> sap.ui.core.Scrolling","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>\nThe Absolute Layout positions its child controls absolutely","insertContent":{"!description":"Inserts the given control and a corresponding position container into the aggregation named 'positions'. Returns 'this' to allow method chaining.","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number, oPos: Object) -> sap.ui.commons.layout.AbsoluteLayout","!category":"function","!static":false},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nThe overall height of the control. When not set, 100% is automatically set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.layout.AbsoluteLayout","!category":"function","!static":false},"getPositions":{"!description":"Gets content of aggregation <code>positions<\/code>.\n\nPositioned child controls within the layout","!type":"fn() -> [sap.ui.commons.layout.PositionContainer]","!category":"function","!static":false},"setHorizontalScrolling":{"!description":"Sets a new value for property <code>horizontalScrolling<\/code>.\n\n'Auto', 'Scroll', 'Hidden', and 'None' are the available values for setting the vertical scrolling mode.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Hidden<\/code>.","!type":"fn(sHorizontalScrolling: sap.ui.core.Scrolling) -> sap.ui.commons.layout.AbsoluteLayout","!category":"function","!static":false},"getHorizontalScrolling":{"!description":"Gets current value of property <code>horizontalScrolling<\/code>.\n\n'Auto', 'Scroll', 'Hidden', and 'None' are the available values for setting the vertical scrolling mode.\n\nDefault value is <code>Hidden<\/code>.","!type":"fn() -> sap.ui.core.Scrolling","!category":"function","!static":false},"addPosition":{"!description":"Adds some position to the aggregation <code>positions<\/code>.","!type":"fn(oPosition: sap.ui.commons.layout.PositionContainer) -> sap.ui.commons.layout.AbsoluteLayout","!category":"function","!static":false},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.layout.AbsoluteLayout.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.TextViewDesign":{"Standard":{"!description":"Displays the text in standard letters.","!type":"String","!category":"enum"},"!module":"sap/ui/commons/library","H6":{"!description":"Displays the text in header 6 letters.","!type":"String","!category":"enum"},"H5":{"!description":"Displays the text in header 5 letters.","!type":"String","!category":"enum"},"!description":"Designs for TextView.","H4":{"!description":"Displays the text in header 4 letters.","!type":"String","!category":"enum"},"H3":{"!description":"Displays the text in header 3 letters.","!type":"String","!category":"enum"},"Monospace":{"!description":"Displays the text in monospace letters.","!type":"String","!category":"enum"},"Bold":{"!description":"Displays the text in bold letters","!type":"String","!category":"enum"},"H2":{"!description":"Displays the text in header 2 letters.","!type":"String","!category":"enum"},"H1":{"!description":"Displays the text in header 1 letters.","!type":"String","!category":"enum"},"Underline":{"!description":"underlined Text","!type":"String","!category":"enum"},"!category":"static class","Italic":{"!description":"Displays the text in italic letters","!type":"String","!category":"enum"},"Small":{"!description":"Displays the text in smaller letters.","!type":"String","!category":"enum"}},"sap.ui.commons.RoadMap":{"getNumberOfVisibleSteps":{"!description":"Gets current value of property <code>numberOfVisibleSteps<\/code>.\n\nTotal number of steps to be displayed at once","!type":"fn() -> Number","!category":"function","!static":false},"detachStepSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>stepSelected<\/code> event of this <code>sap.ui.commons.RoadMap<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.RoadMap","!category":"function","!static":false},"setSelectedStep":{"!description":"Sets a new value for property <code>selectedStep<\/code>.\n\nID of the step which is currently selected\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sSelectedStep: String) -> sap.ui.commons.RoadMap","!category":"function","!static":false},"detachStepExpanded":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>stepExpanded<\/code> event of this <code>sap.ui.commons.RoadMap<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.RoadMap","!category":"function","!static":false},"setNumberOfVisibleSteps":{"!description":"Sets a new value for property <code>numberOfVisibleSteps<\/code>.\n\nTotal number of steps to be displayed at once\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(iNumberOfVisibleSteps: Number) -> sap.ui.commons.RoadMap","!category":"function","!static":false},"!module":"sap/ui/commons/RoadMap","attachStepSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>stepSelected<\/code> event of this <code>sap.ui.commons.RoadMap<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.RoadMap<\/code> itself.\n\nEvent is fired when the user selects a step.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.RoadMap","!category":"function","!static":false},"destroySteps":{"!description":"Destroys all the steps in the aggregation <code>steps<\/code>.","!type":"fn() -> sap.ui.commons.RoadMap","!category":"function","!static":false},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDetermines the control width in CSS size\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nDetermines the control width in CSS size\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.RoadMap","!category":"function","!static":false},"removeAllSteps":{"!description":"Removes all the controls from the aggregation <code>steps<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.RoadMapStep]","!category":"function","!static":false},"getFirstVisibleStep":{"!description":"Gets current value of property <code>firstVisibleStep<\/code>.\n\nID of the first step to be displayed","!type":"fn() -> String","!category":"function","!static":false},"insertStep":{"!description":"Inserts a step into the aggregation <code>steps<\/code>.","!type":"fn(oStep: sap.ui.commons.RoadMapStep, iIndex: Number) -> sap.ui.commons.RoadMap","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RoadMap with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"indexOfStep":{"!description":"Checks for the provided <code>sap.ui.commons.RoadMapStep<\/code> in the aggregation <code>steps<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oStep: sap.ui.commons.RoadMapStep) -> Number","!category":"function","!static":false},"removeStep":{"!description":"Removes a step from the aggregation <code>steps<\/code>.","!type":"fn(vStep: Number | String | sap.ui.commons.RoadMapStep) -> sap.ui.commons.RoadMapStep","!category":"function","!static":false},"!constructorDescription":"Constructor for a new RoadMap.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getNumberOfVisibleSteps numberOfVisibleSteps} : int<\/li>\n<li>{@link #getFirstVisibleStep firstVisibleStep} : string<\/li>\n<li>{@link #getSelectedStep selectedStep} : string<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSteps steps} : sap.ui.commons.RoadMapStep[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:stepSelected stepSelected} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:stepExpanded stepExpanded} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","fireStepSelected":{"!description":"Fires event <code>stepSelected<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>stepId<\/code> of type <code>string<\/code>ID of the selected step<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.RoadMap","!category":"function","!static":false},"getSelectedStep":{"!description":"Gets current value of property <code>selectedStep<\/code>.\n\nID of the step which is currently selected","!type":"fn() -> String","!category":"function","!static":false},"setFirstVisibleStep":{"!description":"Sets a new value for property <code>firstVisibleStep<\/code>.\n\nID of the first step to be displayed\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sFirstVisibleStep: String) -> sap.ui.commons.RoadMap","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Wizard<\/code> control.<br>RoadMap is used to display step-by-step work flows of a clearly defined work process.","attachStepExpanded":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>stepExpanded<\/code> event of this <code>sap.ui.commons.RoadMap<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.RoadMap<\/code> itself.\n\nEvent is fired when a given step is expanded or collapsed by user.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.RoadMap","!category":"function","!static":false},"getSteps":{"!description":"Gets content of aggregation <code>steps<\/code>.\n\nSteps that are composing the RoadMap","!type":"fn() -> [sap.ui.commons.RoadMapStep]","!category":"function","!static":false},"fireStepExpanded":{"!description":"Fires event <code>stepExpanded<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>stepId<\/code> of type <code>string<\/code>ID of the expanded/collapsed step<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.RoadMap","!category":"function","!static":false},"addStep":{"!description":"Adds some step to the aggregation <code>steps<\/code>.","!type":"fn(oStep: sap.ui.commons.RoadMapStep) -> sap.ui.commons.RoadMap","!category":"function","!static":false},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.RoadMap.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.layout.PositionContainer":{"setTop":{"!description":"Sets a new value for property <code>top<\/code>.\n\nDefines the distance to the top of the layout (as specified in HTML)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTop: sap.ui.core.CSSSize) -> sap.ui.commons.layout.PositionContainer","!category":"function","!static":false},"getLeft":{"!description":"Gets current value of property <code>left<\/code>.\n\nDefines the distance to the left of the layout (as specified in HTML)","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"destroyControl":{"!description":"Destroys the control in the aggregation <code>control<\/code>.","!type":"fn() -> sap.ui.commons.layout.PositionContainer","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.PositionContainer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"getBottom":{"!description":"Gets current value of property <code>bottom<\/code>.\n\nDefines the distance to the bottom of the layout (as specified in HTML)","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getCenterHorizontally":{"!description":"Gets current value of property <code>centerHorizontally<\/code>.\n\nIndicates whether this container shall be centered horizontally within the AbsoluteLayout area.\nThe values of the attributes left and right are ignored when this feature is activated.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"updatePosition":{"!description":"Updates the position properties of the container according to the given position in JSON style.","!type":"fn(oPos: Object)","!category":"function","!static":false},"setCenterVertically":{"!description":"Sets a new value for property <code>centerVertically<\/code>.\n\nIndicates whether this container should be centered vertically within the AbsoluteLayout area.\nThe values of the attributes top and bottom are ignored when this feature is activated.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bCenterVertically: Boolean) -> sap.ui.commons.layout.PositionContainer","!category":"function","!static":false},"!constructorDescription":"Constructor for a new layout/PositionContainer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTop top} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getBottom bottom} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getLeft left} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getRight right} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getCenterHorizontally centerHorizontally} : boolean (default: false)<\/li>\n<li>{@link #getCenterVertically centerVertically} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getControl control} : sap.ui.core.Control (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/commons/layout/PositionContainer","getCenterVertically":{"!description":"Gets current value of property <code>centerVertically<\/code>.\n\nIndicates whether this container should be centered vertically within the AbsoluteLayout area.\nThe values of the attributes top and bottom are ignored when this feature is activated.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setCenterHorizontally":{"!description":"Sets a new value for property <code>centerHorizontally<\/code>.\n\nIndicates whether this container shall be centered horizontally within the AbsoluteLayout area.\nThe values of the attributes left and right are ignored when this feature is activated.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bCenterHorizontally: Boolean) -> sap.ui.commons.layout.PositionContainer","!category":"function","!static":false},"setControl":{"!description":"Sets the aggregated <code>control<\/code>.","!type":"fn(oControl: sap.ui.core.Control) -> sap.ui.commons.layout.PositionContainer","!category":"function","!static":false},"!description":"Is used to specify the position of a control in the AbsoluteLayout","setBottom":{"!description":"Sets a new value for property <code>bottom<\/code>.\n\nDefines the distance to the bottom of the layout (as specified in HTML)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sBottom: sap.ui.core.CSSSize) -> sap.ui.commons.layout.PositionContainer","!category":"function","!static":false},"!category":"class","getControl":{"!description":"Gets content of aggregation <code>control<\/code>.\n\nChild control of the position container","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false},"setLeft":{"!description":"Sets a new value for property <code>left<\/code>.\n\nDefines the distance to the left of the layout (as specified in HTML)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sLeft: sap.ui.core.CSSSize) -> sap.ui.commons.layout.PositionContainer","!category":"function","!static":false},"getRight":{"!description":"Gets current value of property <code>right<\/code>.\n\nDefines the distance to the right of the layout (as specified in HTML)","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setRight":{"!description":"Sets a new value for property <code>right<\/code>.\n\nDefines the distance to the right of the layout (as specified in HTML)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sRight: sap.ui.core.CSSSize) -> sap.ui.commons.layout.PositionContainer","!category":"function","!static":false},"getTop":{"!description":"Gets current value of property <code>top<\/code>.\n\nDefines the distance to the top of the layout (as specified in HTML)","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"!proto":"sap.ui.core.Element","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.layout.PositionContainer.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.LabelDesign":{"Standard":{"!description":"Displays the label in normal mode.","!type":"String","!category":"enum"},"!description":"Available label display modes.","Bold":{"!description":"Displays the label in bold.","!type":"String","!category":"enum"},"!category":"static class","!module":"sap/ui/commons/library"},"sap.ui.commons.layout.MatrixLayout":{"getLayoutFixed":{"!description":"Gets current value of property <code>layoutFixed<\/code>.\n\nSets the table layout. If fixed the width parameter of a column has priority, if not the width of the content of the colums has priority.\nThe default is \"fixed\".\nIf the fixed layout is used a adequate width of the MatrixLayout should be provided. Otherwise the column width displayed could be different than the given ones because of browser dependend optimazations.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setLayoutFixed":{"!description":"Sets a new value for property <code>layoutFixed<\/code>.\n\nSets the table layout. If fixed the width parameter of a column has priority, if not the width of the content of the colums has priority.\nThe default is \"fixed\".\nIf the fixed layout is used a adequate width of the MatrixLayout should be provided. Otherwise the column width displayed could be different than the given ones because of browser dependend optimazations.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bLayoutFixed: Boolean) -> sap.ui.commons.layout.MatrixLayout","!category":"function","!static":false},"getColumns":{"!description":"Gets current value of property <code>columns<\/code>.\n\nNumber of columns. If not specified, the number of columns will be determined from the given cells.","!type":"fn() -> Number","!category":"function","!static":false},"!module":"sap/ui/commons/layout/MatrixLayout","insertRow":{"!description":"Inserts a row into the aggregation <code>rows<\/code>.","!type":"fn(oRow: sap.ui.commons.layout.MatrixLayoutRow, iIndex: Number) -> sap.ui.commons.layout.MatrixLayout","!category":"function","!static":false},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nCSS height of the matrix layout.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"!category":"class","getRows":{"!description":"Gets content of aggregation <code>rows<\/code>.\n\nThe matrix layout's individual rows.","!type":"fn() -> [sap.ui.commons.layout.MatrixLayoutRow]","!category":"function","!static":false},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nCSS width of the matrix layout.\nIf the LayoutFixed = true a adequate width should be provided.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nCSS width of the matrix layout.\nIf the LayoutFixed = true a adequate width should be provided.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.layout.MatrixLayout","!category":"function","!static":false},"addRow":{"!description":"Adds some row to the aggregation <code>rows<\/code>.","!type":"fn(oRow: sap.ui.commons.layout.MatrixLayoutRow) -> sap.ui.commons.layout.MatrixLayout","!category":"function","!static":false},"removeRow":{"!description":"Removes a row from the aggregation <code>rows<\/code>.","!type":"fn(vRow: Number | String | sap.ui.commons.layout.MatrixLayoutRow) -> sap.ui.commons.layout.MatrixLayoutRow","!category":"function","!static":false},"removeAllRows":{"!description":"Removes all the controls from the aggregation <code>rows<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.layout.MatrixLayoutRow]","!category":"function","!static":false},"setColumns":{"!description":"Sets a new value for property <code>columns<\/code>.\n\nNumber of columns. If not specified, the number of columns will be determined from the given cells.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(iColumns: Number) -> sap.ui.commons.layout.MatrixLayout","!category":"function","!static":false},"destroyRows":{"!description":"Destroys all the rows in the aggregation <code>rows<\/code>.","!type":"fn() -> sap.ui.commons.layout.MatrixLayout","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.MatrixLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!constructorDescription":"Constructor for a new layout/MatrixLayout.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getLayoutFixed layoutFixed} : boolean (default: true)<\/li>\n<li>{@link #getColumns columns} : int<\/li>\n<li>{@link #getWidths widths} : sap.ui.core.CSSSize[]<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getRows rows} : sap.ui.commons.layout.MatrixLayoutRow[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","indexOfRow":{"!description":"Checks for the provided <code>sap.ui.commons.layout.MatrixLayoutRow<\/code> in the aggregation <code>rows<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oRow: sap.ui.commons.layout.MatrixLayoutRow) -> Number","!category":"function","!static":false},"createRow":{"!description":"Creates a new matrix layout row and appends it to this matrix layout.\n\nEach argument must be either a matrix layout cell, which is added to the row\n\"as is\", or an arbitrary content control, which is wrapped with a new\n(default) matrix layout cell first and then added to the row.","!type":"fn(rowContent: sap.ui.core.Control | sap.ui.commons.layout.MatrixLayoutCell | String) -> sap.ui.commons.layout.MatrixLayout","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.ui.layout.Grid<\/code> control.<br>\n<p>\nA matrix layout arranges controls in a grid structure, using rows which\nneed not have the same number of cells.\n<\/p>\n\n<p>\nIt uses predefined cell classes that guarantee appropriate distances\nbetween cells in the grid. The cell's <code>vGutter<\/code> property lets\nyou specify additional horizontal distances easily. You can set these\nadditional distances (known as gutters) with or without separators.\nThe distance for each cell is specified by assigning a specific\nenumeration value of the class <code>LayoutCellSeparator<\/code> of the\nmatrix data object.\n<\/p>\n\n<p>\nYou should <b>avoid nesting<\/b> matrix layouts. You should only use a\nmatrix layout if you need to align controls horizontally across rows.\n<\/p>","setWidths":{"!description":"Sets a new value for property <code>widths<\/code>.\n\nWidths of the columns. Use an array to define the widths of the columns.\nIf a column shall have an automatical sizing enter \"auto\" for this column width.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sWidths: [sap.ui.core.CSSSize]) -> sap.ui.commons.layout.MatrixLayout","!category":"function","!static":false},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nCSS height of the matrix layout.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.layout.MatrixLayout","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.layout.MatrixLayout.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Control","getWidths":{"!description":"Gets current value of property <code>widths<\/code>.\n\nWidths of the columns. Use an array to define the widths of the columns.\nIf a column shall have an automatical sizing enter \"auto\" for this column width.","!type":"fn() -> [sap.ui.core.CSSSize]","!category":"function","!static":false}},"sap.ui.commons.form.FormElement_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.FormElement with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.FormElement.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.form.FormElement"},"sap.ui.commons.form.Form_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.Form with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.Form.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.form.Form"},"sap.ui.commons.RowRepeaterSorter":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RowRepeaterSorter with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!constructorDescription":"Constructor for a new RowRepeaterSorter.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getIcon icon} : string<\/li>\n<li>{@link #getSorter sorter} : object<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/commons/RowRepeaterSorter","setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nThe sorter title if needed for display.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sText: String) -> sap.ui.commons.RowRepeaterSorter","!category":"function","!static":false},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nThe sorter icon if needed for display.","!type":"fn() -> String","!category":"function","!static":false},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nThe sorter title if needed for display.","!type":"fn() -> String","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.ui.table.Table<\/code> control.<br>This element is used by the RowRepeater and allows to define a sorter in this context along with the related data such as a text and an icon.","getSorter":{"!description":"Gets current value of property <code>sorter<\/code>.\n\nThe sorter object.","!type":"fn() -> Object","!category":"function","!static":false},"!category":"class","setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nThe sorter icon if needed for display.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIcon: String) -> sap.ui.commons.RowRepeaterSorter","!category":"function","!static":false},"!proto":"sap.ui.core.Element","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.RowRepeaterSorter.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"setSorter":{"!description":"Sets a new value for property <code>sorter<\/code>.\n\nThe sorter object.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(oSorter: Object) -> sap.ui.commons.RowRepeaterSorter","!category":"function","!static":false}},"sap.ui.commons.MessageType":{"!description":"[Enter description for MessageType]","!category":"static class","Warning":{"!description":"Warning message","!type":"String","!category":"enum"},"Success":{"!description":"Successful message","!type":"String","!category":"enum"},"!module":"sap/ui/commons/library","Error":{"!description":"Error message","!type":"String","!category":"enum"}},"sap.ui.commons.Title_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Title with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Title.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Title"},"sap.ui.commons.CheckBox":{"getTextDirection":{"!description":"Gets current value of property <code>textDirection<\/code>.\n\nThe value can be set to LTR or RTL. Otherwise, the control inherits the text direction from its parent control.\n\nDefault value is <code>Inherit<\/code>.","!type":"fn() -> sap.ui.core.TextDirection","!category":"function","!static":false},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nUsing this property, the control could be disabled, if required.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nDefines the text displayed next to the check box\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sText: String) -> sap.ui.commons.CheckBox","!category":"function","!static":false},"setChecked":{"!description":"Sets a new value for property <code>checked<\/code>.\n\nContains the state of the control whether it is flagged with a check mark, or not\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bChecked: Boolean) -> sap.ui.commons.CheckBox","!category":"function","!static":false},"removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"!module":"sap/ui/commons/CheckBox","getValueState":{"!description":"Gets current value of property <code>valueState<\/code>.\n\nAccepts the core enumeration ValueState.type that supports 'None', 'Error', 'Warning' and 'Success'.\n\nDefault value is <code>None<\/code>.","!type":"fn() -> sap.ui.core.ValueState","!category":"function","!static":false},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nDefines the text displayed next to the check box","!type":"fn() -> String","!category":"function","!static":false},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"toggle":{"!description":"\nInverts the current value of the control.","!type":"fn() -> sap.ui.commons.CheckBox","!category":"function","!static":false},"setEditable":{"!description":"Sets a new value for property <code>editable<\/code>.\n\nSpecifies whether the user shall be allowed to select the check box.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEditable: Boolean) -> sap.ui.commons.CheckBox","!category":"function","!static":false},"setValueState":{"!description":"Sets a new value for property <code>valueState<\/code>.\n\nAccepts the core enumeration ValueState.type that supports 'None', 'Error', 'Warning' and 'Success'.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!type":"fn(sValueState: sap.ui.core.ValueState) -> sap.ui.commons.CheckBox","!category":"function","!static":false},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.ui.commons.CheckBox","!category":"function","!static":false},"!category":"class","setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nUsing this property, the control could be disabled, if required.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.CheckBox","!category":"function","!static":false},"getChecked":{"!description":"Gets current value of property <code>checked<\/code>.\n\nContains the state of the control whether it is flagged with a check mark, or not\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nThe width can be set to an absolute value. If no value is set, the control width results from the text length.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nThe width can be set to an absolute value. If no value is set, the control width results from the text length.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.CheckBox","!category":"function","!static":false},"getAccessibilityInfo":{"!type":"fn()","!category":"function","!static":false},"setTextDirection":{"!description":"Sets a new value for property <code>textDirection<\/code>.\n\nThe value can be set to LTR or RTL. Otherwise, the control inherits the text direction from its parent control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.ui.commons.CheckBox","!category":"function","!static":false},"getEditable":{"!description":"Gets current value of property <code>editable<\/code>.\n\nSpecifies whether the user shall be allowed to select the check box.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"unbindChecked":{"!description":"Unbinds property <code>checked<\/code> from model data.","!type":"fn() -> sap.ui.commons.CheckBox","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.CheckBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"!constructorDescription":"Constructor for a new CheckBox.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getChecked checked} : boolean (default: false)<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getName name} : string<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>change<\/code> event of this <code>sap.ui.commons.CheckBox<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.CheckBox","!category":"function","!static":false},"addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.ui.commons.CheckBox","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.CheckBox<\/code> control.<br>\nProvides a box which can be flagged, the box has a label. A check box can either stand alone, or in a group with other check boxes. As an option, the boxes can initially be set to status 'Not Editable'.","fireChange":{"!description":"Fires event <code>change<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>checked<\/code> of type <code>boolean<\/code>Checks whether the box is flagged or not flagged.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.CheckBox","!category":"function","!static":false},"getName":{"!description":"Gets current value of property <code>name<\/code>.\n\nThe 'name' property to be used in the HTML code, for example for HTML forms that send data to the server via submit.","!type":"fn() -> String","!category":"function","!static":false},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>change<\/code> event of this <code>sap.ui.commons.CheckBox<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.CheckBox<\/code> itself.\n\nEvent is triggered when the control status is changed by the user by flagging or unflagging the checkbox.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.CheckBox","!category":"function","!static":false},"setName":{"!description":"Sets a new value for property <code>name<\/code>.\n\nThe 'name' property to be used in the HTML code, for example for HTML forms that send data to the server via submit.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sName: String) -> sap.ui.commons.CheckBox","!category":"function","!static":false},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"bindChecked":{"!description":"Binds property <code>checked<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>","!type":"fn(oBindingInfo: Object) -> sap.ui.commons.CheckBox","!category":"function","!static":false},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.CheckBox.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.ColorPickerMode":{"HSV":{"!description":"Color picker works with HSV values.","!type":"String","!category":"enum"},"!description":"different styles for a ColorPicker.","!category":"static class","HSL":{"!description":"Color picker works with HSL values.","!type":"String","!category":"enum"},"!module":"sap/ui/commons/library"},"sap.ui.commons.ImageMap":{"destroyAreas":{"!description":"Destroys all the areas in the aggregation <code>areas<\/code>.","!type":"fn() -> sap.ui.commons.ImageMap","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ImageMap with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>areaId<\/code> of type <code>string<\/code>Id of clicked Area.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.ImageMap","!category":"function","!static":false},"getAreas":{"!description":"Gets content of aggregation <code>areas<\/code>.\n\nArea representing the reference to the target location","!type":"fn() -> [sap.ui.commons.Area]","!category":"function","!static":false},"!constructorDescription":"Constructor for a new ImageMap.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getName name} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getAreas areas} : sap.ui.commons.Area[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/commons/ImageMap","attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.ui.commons.ImageMap<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.ImageMap<\/code> itself.\n\nEvent for the areas that can be clicked in an ImageMap","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.ImageMap","!category":"function","!static":false},"indexOfArea":{"!description":"Checks for the provided <code>sap.ui.commons.Area<\/code> in the aggregation <code>areas<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oArea: sap.ui.commons.Area) -> Number","!category":"function","!static":false},"removeArea":{"!description":"Removes a area from the aggregation <code>areas<\/code>.","!type":"fn(vArea: Number | String | sap.ui.commons.Area) -> sap.ui.commons.Area","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Combination of image areas where at runtime these areas are starting points for hyperlinks or actions","insertArea":{"!description":"Inserts a area into the aggregation <code>areas<\/code>.","!type":"fn(oArea: sap.ui.commons.Area, iIndex: Number) -> sap.ui.commons.ImageMap","!category":"function","!static":false},"addArea":{"!description":"Adds some area to the aggregation <code>areas<\/code>.","!type":"fn(oArea: sap.ui.commons.Area) -> sap.ui.commons.ImageMap","!category":"function","!static":false},"getName":{"!description":"Gets current value of property <code>name<\/code>.\n\nName for the image that serves as reference","!type":"fn() -> String","!category":"function","!static":false},"!category":"class","createArea":{"!description":"Adds areas to the Image Map.\n\nEach argument must be either a JSon object or a list of objects or the area element or elements.","!type":"fn(content: Object) -> sap.ui.commons.ImageMap","!category":"function","!static":false},"removeAllAreas":{"!description":"Removes all the controls from the aggregation <code>areas<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.Area]","!category":"function","!static":false},"setName":{"!description":"Sets a new value for property <code>name<\/code>.\n\nName for the image that serves as reference\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sName: String) -> sap.ui.commons.ImageMap","!category":"function","!static":false},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.ui.commons.ImageMap<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.ImageMap","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.ImageMap.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Control"},"sap.ui.commons.layout.VAlign":{"Bottom":{"!description":"\nAligned at the bottom.","!type":"String","!category":"enum"},"Top":{"!description":"\nAligned at the top.","!type":"String","!category":"enum"},"!description":"Vertical alignment, e.g. of a layout cell's content within the cell's borders.","Middle":{"!description":"\nVertically centered.","!type":"String","!category":"enum"},"!category":"static class","!module":"sap/ui/commons/library"},"sap.ui.commons.TextView_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.TextView with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.TextView"},"sap.ui.commons.layout.HorizontalLayout":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.ui.layout.HorizontalLayout<\/code> control.<br>A layout that provides support for horizontal alignment of controls","extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.HorizontalLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.HorizontalLayout.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!category":"class","!constructorDescription":"Constructor for a new layout/HorizontalLayout.","!module":"sap/ui/commons/layout/HorizontalLayout","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.layout.HorizontalLayout.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.layout.HorizontalLayout"},"sap.ui.commons.RowRepeaterFilter_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RowRepeaterFilter with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.RowRepeaterFilter"},"sap.ui.commons.PasswordField_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.PasswordField with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.TextField.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.PasswordField"},"sap.ui.commons.FormattedTextView_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.FormattedTextView with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.FormattedTextView"},"sap.ui.commons.Link_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Link with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Link"},"sap.ui.commons.Tree_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Tree with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Tree"},"sap.ui.commons.RoadMapStep_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RoadMapStep with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.RoadMapStep"},"sap.ui.commons.RowRepeaterSorter_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RowRepeaterSorter with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.RowRepeaterSorter"},"sap.ui.commons.TreeSelectionMode":{"Multi":{"!description":"Select multiple rows at a time.","!type":"String","!category":"enum"},"!description":"Selection mode of the tree","Legacy":{"!description":"Behavior of the former Tree. It is possible to select a plurality of nodes via the API.","!type":"String","!category":"enum"},"!category":"static class","None":{"!description":"No rows can be selected.","!type":"String","!category":"enum"},"!module":"sap/ui/commons/library","Single":{"!description":"Select one row at a time.","!type":"String","!category":"enum"}},"sap.ui.commons.ComboBox_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ComboBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.TextField.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.ComboBox"},"sap.ui.commons.AutoComplete_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.AutoComplete with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.ComboBox.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.AutoComplete"},"sap.ui.commons.ToolbarSeparatorDesign":{"Standard":{"!description":"Standard Separator between controls","!type":"String","!category":"enum"},"!description":"Design of the Toolbar Separator.","!category":"static class","FullHeight":{"!description":"100% height Separator before and after specific controls","!type":"String","!category":"enum"},"!module":"sap/ui/commons/library"},"sap.ui.commons.Slider_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Slider with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Slider"},"sap.ui.commons.MenuTextFieldItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.MenuTextFieldItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.MenuTextFieldItem.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.MenuTextFieldItem"},"sap.ui.commons.RowRepeater":{"detachFilter":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>filter<\/code> event of this <code>sap.ui.commons.RowRepeater<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.RowRepeater","!category":"function","!static":false},"!module":"sap/ui/commons/RowRepeater","resize":{"!description":"Resizes the row repeater by changing the number of displayed rows. This method will only resize the RowRepeater if the property showMoreSteps is set.","!type":"fn(iNumberOfRows: Number)","!category":"function","!static":false},"removeAllSorters":{"!description":"Removes all the controls from the aggregation <code>sorters<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.RowRepeaterSorter]","!category":"function","!static":false},"detachPage":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>page<\/code> event of this <code>sap.ui.commons.RowRepeater<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.RowRepeater","!category":"function","!static":false},"getNumberOfRows":{"!description":"Gets current value of property <code>numberOfRows<\/code>.\n\nNumber of rows displayed.\n\nDefault value is <code>5<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"indexOfSorter":{"!description":"Checks for the provided <code>sap.ui.commons.RowRepeaterSorter<\/code> in the aggregation <code>sorters<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oSorter: sap.ui.commons.RowRepeaterSorter) -> Number","!category":"function","!static":false},"attachFilter":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>filter<\/code> event of this <code>sap.ui.commons.RowRepeater<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.RowRepeater<\/code> itself.\n\nThis event is triggered when a filter is set.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.RowRepeater","!category":"function","!static":false},"gotoPage":{"!description":"Switch to specified page.","!type":"fn(iPageNumber: Number)","!category":"function","!static":false},"getThreshold":{"!description":"Gets current value of property <code>threshold<\/code>.\n\nThreshold to fetch the next chunk of data. The minimal threshold can be the numberOfRows of the RR.","!type":"fn() -> Number","!category":"function","!static":false},"indexOfFilter":{"!description":"Checks for the provided <code>sap.ui.commons.RowRepeaterFilter<\/code> in the aggregation <code>filters<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oFilter: sap.ui.commons.RowRepeaterFilter) -> Number","!category":"function","!static":false},"getTitle":{"!description":"Gets content of aggregation <code>title<\/code>.\n\nTitle to be displayed in top left corner. Either text or icon.","!type":"fn() -> sap.ui.core.Title","!category":"function","!static":false},"setThreshold":{"!description":"Sets a new value for property <code>threshold<\/code>.\n\nThreshold to fetch the next chunk of data. The minimal threshold can be the numberOfRows of the RR.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(iThreshold: Number) -> sap.ui.commons.RowRepeater","!category":"function","!static":false},"setCurrentPage":{"!description":"Setter for property <code>currentPage<\/code>.","!type":"fn(iCurrentPage: Number) -> sap.ui.commons.RowRepeater","!category":"function","!static":false},"removeRow":{"!description":"Removes a row from the aggregation <code>rows<\/code>.","!type":"fn(vRow: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"addRow":{"!description":"Adds some row to the aggregation <code>rows<\/code>.","!type":"fn(oRow: sap.ui.core.Control) -> sap.ui.commons.RowRepeater","!category":"function","!static":false},"unbindRows":{"!description":"Unbinds aggregation <code>rows<\/code> from model data.","!type":"fn() -> sap.ui.commons.RowRepeater","!category":"function","!static":false},"setFixedRowHeight":{"!description":"Sets a new value for property <code>fixedRowHeight<\/code>.\n\nRow height adapts to rendered content. If a fixed height is specified the cells have a maximum height and the overflow will be hidden.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!type":"fn(sFixedRowHeight: sap.ui.core.CSSSize) -> sap.ui.commons.RowRepeater","!category":"function","!static":false},"addFilter":{"!description":"Adds some filter to the aggregation <code>filters<\/code>.","!type":"fn(oFilter: sap.ui.commons.RowRepeaterFilter) -> sap.ui.commons.RowRepeater","!category":"function","!static":false},"triggerSort":{"!description":"Sort the data.","!type":"fn(sId: String)","!category":"function","!static":false},"!constructorDescription":"Constructor for a new RowRepeater.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getNumberOfRows numberOfRows} : int (default: 5)<\/li>\n<li>{@link #getCurrentPage currentPage} : int (default: 1)<\/li>\n<li>{@link #getShowMoreSteps showMoreSteps} : int (default: 0)<\/li>\n<li>{@link #getFixedRowHeight fixedRowHeight} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getDesign design} : sap.ui.commons.RowRepeaterDesign (default: Standard)<\/li>\n<li>{@link #getThreshold threshold} : int<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getRows rows} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getTitle title} : sap.ui.core.Title<\/li>\n<li>{@link #getFilters filters} : sap.ui.commons.RowRepeaterFilter[]<\/li>\n<li>{@link #getSorters sorters} : sap.ui.commons.RowRepeaterSorter[]<\/li>\n<li>{@link #getNoData noData} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:filter filter} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:sort sort} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:page page} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:resize resize} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setNoData":{"!description":"Sets the aggregated <code>noData<\/code>.","!type":"fn(oNoData: sap.ui.core.Control) -> sap.ui.commons.RowRepeater","!category":"function","!static":false},"destroyTitle":{"!description":"Destroys the title in the aggregation <code>title<\/code>.","!type":"fn() -> sap.ui.commons.RowRepeater","!category":"function","!static":false},"setTitle":{"!description":"Sets the aggregated <code>title<\/code>.","!type":"fn(oTitle: sap.ui.core.Title) -> sap.ui.commons.RowRepeater","!category":"function","!static":false},"attachSort":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>sort<\/code> event of this <code>sap.ui.commons.RowRepeater<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.RowRepeater<\/code> itself.\n\nThis event is triggered when a sorting is applied.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.RowRepeater","!category":"function","!static":false},"firstPage":{"!description":"Switch to first page.","!type":"fn()","!category":"function","!static":false},"detachResize":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>resize<\/code> event of this <code>sap.ui.commons.RowRepeater<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.RowRepeater","!category":"function","!static":false},"setDesign":{"!description":"Sets a new value for property <code>design<\/code>.\n\nThe visual design of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Standard<\/code>.","!type":"fn(sDesign: sap.ui.commons.RowRepeaterDesign) -> sap.ui.commons.RowRepeater","!category":"function","!static":false},"removeFilter":{"!description":"Removes a filter from the aggregation <code>filters<\/code>.","!type":"fn(vFilter: Number | String | sap.ui.commons.RowRepeaterFilter) -> sap.ui.commons.RowRepeaterFilter","!category":"function","!static":false},"!proto":"sap.ui.core.Control","removeSorter":{"!description":"Removes a sorter from the aggregation <code>sorters<\/code>.","!type":"fn(vSorter: Number | String | sap.ui.commons.RowRepeaterSorter) -> sap.ui.commons.RowRepeaterSorter","!category":"function","!static":false},"attachPage":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>page<\/code> event of this <code>sap.ui.commons.RowRepeater<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.RowRepeater<\/code> itself.\n\nThis event is triggered when paging was executed.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.RowRepeater","!category":"function","!static":false},"applyFilter":{"!description":"Applies a filter.","!type":"fn(sId: String)","!category":"function","!static":false},"getDesign":{"!description":"Gets current value of property <code>design<\/code>.\n\nThe visual design of the control.\n\nDefault value is <code>Standard<\/code>.","!type":"fn() -> sap.ui.commons.RowRepeaterDesign","!category":"function","!static":false},"firePage":{"!description":"Fires event <code>page<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>currentPage<\/code> of type <code>int<\/code>The value of the currentPage property after the change.<\/li>\n<li><code>previousPage<\/code> of type <code>int<\/code>The value of the currentPage property before the change.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.RowRepeater","!category":"function","!static":false},"setNumberOfRows":{"!description":"Setter for property <code>numberOfRows<\/code>.\n\nDefault value is <code>5<\/code>","!type":"fn(iNumberOfRows: Number) -> sap.ui.commons.RowRepeater","!category":"function","!static":false},"fireSort":{"!description":"Fires event <code>sort<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>sorterId<\/code> of type <code>string<\/code>The ID of the sorter that has just been applied.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.RowRepeater","!category":"function","!static":false},"bindRows":{"!description":"Binds aggregation <code>rows<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!type":"fn(oBindingInfo: Object) -> sap.ui.commons.RowRepeater","!category":"function","!static":false},"insertRow":{"!description":"Inserts a row into the aggregation <code>rows<\/code>.","!type":"fn(oRow: sap.ui.core.Control, iIndex: Number) -> sap.ui.commons.RowRepeater","!category":"function","!static":false},"destroySorters":{"!description":"Destroys all the sorters in the aggregation <code>sorters<\/code>.","!type":"fn() -> sap.ui.commons.RowRepeater","!category":"function","!static":false},"!category":"class","getRows":{"!description":"Gets content of aggregation <code>rows<\/code>.\n\nRows to be repeated.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"fireFilter":{"!description":"Fires event <code>filter<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>filterId<\/code> of type <code>string<\/code>The ID of the filter that has just been applied.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.RowRepeater","!category":"function","!static":false},"triggerShowMore":{"!description":"The <code>triggerShowMore<\/code> function increments the number of rows by the\nvalue of <code>showMoreSteps<\/code>.\n\nThis method will only trigger a showMore if the property showMoreSteps is set.","!type":"fn() -> sap.ui.commons.RowRepeater","!category":"function","!static":false},"setShowMoreSteps":{"!description":"Override the default behavior of <code>setShowMoreSteps<\/code> to update the\npaging mode flag. Any change to the paging mode flag will result in the current\npage being set to the first page.","!type":"fn(iShowMoreSteps: Number) -> sap.ui.commons.RowRepeater","!category":"function","!static":false},"addSorter":{"!description":"Adds some sorter to the aggregation <code>sorters<\/code>.","!type":"fn(oSorter: sap.ui.commons.RowRepeaterSorter) -> sap.ui.commons.RowRepeater","!category":"function","!static":false},"destroyNoData":{"!description":"Destroys the noData in the aggregation <code>noData<\/code>.","!type":"fn() -> sap.ui.commons.RowRepeater","!category":"function","!static":false},"previousPage":{"!description":"Switch to previous page.","!type":"fn()","!category":"function","!static":false},"removeAllRows":{"!description":"Removes all the controls from the aggregation <code>rows<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"fireResize":{"!description":"Fires event <code>resize<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>numberOfRows<\/code> of type <code>int<\/code>The value of the numberOfRows property after the change.<\/li>\n<li><code>previousNumberOfRows<\/code> of type <code>int<\/code>The value of the numberOfRows property before the change.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.RowRepeater","!category":"function","!static":false},"getShowMoreSteps":{"!description":"Gets current value of property <code>showMoreSteps<\/code>.\n\nStep size used to increase the numberOfRows value. This feature is only active if value is greater than 0. This will deactivate the paging feature.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"lastPage":{"!description":"Switch to last page.","!type":"fn()","!category":"function","!static":false},"nextPage":{"!description":"Switch to next page.","!type":"fn()","!category":"function","!static":false},"detachSort":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>sort<\/code> event of this <code>sap.ui.commons.RowRepeater<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.RowRepeater","!category":"function","!static":false},"destroyRows":{"!description":"Destroys all the rows in the aggregation <code>rows<\/code>.","!type":"fn() -> sap.ui.commons.RowRepeater","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RowRepeater with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"getFixedRowHeight":{"!description":"Gets current value of property <code>fixedRowHeight<\/code>.\n\nRow height adapts to rendered content. If a fixed height is specified the cells have a maximum height and the overflow will be hidden.\n\nDefault value is <code><\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"removeAllFilters":{"!description":"Removes all the controls from the aggregation <code>filters<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.RowRepeaterFilter]","!category":"function","!static":false},"getNoData":{"!description":"Gets content of aggregation <code>noData<\/code>.\n\nThis control is shown, in case there is no data available to be displayed in the RowRepeater.","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false},"indexOfRow":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>rows<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oRow: sap.ui.core.Control) -> Number","!category":"function","!static":false},"attachResize":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>resize<\/code> event of this <code>sap.ui.commons.RowRepeater<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.RowRepeater<\/code> itself.\n\nThis event is triggered when the number of rows was changed.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.RowRepeater","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.ui.table.Table<\/code> control.<br>This control displays items in a stacked list format, allowing the user to page in order to see more items or to use the offered filtering and sorting capabilities in order to manipulate the displayed data.","insertFilter":{"!description":"Inserts a filter into the aggregation <code>filters<\/code>.","!type":"fn(oFilter: sap.ui.commons.RowRepeaterFilter, iIndex: Number) -> sap.ui.commons.RowRepeater","!category":"function","!static":false},"insertSorter":{"!description":"Inserts a sorter into the aggregation <code>sorters<\/code>.","!type":"fn(oSorter: sap.ui.commons.RowRepeaterSorter, iIndex: Number) -> sap.ui.commons.RowRepeater","!category":"function","!static":false},"getCurrentPage":{"!description":"Gets current value of property <code>currentPage<\/code>.\n\nThe index of the page currently displayed. The index starts at 1.\n\nDefault value is <code>1<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"getSorters":{"!description":"Gets content of aggregation <code>sorters<\/code>.\n\nSorters to be provided in secondary toolbar.","!type":"fn() -> [sap.ui.commons.RowRepeaterSorter]","!category":"function","!static":false},"getFilters":{"!description":"Gets content of aggregation <code>filters<\/code>.\n\nFilters to be provided in toolbar.","!type":"fn() -> [sap.ui.commons.RowRepeaterFilter]","!category":"function","!static":false},"destroyFilters":{"!description":"Destroys all the filters in the aggregation <code>filters<\/code>.","!type":"fn() -> sap.ui.commons.RowRepeater","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.RowRepeater.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.form.FormContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.FormContainer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.FormContainer.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.form.FormContainer"},"sap.ui.commons.TextField_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.TextField with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sID?: String, mSettings: Object)","prototype":"sap.ui.commons.TextField"},"sap.ui.commons.ResponsiveContainerRange_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ResponsiveContainerRange with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.ResponsiveContainerRange"},"sap.ui.commons.MenuItemBase_obj":{"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.MenuItemBase"},"sap.ui.commons.SearchProvider_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.SearchProvider with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.search.OpenSearchProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.SearchProvider"},"sap.ui.commons.ToolbarItem":{"!description":"Marker interface for common controls which are suitable for use within a toolbar.\nThe most prominent example of a toolbar item is a button which is mostly used with\nan icon instead of a text caption.\n\nToolbar items must have a fixed height compatible with the toolbar being\na single horizontal row. They can refer to the toolbar's marker class\n\"sapUiTb\" to adjust their own theming when used inside a toolbar.","!category":"static class","!module":"sap/ui/commons/library"},"sap.ui.commons.form.FormLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.FormLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.FormLayout.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.form.FormLayout"},"sap.ui.commons.AutoComplete":{"setSelectedKey":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined NOT SUPPORTED<br>undefined","!type":"fn()","!category":"function","!static":false},"setEnableScrolling":{"!description":"Sets a new value for property <code>enableScrolling<\/code>.\n\nDetermines whether scrolling should be enabled when the number of items is higher than maxPopupItems.\nIf set to false only the first n items (n=maxPopupItems) are shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnableScrolling: Boolean) -> sap.ui.commons.AutoComplete","!category":"function","!static":false},"setListBox":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined NOT SUPPORTED<br>undefined","!type":"fn()","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.AutoComplete with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.ComboBox.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"setFilterFunction":{"!description":"Sets a custom filter function for items. Default is to check whether the item text begins with the typed value.\n\nExample:\n<code>\nfunction(sValue, oItem){\n\t  return jQuery.sap.startsWithIgnoreCase(oItem.getText(), sValue);\n}\n<\/code>","!type":"fn(fFilter?: fn())","!category":"function","!static":false},"detachSuggest":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>suggest<\/code> event of this <code>sap.ui.commons.AutoComplete<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.AutoComplete","!category":"function","!static":false},"!constructorDescription":"Constructor for a new AutoComplete.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnableScrolling enableScrolling} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:suggest suggest} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.commons.ComboBox#constructor sap.ui.commons.ComboBox}\ncan be used as well.","!module":"sap/ui/commons/AutoComplete","getEnableScrolling":{"!description":"Gets current value of property <code>enableScrolling<\/code>.\n\nDetermines whether scrolling should be enabled when the number of items is higher than maxPopupItems.\nIf set to false only the first n items (n=maxPopupItems) are shown.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getListBox":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined NOT SUPPORTED<br>undefined","!type":"fn()","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>\nTextfield with list based text completion.","!category":"class","getSelectedItemId":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined NOT SUPPORTED<br>undefined","!type":"fn()","!category":"function","!static":false},"fireSuggest":{"!description":"Fires event <code>suggest<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>suggestValue<\/code> of type <code>string<\/code>The current value which was typed in.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.AutoComplete","!category":"function","!static":false},"getSelectedKey":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined NOT SUPPORTED<br>undefined","!type":"fn()","!category":"function","!static":false},"setSelectedItemId":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined NOT SUPPORTED<br>undefined","!type":"fn()","!category":"function","!static":false},"!proto":"sap.ui.commons.ComboBox","attachSuggest":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>suggest<\/code> event of this <code>sap.ui.commons.AutoComplete<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.AutoComplete<\/code> itself.\n\nFired when the user has changed the value and a suggestion list update should occur.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.AutoComplete","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.AutoComplete.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.enums.AreaDesign":{"!description":"Value set for the background design of areas","Transparent":{"!description":"Shows the background as transparent","!type":"String","!category":"enum"},"!category":"static class","Plain":{"!description":"Shows the area in a plain look","!type":"String","!category":"enum"},"Fill":{"!description":"Shows the label in a filled look","!type":"String","!category":"enum"},"!module":"sap/ui/commons/library"},"sap.ui.commons.ComboBox":{"removeItem":{"!description":"Removes a item from the aggregation <code>items<\/code>.","!type":"fn(vItem: Number | String | sap.ui.core.ListItem) -> sap.ui.core.ListItem","!category":"function","!static":false},"setMaxPopupItems":{"!description":"Sets a new value for property <code>maxPopupItems<\/code>.\n\nDefines the number of items that shall be displayed at once. If the overall number of items is higher than this setting, a scrollbar is provided.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>10<\/code>.","!type":"fn(iMaxPopupItems: Number) -> sap.ui.commons.ComboBox","!category":"function","!static":false},"_checkChange":{"!description":"Compares the previous value with the current value and fires the \"Change\" event\nif the ComboBox is editable and the value has changed or whether the value has been changed\ne.g. via up/down or auto-complete feature","!type":"fn(oEvent: jQuery.Event, bImmediate?: Boolean)","!category":"function","!static":false},"bindItems":{"!description":"Binds aggregation <code>items<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!type":"fn(oBindingInfo: Object) -> sap.ui.commons.ComboBox","!category":"function","!static":false},"addItem":{"!description":"Adds some item to the aggregation <code>items<\/code>.","!type":"fn(oItem: sap.ui.core.ListItem) -> sap.ui.commons.ComboBox","!category":"function","!static":false},"!module":"sap/ui/commons/ComboBox","onsapescape":{"!description":"Handle sapescape pseudo events on the control","!type":"fn(oEvent: jQuery.Event)","!category":"function","!static":false},"indexOfItem":{"!description":"Checks for the provided <code>sap.ui.core.ListItem<\/code> in the aggregation <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oItem: sap.ui.core.ListItem) -> Number","!category":"function","!static":false},"getDisplaySecondaryValues":{"!description":"Gets current value of property <code>displaySecondaryValues<\/code>.\n\nIndicates whether the <code>additionalText<\/code> property that is available for <code>sap.ui.core.ListItem<\/code> shall be displayed in the list.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"unbindItems":{"!description":"Unbinds aggregation <code>items<\/code> from model data.","!type":"fn() -> sap.ui.commons.ComboBox","!category":"function","!static":false},"onsapnextmodifiers":{"!description":"Handle sapnextmodifiers pseudo events on the control\nif in toolbar prevent item navigation if popup is opened.","!type":"fn(oEvent: jQuery.Event)","!category":"function","!static":false},"!category":"class","getAccessibilityInfo":{"!type":"fn()","!category":"function","!static":false},"setSelectedKey":{"!description":"Sets a new value for property <code>selectedKey<\/code>.\n\nKey of the selected item.\n\nIf the value has no corresponding item the key is empty.\n\nIf duplicate keys exists the first item matching the key is used.\n\nIf the key is set to a not existing value it will not be changed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sSelectedKey: String) -> sap.ui.commons.ComboBox","!category":"function","!static":false},"onsaphide":{"!description":"Handle saphide pseudo events on the control","!type":"fn(oEvent: jQuery.Event)","!category":"function","!static":false},"getF4ButtonDomRef":{"!description":"Returns the DomRef which represents the icon for value help.\nCould be overwritten in child-classes","!type":"fn() -> Element","!category":"function","!static":false},"setListBox":{"!description":"Sets the associated <code>listBox<\/code>.","!type":"fn(oListBox: sap.ui.commons.ListBox) -> sap.ui.commons.ComboBox","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ComboBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.TextField.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!constructorDescription":"Constructor for a new ComboBox.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMaxPopupItems maxPopupItems} : int (default: 10)<\/li>\n<li>{@link #getDisplaySecondaryValues displaySecondaryValues} : boolean (default: false)<\/li>\n<li>{@link #getSelectedKey selectedKey} : string<\/li>\n<li>{@link #getSelectedItemId selectedItemId} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.core.ListItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.commons.TextField#constructor sap.ui.commons.TextField}\ncan be used as well.","onsapenter":{"!description":"Handle sapenter pseudo events on the control","!type":"fn(oEvent: jQuery.Event)","!category":"function","!static":false},"setDisplaySecondaryValues":{"!description":"Sets a new value for property <code>displaySecondaryValues<\/code>.\n\nIndicates whether the <code>additionalText<\/code> property that is available for <code>sap.ui.core.ListItem<\/code> shall be displayed in the list.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bDisplaySecondaryValues: Boolean) -> sap.ui.commons.ComboBox","!category":"function","!static":false},"getListBox":{"!description":"ID of the element which is the current target of the association <code>listBox<\/code>, or <code>null<\/code>.","!type":"fn() -> sap.ui.commons.ListBox","!category":"function","!static":false},"getMaxPopupItems":{"!description":"Gets current value of property <code>maxPopupItems<\/code>.\n\nDefines the number of items that shall be displayed at once. If the overall number of items is higher than this setting, a scrollbar is provided.\n\nDefault value is <code>10<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.ComboBox<\/code> control.<br>\nThe control provides a field that allows end users to either enter some text, or to choose an entry out of a list of pre-defined items.\nThe choosable items can be provided in the form of a complete <code>ListBox<\/code>, single <code>ListItems<\/code>.","getItems":{"!description":"Gets content of aggregation <code>items<\/code>.\n\n<code>ListItems<\/code> (see <code>sap.ui.core.ListBox<\/code>) that shall be displayed in the list.","!type":"fn() -> [sap.ui.core.ListItem]","!category":"function","!static":false},"fireChange":{"!description":"Fire event change to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'newValue' of type <code>string<\/code> The new / changed value of the textfield.<\/li>\n<li>'selectedItem' of type <code>sap.ui.core.ListItem<\/code> selected item <\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.ComboBox","!category":"function","!static":false},"destroyItems":{"!description":"Destroys all the items in the aggregation <code>items<\/code>.","!type":"fn() -> sap.ui.commons.ComboBox","!category":"function","!static":false},"getSelectedItemId":{"!description":"Gets current value of property <code>selectedItemId<\/code>.\n\nId of the selected item. If the value has no corresponding item, the <code>selectedItemId<\/code> is empty.\n\nIf the <code>selectedItemId<\/code> is set to an not existing item, it will not be changed.","!type":"fn() -> String","!category":"function","!static":false},"removeAllItems":{"!description":"Removes all the controls from the aggregation <code>items<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.ListItem]","!category":"function","!static":false},"onsapshow":{"!description":"Handle sapshow pseudo events on the control","!type":"fn(oEvent: jQuery.Event)","!category":"function","!static":false},"getSelectedKey":{"!description":"Gets current value of property <code>selectedKey<\/code>.\n\nKey of the selected item.\n\nIf the value has no corresponding item the key is empty.\n\nIf duplicate keys exists the first item matching the key is used.\n\nIf the key is set to a not existing value it will not be changed.","!type":"fn() -> String","!category":"function","!static":false},"setSelectedItemId":{"!description":"Sets a new value for property <code>selectedItemId<\/code>.\n\nId of the selected item. If the value has no corresponding item, the <code>selectedItemId<\/code> is empty.\n\nIf the <code>selectedItemId<\/code> is set to an not existing item, it will not be changed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sSelectedItemId: String) -> sap.ui.commons.ComboBox","!category":"function","!static":false},"insertItem":{"!description":"Inserts a item into the aggregation <code>items<\/code>.","!type":"fn(oItem: sap.ui.core.ListItem, iIndex: Number) -> sap.ui.commons.ComboBox","!category":"function","!static":false},"!proto":"sap.ui.commons.TextField","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.ComboBox.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.Image":{"getAlt":{"!description":"Gets current value of property <code>alt<\/code>.\n\nThe alternative text that is displayed in case the Image is not available, or cannot be displayed.\nIf the image is set to decorative this property is ignored.","!type":"fn() -> String","!category":"function","!static":false},"getDecorative":{"!description":"Gets current value of property <code>decorative<\/code>.\n\nA decorative image is included for design reasons. Accessibility tools will ignore decorative images.\nNote: If the Image has an image map (useMap is set), this property will be overridden (the image will not be rendered as decorative).\nA decorative image has no ALT attribute, so the Alt property is ignored if the image is decorative.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Image with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.commons.Image","!category":"function","!static":false},"setUseMap":{"!description":"Sets a new value for property <code>useMap<\/code>.\n\nThe name of the image map that defines the clickable areas\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sUseMap: String) -> sap.ui.commons.Image","!category":"function","!static":false},"!constructorDescription":"Constructor for a new Image.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSrc src} : sap.ui.core.URI<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getDecorative decorative} : boolean (default: true)<\/li>\n<li>{@link #getAlt alt} : string<\/li>\n<li>{@link #getUseMap useMap} : string<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/commons/Image","attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.ui.commons.Image<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.Image<\/code> itself.\n\nEvent is fired when the user clicks on the control.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.Image","!category":"function","!static":false},"setDecorative":{"!description":"Sets a new value for property <code>decorative<\/code>.\n\nA decorative image is included for design reasons. Accessibility tools will ignore decorative images.\nNote: If the Image has an image map (useMap is set), this property will be overridden (the image will not be rendered as decorative).\nA decorative image has no ALT attribute, so the Alt property is ignored if the image is decorative.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bDecorative: Boolean) -> sap.ui.commons.Image","!category":"function","!static":false},"setAlt":{"!description":"Sets a new value for property <code>alt<\/code>.\n\nThe alternative text that is displayed in case the Image is not available, or cannot be displayed.\nIf the image is set to decorative this property is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sAlt: String) -> sap.ui.commons.Image","!category":"function","!static":false},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nWhen the empty value is kept, the original size is not changed. It is also possible to make settings for width or height only, the overall size is maintained then, considering the aspect ratio.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Image<\/code> control.<br>A wrapper around the IMG tag. The image can be loaded from a remote or local server.\nThere are various size setting options available, and the images can be combined with actions.","setSrc":{"!description":"Sets a new value for property <code>src<\/code>.\n\nRelative or absolute path to URL where the image file is stored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sSrc: sap.ui.core.URI) -> sap.ui.commons.Image","!category":"function","!static":false},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nWhen the empty value is kept, the original size is not changed. It is also possible to make settings for width or height only, the overall size is maintained then, considering the aspect ratio.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.commons.Image","!category":"function","!static":false},"!category":"class","getUseMap":{"!description":"Gets current value of property <code>useMap<\/code>.\n\nThe name of the image map that defines the clickable areas","!type":"fn() -> String","!category":"function","!static":false},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nWhen the empty value is kept, the original size is not changed. It is also possible to make settings for width or height only, the overall size is maintained then, considering the aspect ratio.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nWhen the empty value is kept, the original size is not changed. It is also possible to make settings for width or height only, the overall size is maintained then, considering the aspect ratio.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Image","!category":"function","!static":false},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.ui.commons.Image<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.Image","!category":"function","!static":false},"getSrc":{"!description":"Gets current value of property <code>src<\/code>.\n\nRelative or absolute path to URL where the image file is stored.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Image.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.layout.MatrixLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.MatrixLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.layout.MatrixLayout"},"sap.ui.commons.MenuTextFieldItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.21.0 Please use the control <code>sap.ui.unified.MenuTextFieldItem<\/code> of the library <code>sap.ui.unified<\/code> instead.<br>Special menu item which contains a label and a text field. This menu item is e.g. helpful for filter implementations.\nThe aggregation <code>submenu<\/code> (inherited from parent class) is not supported for this type of menu item.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.MenuTextFieldItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.MenuTextFieldItem.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!category":"class","!constructorDescription":"Constructor for a new MenuTextFieldItem element.","!module":"sap/ui/commons/MenuTextFieldItem","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.MenuTextFieldItem.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.unified.MenuTextFieldItem"},"sap.ui.commons.Dialog_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Dialog with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Dialog"},"sap.ui.commons.DropdownBox_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.DropdownBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.ComboBox.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.DropdownBox"},"sap.ui.commons.SearchProvider":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.6.0 Replaced by sap.ui.core.search.OpenSearchProvider<br>A SearchProvider which can be attached to a Search Field.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.SearchProvider with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.search.OpenSearchProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!category":"class","!constructorDescription":"Constructor for a new SearchProvider.","!module":"sap/ui/commons/SearchProvider","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.SearchProvider.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.search.OpenSearchProvider"},"sap.ui.commons.PasswordField":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Input<\/code> control.<br>A text field with masked characters which borrows its properties and methods from TextField.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.PasswordField with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.TextField.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!category":"class","!constructorDescription":"Constructor for a new PasswordField.","!module":"sap/ui/commons/PasswordField","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.PasswordField.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.commons.TextField"},"sap.ui.commons.MenuItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.MenuItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.unified.MenuItem.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.MenuItem"},"sap.ui.commons.InPlaceEdit_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.InPlaceEdit with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.InPlaceEdit"},"sap.ui.commons.MessageBar_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.MessageBar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.MessageBar"},"sap.ui.commons.form.GridLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.GridLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.GridLayout.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.form.GridLayout"},"sap.ui.commons.TabStrip_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.TabStrip with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.TabStrip"},"sap.ui.commons.ToolbarSeparator_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ToolbarSeparator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.ToolbarSeparator"},"sap.ui.commons.HorizontalDividerType":{"!description":"Enumeration of possible HorizontalDivider types.","Page":{"!description":"Type Page","!type":"String","!category":"enum"},"Area":{"!description":"Type Area","!type":"String","!category":"enum"},"!category":"static class","!module":"sap/ui/commons/library"},"sap.ui.commons.PaginatorEvent":{"Next":{"!description":"Next page event","!type":"String","!category":"enum"},"Last":{"!description":"Last page event","!type":"String","!category":"enum"},"!description":"Distinct paginator event types","Previous":{"!description":"Previous page event","!type":"String","!category":"enum"},"Goto":{"!description":"Go to page event","!type":"String","!category":"enum"},"!category":"static class","First":{"!description":"First page event","!type":"String","!category":"enum"},"!module":"sap/ui/commons/library"},"sap.ui.commons.CalloutBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.CalloutBase with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.TooltipBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.CalloutBase"},"sap.ui.commons.TreeNode_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.TreeNode with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.TreeNode"},"sap.ui.commons.RoadMapStep":{"insertSubStep":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.10.5 Sub steps will not be supported in future. This feature might be removed in one of the next releases.<br>Inserts a subStep into the aggregation <code>subSteps<\/code>.","!type":"fn(oSubStep: sap.ui.commons.RoadMapStep, iIndex: Number) -> sap.ui.commons.RoadMapStep","!category":"function","!static":false},"removeSubStep":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.10.5 Sub steps will not be supported in future. This feature might be removed in one of the next releases.<br>Removes a subStep from the aggregation <code>subSteps<\/code>.","!type":"fn(vSubStep: Number | String | sap.ui.commons.RoadMapStep) -> sap.ui.commons.RoadMapStep","!category":"function","!static":false},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nSpecifies whether the user shall be allowed to click a step, or not\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.RoadMapStep with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"getExpanded":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.10.5 Note that sub steps will not be supported in future. This feature might be removed in one of the next releases.<br>Gets current value of property <code>expanded<\/code>.\n\nThis property is only relevant when using sub steps.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setVisible":{"!description":"Sets a new value for property <code>visible<\/code>.\n\nStep is visible\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bVisible: Boolean) -> sap.ui.commons.RoadMapStep","!category":"function","!static":false},"indexOfSubStep":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.10.5 Sub steps will not be supported in future. This feature might be removed in one of the next releases.<br>Checks for the provided <code>sap.ui.commons.RoadMapStep<\/code> in the aggregation <code>subSteps<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oSubStep: sap.ui.commons.RoadMapStep) -> Number","!category":"function","!static":false},"setLabel":{"!description":"Sets a new value for property <code>label<\/code>.\n\nLabel of the step\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sLabel: String) -> sap.ui.commons.RoadMapStep","!category":"function","!static":false},"!constructorDescription":"Constructor for a new RoadMapStep.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLabel label} : string<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getExpanded expanded} : boolean (default: false)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSubSteps subSteps} : sap.ui.commons.RoadMapStep[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/commons/RoadMapStep","getLabel":{"!description":"Gets current value of property <code>label<\/code>.\n\nLabel of the step","!type":"fn() -> String","!category":"function","!static":false},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nStep is visible\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.Wizard<\/code> control.<br>Step used within a RoadMap Control.","removeAllSubSteps":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.10.5 Sub steps will not be supported in future. This feature might be removed in one of the next releases.<br>Removes all the controls from the aggregation <code>subSteps<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.RoadMapStep]","!category":"function","!static":false},"setExpanded":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.10.5 Note that sub steps will not be supported in future. This feature might be removed in one of the next releases.<br>Sets a new value for property <code>expanded<\/code>.\n\nThis property is only relevant when using sub steps.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bExpanded: Boolean) -> sap.ui.commons.RoadMapStep","!category":"function","!static":false},"getSubSteps":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.10.5 Sub steps will not be supported in future. This feature might be removed in one of the next releases.<br>Gets content of aggregation <code>subSteps<\/code>.\n\nSub steps for the current step. Will be displayed only in the case that the step is expanded. Otherwise, special arrows show the availability\nof sub steps. One level of sub steps supported.","!type":"fn() -> [sap.ui.commons.RoadMapStep]","!category":"function","!static":false},"!category":"class","setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nSpecifies whether the user shall be allowed to click a step, or not\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.RoadMapStep","!category":"function","!static":false},"addSubStep":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.10.5 Sub steps will not be supported in future. This feature might be removed in one of the next releases.<br>Adds some subStep to the aggregation <code>subSteps<\/code>.","!type":"fn(oSubStep: sap.ui.commons.RoadMapStep) -> sap.ui.commons.RoadMapStep","!category":"function","!static":false},"destroySubSteps":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.10.5 Sub steps will not be supported in future. This feature might be removed in one of the next releases.<br>Destroys all the subSteps in the aggregation <code>subSteps<\/code>.","!type":"fn() -> sap.ui.commons.RoadMapStep","!category":"function","!static":false},"!proto":"sap.ui.core.Element","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.RoadMapStep.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.DropdownBox":{"onAfterRendering":{"!description":"Ensure that handed in ListBoxes are taken from the visible UI immediately.","!type":"fn(oEvent: jQuery.Event)","!category":"function","!static":false},"onsapdelete":{"!description":"Handle pseudo event onsapdelete.\nIf triggered with open dropdown and current item provided by history feature,\nremoves the selected item from this instance's history.","!type":"fn(oEvent: jQuery.Event)","!category":"function","!static":false},"onsapright":{"!description":"Move the cursor one step to the right (and adapt selection)","!type":"fn(oEvent: jQuery.Event)","!category":"function","!static":false},"setSearchHelpAdditionalText":{"!description":"Overwrite of Setter for property <code>searchHelpAdditionalText<\/code>.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn(sSearchHelpAdditionalText: String) -> sap.ui.commons.DropdownBox","!category":"function","!static":false},"setMaxHistoryItems":{"!description":"Sets a new value for property <code>maxHistoryItems<\/code>.\n\nMaximum number of history items in the list.\n\nIf 0 no history is displayed or stored. The history is locally stored on the client.\nTherefore do not activate this feature when this control handles confidential data.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(iMaxHistoryItems: Number) -> sap.ui.commons.DropdownBox","!category":"function","!static":false},"fireSearchHelp":{"!description":"Fires event <code>searchHelp<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>value<\/code> of type <code>string<\/code>The current value of the DropdownBox.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.DropdownBox","!category":"function","!static":false},"!module":"sap/ui/commons/DropdownBox","setSearchHelpIcon":{"!description":"Overwrite of Setter for property <code>searchHelpIcon<\/code>.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn(sSearchHelpIcon: sap.ui.core.URI) -> sap.ui.commons.DropdownBox","!category":"function","!static":false},"onsapleft":{"!description":"Move the cursor one step to the left (and adapt selection)","!type":"fn(oEvent: jQuery.Event)","!category":"function","!static":false},"getSearchHelpEnabled":{"!description":"Gets current value of property <code>searchHelpEnabled<\/code>.\n\nWhether the DropdownBox's search help should be enabled.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!category":"class","clearHistory":{"!description":"Using this method the history of the DropdownBox can be cleared.\nThis might be necessary if the items of the DropdownBox have changed. Otherwise invalid items may appear in the history.","!type":"fn()","!category":"function","!static":false},"setSearchHelpEnabled":{"!description":"Overwrite of Setter for property <code>searchHelpEnabled<\/code>.\nThis method accepts additional parameter to be compatiple with the\nprevious functionality\n\nDefault value is <code>false<\/code>","!type":"fn(bEnabled: Boolean, sText: String, sAdditionalText: String, sIcon: String) -> sap.ui.commons.DropdownBox","!category":"function","!static":false},"attachSearchHelp":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>searchHelp<\/code> event of this <code>sap.ui.commons.DropdownBox<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.DropdownBox<\/code> itself.\n\nEvent fired whenever the configured searchHelpItem is clicked or the searchHelpItem is configured and F4 key is pressed.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.DropdownBox","!category":"function","!static":false},"detachSearchHelp":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>searchHelp<\/code> event of this <code>sap.ui.commons.DropdownBox<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.DropdownBox","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.DropdownBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.ComboBox.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"onkeyup":{"!description":"Handle keyup event\nThis must only be considered if it is from Backspace-key in IE or after paste.\nIn case there is a keyup with a tab this results from being entered via tabbing and can be ignored, too.","!type":"fn(oEvent: jQuery.Event)","!category":"function","!static":false},"onkeydown":{"!description":"Handle keydown event","!type":"fn(oEvent: jQuery.Event)","!category":"function","!static":false},"onkeypress":{"!description":"Handle keypress event","!type":"fn(oEvent: jQuery.Event)","!category":"function","!static":false},"!constructorDescription":"Constructor for a new DropdownBox.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSearchHelpEnabled searchHelpEnabled} : boolean (default: false)<\/li>\n<li>{@link #getSearchHelpText searchHelpText} : string<\/li>\n<li>{@link #getSearchHelpAdditionalText searchHelpAdditionalText} : string<\/li>\n<li>{@link #getSearchHelpIcon searchHelpIcon} : sap.ui.core.URI<\/li>\n<li>{@link #getMaxHistoryItems maxHistoryItems} : int (default: 0)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:searchHelp searchHelp} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.commons.ComboBox#constructor sap.ui.commons.ComboBox}\ncan be used as well.","getSearchHelpAdditionalText":{"!description":"Gets current value of property <code>searchHelpAdditionalText<\/code>.\n\n(optional) The additional Text to use for the search help entry.","!type":"fn() -> String","!category":"function","!static":false},"setSearchHelpText":{"!description":"Overwrite of Setter for property <code>searchHelpText<\/code>.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn(sSearchHelpText: String) -> sap.ui.commons.DropdownBox","!category":"function","!static":false},"getSearchHelpText":{"!description":"Gets current value of property <code>searchHelpText<\/code>.\n\n(optional) The text to use for the search help entry.","!type":"fn() -> String","!category":"function","!static":false},"onsaphome":{"!description":"Handle pseudo event onsaphome","!type":"fn(oEvent: jQuery.Event)","!category":"function","!static":false},"getSearchHelpIcon":{"!description":"Gets current value of property <code>searchHelpIcon<\/code>.\n\n(optional) The URI of the icon to use for the search help entry.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.ComboBox<\/code> control.<br>The control provides a field that allows end users to an entry out of a list of pre-defined items.\nThe choosable items can be provided in the form of a complete <code>ListBox<\/code>, single <code>ListItems<\/code>.","onselect":{"!description":"Handle the select event happening in the DropdownBox","!type":"fn(oEvent: jQuery.Event)","!category":"function","!static":false},"getTooltip_AsString":{"!description":"Extends the method inherited from sap.ui.core.Element by providing information on Search Help access (if needed)","!type":"fn() -> String","!category":"function","!static":false},"onpaste":{"!description":"Handle paste event","!type":"fn(oEvent: jQuery.Event)","!category":"function","!static":false},"onclick":{"!description":"Handle the click event happening in the DropdownBox","!type":"fn(oEvent: jQuery.Event)","!category":"function","!static":false},"onsapshow":{"!description":"Handle sapshow pseudo events on the control","!type":"fn(oEvent: jQuery.Event)","!category":"function","!static":false},"onfocusin":{"!description":"Handle focusin event\nEnsures the text gets selected when focus gets into the field","!type":"fn(oEvent: jQuery.Event)","!category":"function","!static":false},"getMaxHistoryItems":{"!description":"Gets current value of property <code>maxHistoryItems<\/code>.\n\nMaximum number of history items in the list.\n\nIf 0 no history is displayed or stored. The history is locally stored on the client.\nTherefore do not activate this feature when this control handles confidential data.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.DropdownBox.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.commons.ComboBox"},"sap.ui.commons.layout.BorderLayoutAreaTypes":{"center":{"!description":"Value to identify the center area.","!type":"String","!category":"enum"},"!description":"The type (=position) of a BorderLayoutArea","bottom":{"!description":"Value to identify the bottom area.","!type":"String","!category":"enum"},"!category":"static class","!module":"sap/ui/commons/library","end":{"!description":"Value to identify the end area.","!type":"String","!category":"enum"},"top":{"!description":"Value to identify the top area.","!type":"String","!category":"enum"},"begin":{"!description":"Value to identify the begin area.","!type":"String","!category":"enum"}},"sap.ui.commons.Title":{"setLevel":{"!description":"Setter for property <code>level<\/code>.\n\nDefault value is <code>Auto<\/code>","!type":"fn(oLevel: sap.ui.commons.TitleLevel) -> sap.ui.commons.Title","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.core library. Please use this one.<br>Represents a title element that can be used for aggregation with other controls","extend":{"!description":"Creates a new subclass of class sap.ui.commons.Title with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Title.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!category":"class","!constructorDescription":"Constructor for a new Title.","getLevel":{"!description":"Getter for property <code>level<\/code>.\nDefines the level of the title. If set to auto the level of the title is chosen by the control rendering the title.\n\nCurrently not all controls using the Title.control supporting this property.\n\nDefault value is <code>Auto<\/code>","!type":"fn() -> sap.ui.commons.TitleLevel","!category":"function","!static":false},"!module":"sap/ui/commons/Title","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Title.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Title"},"sap.ui.commons.Image_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Image with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Image"},"sap.ui.commons.ProgressIndicator":{"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nDetermines whether the control is enabled or not.\nDisabled controls have different colors, and can not be focused.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getPercentValue":{"!description":"Gets current value of property <code>percentValue<\/code>.\n\nDetermines the numerical value for the displayed length of the progress bar.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.ProgressIndicator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"getBarColor":{"!description":"Gets current value of property <code>barColor<\/code>.\n\nDetermines the color of the bar which visualizes the progress.\nPossible values defined in the sap.ui.core.BarColor enumeration are the following:\nCRITICAL (yellow), NEGATIVE (red), POSITIVE (green), NEUTRAL (blue) (default value).\n\nDefault value is <code>NEUTRAL<\/code>.","!type":"fn() -> sap.ui.core.BarColor","!category":"function","!static":false},"setBarColor":{"!description":"Sets a new value for property <code>barColor<\/code>.\n\nDetermines the color of the bar which visualizes the progress.\nPossible values defined in the sap.ui.core.BarColor enumeration are the following:\nCRITICAL (yellow), NEGATIVE (red), POSITIVE (green), NEUTRAL (blue) (default value).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>NEUTRAL<\/code>.","!type":"fn(sBarColor: sap.ui.core.BarColor) -> sap.ui.commons.ProgressIndicator","!category":"function","!static":false},"setDisplayValue":{"!description":"Sets a new value for property <code>displayValue<\/code>.\n\nDetermines the text value that will be displayed in the bar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0%<\/code>.","!type":"fn(sDisplayValue: String) -> sap.ui.commons.ProgressIndicator","!category":"function","!static":false},"!constructorDescription":"Constructor for a new ProgressIndicator.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getBarColor barColor} : sap.ui.core.BarColor (default: NEUTRAL)<\/li>\n<li>{@link #getDisplayValue displayValue} : string (default: 0%)<\/li>\n<li>{@link #getPercentValue percentValue} : int (default: 0)<\/li>\n<li>{@link #getShowValue showValue} : boolean (default: true)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/commons/ProgressIndicator","setShowValue":{"!description":"Sets a new value for property <code>showValue<\/code>.\n\nDetermines whether the percent value shall be rendered inside the bar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowValue: Boolean) -> sap.ui.commons.ProgressIndicator","!category":"function","!static":false},"getShowValue":{"!description":"Gets current value of property <code>showValue<\/code>.\n\nDetermines whether the percent value shall be rendered inside the bar.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.ProgressIndicator<\/code> control.<br>Shows the progress of a process in a graphical way.\nThe indicator can be displayed with or without numerical values.\nThe filling can be displayed in color only, or additionally with the percentage rate.\nThe indicator status can be interactive.","setPercentValue":{"!description":"Sets the new percent value which the ProgressIndicator should display.\nA new rendering is not necessary, only the bar has to be moved.","!type":"fn(iPercentValue: Number) -> sap.ui.commons.ProgressIndicator","!category":"function","!static":false},"!category":"class","setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nDetermines whether the control is enabled or not.\nDisabled controls have different colors, and can not be focused.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.ProgressIndicator","!category":"function","!static":false},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDetermines the width of the control.\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getDisplayValue":{"!description":"Gets current value of property <code>displayValue<\/code>.\n\nDetermines the text value that will be displayed in the bar.\n\nDefault value is <code>0%<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nDetermines the width of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.ProgressIndicator","!category":"function","!static":false},"!proto":"sap.ui.core.Control","getAccessibilityInfo":{"!type":"fn()","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.ProgressIndicator.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.MessageBox.Action":{"YES":{"!description":"Adds a \"Yes\" button to the message box.","!type":"String","!category":"enum"},"OK":{"!description":"Adds an \"Ok\" button to the message box.","!type":"String","!category":"enum"},"!description":"Enumeration of supported actions in a MessageBox.\n\nEach action is represented as a button in the message box. The values of this enumeration are used for both,\nspecifying the set of allowed actions as well as reporting back the user choice.","IGNORE":{"!description":"Adds an \"Ignore\" button to the message box.","!type":"String","!category":"enum"},"CLOSE":{"!description":"Adds a \"Close\" button to the message box.","!type":"String","!category":"enum"},"ABORT":{"!description":"Adds an \"Abort\" button to the message box.","!type":"String","!category":"enum"},"!category":"static class","RETRY":{"!description":"Adds a \"Retry\" button to the message box.","!type":"String","!category":"enum"},"!module":"sap/ui/commons/MessageBox","NO":{"!description":"Adds a \"No\" button to the message box.","!type":"String","!category":"enum"},"CANCEL":{"!description":"Adds a \"Cancel\" button to the message box.","!type":"String","!category":"enum"}},"sap.ui.commons.form.GridElementData":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 moved to sap.ui.layout library. Please use this one.<br>The grid specific layout data for FormElement fields.\nThe width property of the elements is ignored since the width is defined by grid cells.","extend":{"!description":"Creates a new subclass of class sap.ui.commons.form.GridElementData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.form.GridElementData.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!category":"class","!constructorDescription":"Constructor for a new form/GridElementData.","!module":"sap/ui/commons/form/GridElementData","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.form.GridElementData.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.layout.form.GridElementData"},"sap.ui.commons.AccordionSection":{"fireScroll":{"!description":"Fires event <code>scroll<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>left<\/code> of type <code>int<\/code>Horizontal scroll position<\/li>\n<li><code>top<\/code> of type <code>int<\/code>Vertical scroll position<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.AccordionSection","!category":"function","!static":false},"setMaxHeight":{"!description":"Sets a new value for property <code>maxHeight<\/code>.\n\nWhen the section content exceeds maxHeight, a vertical scroll bar appears.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sMaxHeight: sap.ui.core.CSSSize) -> sap.ui.commons.AccordionSection","!category":"function","!static":false},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nIt is required that the used theme supports the control.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.ui.core.Control) -> Number","!category":"function","!static":false},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"!module":"sap/ui/commons/AccordionSection","destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!type":"fn() -> sap.ui.commons.AccordionSection","!category":"function","!static":false},"!category":"class","attachScroll":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>scroll<\/code> event of this <code>sap.ui.commons.AccordionSection<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.AccordionSection<\/code> itself.\n\nEvent is fired when the user scrolls the panel","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.AccordionSection","!category":"function","!static":false},"setEnabled":{"!description":"Property setter for the \"enabled\" state","!type":"fn(bEnabled: Boolean) -> sap.ui.commons.AccordionSection","!category":"function","!static":false},"getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nText for the section header","!type":"fn() -> String","!category":"function","!static":false},"addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.commons.AccordionSection","!category":"function","!static":false},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nAggregates the controls that are contained in the panel. The control layout is browser-dependent.\nFor a stable content layout, use a layout control as direct single child.\nWhen the panel dimensions are set, the child control may have width and height of 100%;\nwhen the panel dimensions are not set, the child defines the panel size.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.AccordionSection with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"detachScroll":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>scroll<\/code> event of this <code>sap.ui.commons.AccordionSection<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.AccordionSection","!category":"function","!static":false},"!constructorDescription":"Constructor for a new AccordionSection.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMaxHeight maxHeight} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getCollapsed collapsed} : boolean (default: false)<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:scroll scroll} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Represents a panel which is a container for other controls. The container does not have any layout function.","insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.commons.AccordionSection","!category":"function","!static":false},"setCollapsed":{"!description":"Property setter for the \"collapsed\" state","!type":"fn(bCollapsed: Boolean) -> sap.ui.commons.AccordionSection","!category":"function","!static":false},"getCollapsed":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Use Accordion's \"openedSectionsId\" property<br>Gets current value of property <code>collapsed<\/code>.\n\nIt is recommended to adjust the settings for the width when the section is set to 'collapsed'.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getMaxHeight":{"!description":"Gets current value of property <code>maxHeight<\/code>.\n\nWhen the section content exceeds maxHeight, a vertical scroll bar appears.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nText for the section header\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitle: String) -> sap.ui.commons.AccordionSection","!category":"function","!static":false},"!proto":"sap.ui.core.Element","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.AccordionSection.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.layout.MatrixLayoutRow_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.layout.MatrixLayoutRow with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.layout.MatrixLayoutRow"},"sap.ui.commons.Callout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Callout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.CalloutBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.Callout"},"sap.ui.commons.Accordion":{"fireSectionsReorder":{"!description":"Fires event <code>sectionsReorder<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>movedSectionId<\/code> of type <code>string<\/code>ID of the moved section<\/li>\n<li><code>newIndex<\/code> of type <code>int<\/code>New index of the moved section<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.Accordion","!category":"function","!static":false},"openSection":{"!description":"Opens a section","!type":"fn(sSectionId: String)","!category":"function","!static":false},"insertSection":{"!description":"Inserts a section into the aggregation <code>sections<\/code>.","!type":"fn(oSection: sap.ui.commons.AccordionSection, iIndex: Number) -> sap.ui.commons.Accordion","!category":"function","!static":false},"attachSectionsReorder":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>sectionsReorder<\/code> event of this <code>sap.ui.commons.Accordion<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.Accordion<\/code> itself.\n\nEvent is triggered when the user changes the position of a section.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.Accordion","!category":"function","!static":false},"!module":"sap/ui/commons/Accordion","removeSection":{"!description":"Removes a section from the aggregation <code>sections<\/code>.","!type":"fn(vSection: Number | String | sap.ui.commons.AccordionSection) -> sap.ui.commons.AccordionSection","!category":"function","!static":false},"fireSectionOpen":{"!description":"Fires event <code>sectionOpen<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>openSectionId<\/code> of type <code>string<\/code>ID of the opened section<\/li>\n<li><code>closeSectionIds<\/code> of type <code>string[]<\/code>IDs of the sections to be closed. Can be initial in the case of no previously opened section.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.Accordion","!category":"function","!static":false},"detachSectionsReorder":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>sectionsReorder<\/code> event of this <code>sap.ui.commons.Accordion<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.Accordion","!category":"function","!static":false},"indexOfSection":{"!description":"Checks for the provided <code>sap.ui.commons.AccordionSection<\/code> in the aggregation <code>sections<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oSection: sap.ui.commons.AccordionSection) -> Number","!category":"function","!static":false},"addSection":{"!description":"Adds some section to the aggregation <code>sections<\/code>.","!type":"fn(oSection: sap.ui.commons.AccordionSection) -> sap.ui.commons.Accordion","!category":"function","!static":false},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nWhen the specified width is less than the width of a section content, a horizontal scroll bar is provided.\n\nDefault value is <code>200px<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nWhen the specified width is less than the width of a section content, a horizontal scroll bar is provided.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>200px<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.commons.Accordion","!category":"function","!static":false},"closeSection":{"!description":"Closes a section and opens the default one","!type":"fn(sSectionId: String)","!category":"function","!static":false},"attachSectionClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>sectionClose<\/code> event of this <code>sap.ui.commons.Accordion<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.Accordion<\/code> itself.\n\nEvent is triggered when the user closes a section.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.Accordion","!category":"function","!static":false},"setOpenedSectionsId":{"!description":"Redefinition of the method to add additional handling","!type":"fn(sOpenedSectionsId: String) -> sap.ui.commons.Accordion","!category":"function","!static":false},"attachSectionOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>sectionOpen<\/code> event of this <code>sap.ui.commons.Accordion<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.Accordion<\/code> itself.\n\nEvent is triggered when the user opens a section.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.Accordion","!category":"function","!static":false},"destroySections":{"!description":"Destroys all the sections in the aggregation <code>sections<\/code>.","!type":"fn() -> sap.ui.commons.Accordion","!category":"function","!static":false},"detachSectionOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>sectionOpen<\/code> event of this <code>sap.ui.commons.Accordion<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.Accordion","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.Accordion with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"getOpenedSectionsId":{"!description":"Gets current value of property <code>openedSectionsId<\/code>.\n\nSection IDs that are opened by default at application start","!type":"fn() -> String","!category":"function","!static":false},"!constructorDescription":"Constructor for a new Accordion.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 200px)<\/li>\n<li>{@link #getOpenedSectionsId openedSectionsId} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSections sections} : sap.ui.commons.AccordionSection[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:sectionOpen sectionOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:sectionClose sectionClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:sectionsReorder sectionsReorder} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 undefined<br>Contains N sections, acting as containers for any library control","getSections":{"!description":"Gets content of aggregation <code>sections<\/code>.\n\nEmpty container used to display any library control","!type":"fn() -> [sap.ui.commons.AccordionSection]","!category":"function","!static":false},"detachSectionClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>sectionClose<\/code> event of this <code>sap.ui.commons.Accordion<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.Accordion","!category":"function","!static":false},"removeAllSections":{"!description":"Removes all the controls from the aggregation <code>sections<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.AccordionSection]","!category":"function","!static":false},"fireSectionClose":{"!description":"Fires event <code>sectionClose<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>closeSectionId<\/code> of type <code>string<\/code>ID of the closed section<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.Accordion","!category":"function","!static":false},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.Accordion.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.commons.MenuButton":{"setDockMenu":{"!description":"Sets a new value for property <code>dockMenu<\/code>.\n\nThe position / edge (see sap.ui.core.Popup.Dock) of the menu which is docked to the button. Default is 'begin top'.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sDockMenu: String) -> sap.ui.commons.MenuButton","!category":"function","!static":false},"setDockButton":{"!description":"Sets a new value for property <code>dockButton<\/code>.\n\nThe position / edge (see sap.ui.core.Popup.Dock) of the button where the menu is docked. Default is 'begin bottom'.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sDockButton: String) -> sap.ui.commons.MenuButton","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.commons.MenuButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.Button.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"fireItemSelected":{"!description":"Fires event <code>itemSelected<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>itemId<\/code> of type <code>string<\/code>The ID of the selected item<\/li>\n<li><code>item<\/code> of type <code>sap.ui.unified.MenuItemBase<\/code>The selected item<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.commons.MenuButton","!category":"function","!static":false},"firePress":{"!description":"Fire event press to attached listeners.","!type":"fn(mArguments?: Map) -> sap.ui.commons.MenuButton","!category":"function","!static":false},"setMenu":{"!description":"Setter for the aggregated <code>menu<\/code>.","!type":"fn(oMenu: sap.ui.unified.Menu) -> sap.ui.commons.MenuButton","!category":"function","!static":false},"!constructorDescription":"Constructor for a new MenuButton.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDockButton dockButton} : string<\/li>\n<li>{@link #getDockMenu dockMenu} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getMenu menu} : sap.ui.unified.Menu (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:itemSelected itemSelected} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.commons.Button#constructor sap.ui.commons.Button}\ncan be used as well.","!module":"sap/ui/commons/MenuButton","attachPress":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'press' event of this <code>sap.ui.commons.MenuButton<\/code>.<br/>\n\nEvent is fired when an item from the menu was selected.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.MenuButton","!category":"function","!static":false},"attachItemSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>itemSelected<\/code> event of this <code>sap.ui.commons.MenuButton<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.commons.MenuButton<\/code> itself.\n\nEvent that is fired when a menu item is selected by the user","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.commons.MenuButton","!category":"function","!static":false},"getDockButton":{"!description":"Gets current value of property <code>dockButton<\/code>.\n\nThe position / edge (see sap.ui.core.Popup.Dock) of the button where the menu is docked. Default is 'begin bottom'.","!type":"fn() -> String","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 Instead, use the <code>sap.m.MenuButton<\/code> control.<br>Common button control that opens a menu when clicked by the user. The control provides an API for configuring the docking position\nof the menu.","destroyMenu":{"!description":"Destroys the menu in the aggregation\nnamed <code>menu<\/code>.","!type":"fn() -> sap.ui.commons.MenuButton","!category":"function","!static":false},"!category":"class","getMenu":{"!description":"Gets content of aggregation <code>menu<\/code>.\n\nMenu that shall be opened when the button is clicked","!type":"fn() -> sap.ui.unified.Menu","!category":"function","!static":false},"detachItemSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>itemSelected<\/code> event of this <code>sap.ui.commons.MenuButton<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.MenuButton","!category":"function","!static":false},"detachPress":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'press' event of this <code>sap.ui.commons.MenuButton<\/code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.commons.MenuButton","!category":"function","!static":false},"getDockMenu":{"!description":"Gets current value of property <code>dockMenu<\/code>.\n\nThe position / edge (see sap.ui.core.Popup.Dock) of the menu which is docked to the button. Default is 'begin top'.","!type":"fn() -> String","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.commons.MenuButton.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.commons.Button"},"sap.ui.commons.HorizontalDivider_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.commons.HorizontalDivider with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.commons.HorizontalDivider"}},"!name":"sap.ui.commons","!version":"1.10.0"}