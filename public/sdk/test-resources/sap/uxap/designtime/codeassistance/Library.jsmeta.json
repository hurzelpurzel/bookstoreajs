{"!define":{"sap.uxap.HierarchicalSelect":{"!description":"A select that display items on 2 level of hierarchy.\nIf a provided item has a custom data named \"secondLevel\", then it will be displayed as a second level, otherwise it would be displayed as a first level.","extend":{"!description":"Creates a new subclass of class sap.uxap.HierarchicalSelect with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Select.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"getUpperCase":{"!description":"Gets current value of property <code>upperCase<\/code>.\n\nDetermines whether the HierarchicalSelect items are displayed in upper case.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!category":"class","!constructorDescription":"Constructor for a new HierarchicalSelect.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getUpperCase upperCase} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Select#constructor sap.m.Select}\ncan be used as well.","!module":"sap/uxap/HierarchicalSelect","setUpperCase":{"!description":"Sets a new value for property <code>upperCase<\/code>.\n\nDetermines whether the HierarchicalSelect items are displayed in upper case.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bUpperCase: Boolean) -> sap.uxap.HierarchicalSelect","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.uxap.HierarchicalSelect.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.m.Select"},"sap.uxap.ObjectPageSubSection":{"destroyMoreBlocks":{"!description":"Destroys all the moreBlocks in the aggregation <code>moreBlocks<\/code>.","!type":"fn() -> sap.uxap.ObjectPageSubSection","!category":"function","!static":false},"!module":"sap/uxap/ObjectPageSubSection","removeAllActions":{"!description":"Removes all the controls from the aggregation <code>actions<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"!category":"class","indexOfMoreBlock":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>moreBlocks<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oMoreBlock: sap.ui.core.Control) -> Number","!category":"function","!static":false},"removeBlock":{"!description":"Removes a block from the aggregation <code>blocks<\/code>.","!type":"fn(vBlock: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"indexOfAction":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>actions<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oAction: sap.ui.core.Control) -> Number","!category":"function","!static":false},"destroyBlocks":{"!description":"Destroys all the blocks in the aggregation <code>blocks<\/code>.","!type":"fn() -> sap.uxap.ObjectPageSubSection","!category":"function","!static":false},"removeAllBlocks":{"!description":"Removes all the controls from the aggregation <code>blocks<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"indexOfBlock":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>blocks<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oBlock: sap.ui.core.Control) -> Number","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageSubSection with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.uxap.ObjectPageSectionBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"getMoreBlocks":{"!description":"Gets content of aggregation <code>moreBlocks<\/code>.\n\nAdditional controls to display when the Show more / See all / (...) button is pressed","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"getActions":{"!description":"Gets content of aggregation <code>actions<\/code>.\n\nActions available for this Subsection","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"getBlocks":{"!description":"Gets content of aggregation <code>blocks<\/code>.\n\nControls to be displayed in the subsection","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"setMode":{"!description":"Sets a new value for property <code>mode<\/code>.\n\nA mode property that will be passed to the controls in the blocks and moreBlocks aggregations. Only relevant if these aggregations use Object page blocks.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Collapsed<\/code>.","!type":"fn(sMode: sap.uxap.ObjectPageSubSectionMode) -> sap.uxap.ObjectPageSubSection","!category":"function","!static":false},"!constructorDescription":"Constructor for a new ObjectPageSubSection.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMode mode} : sap.uxap.ObjectPageSubSectionMode (default: Collapsed)<\/li>\n<li>{@link #getTitleUppercase titleUppercase} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getBlocks blocks} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getMoreBlocks moreBlocks} : sap.ui.core.Control[]<\/li>\n<li>{@link #getActions actions} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.uxap.ObjectPageSectionBase#constructor sap.uxap.ObjectPageSectionBase}\ncan be used as well.","insertAction":{"!description":"Inserts a action into the aggregation <code>actions<\/code>.","!type":"fn(oAction: sap.ui.core.Control, iIndex: Number) -> sap.uxap.ObjectPageSubSection","!category":"function","!static":false},"getTitleUppercase":{"!description":"Gets current value of property <code>titleUppercase<\/code>.\n\nDetermines whether the Subsection title is displayed in upper case.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setTitleUppercase":{"!description":"Sets a new value for property <code>titleUppercase<\/code>.\n\nDetermines whether the Subsection title is displayed in upper case.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bTitleUppercase: Boolean) -> sap.uxap.ObjectPageSubSection","!category":"function","!static":false},"removeMoreBlock":{"!description":"Removes a moreBlock from the aggregation <code>moreBlocks<\/code>.","!type":"fn(vMoreBlock: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"!description":"\nAn ObjectPageSubSection is the second-level information container of an Object page and may only be used within an Object page section.\nSubsections may display primary information in the so called blocks aggregation (always visible)\nand not-so-important information in the moreBlocks aggregation, whose content is initially hidden, but may be accessed via a See more (...) button.\nDisclaimer: This control is intended to be used only as part of the Object page layout","destroyActions":{"!description":"Destroys all the actions in the aggregation <code>actions<\/code>.","!type":"fn() -> sap.uxap.ObjectPageSubSection","!category":"function","!static":false},"removeAllMoreBlocks":{"!description":"Removes all the controls from the aggregation <code>moreBlocks<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"addBlock":{"!description":"Adds some block to the aggregation <code>blocks<\/code>.","!type":"fn(oBlock: sap.ui.core.Control) -> sap.uxap.ObjectPageSubSection","!category":"function","!static":false},"addMoreBlock":{"!description":"Adds some moreBlock to the aggregation <code>moreBlocks<\/code>.","!type":"fn(oMoreBlock: sap.ui.core.Control) -> sap.uxap.ObjectPageSubSection","!category":"function","!static":false},"getMode":{"!description":"Gets current value of property <code>mode<\/code>.\n\nA mode property that will be passed to the controls in the blocks and moreBlocks aggregations. Only relevant if these aggregations use Object page blocks.\n\nDefault value is <code>Collapsed<\/code>.","!type":"fn() -> sap.uxap.ObjectPageSubSectionMode","!category":"function","!static":false},"insertBlock":{"!description":"Inserts a block into the aggregation <code>blocks<\/code>.","!type":"fn(oBlock: sap.ui.core.Control, iIndex: Number) -> sap.uxap.ObjectPageSubSection","!category":"function","!static":false},"addAction":{"!description":"Adds some action to the aggregation <code>actions<\/code>.","!type":"fn(oAction: sap.ui.core.Control) -> sap.uxap.ObjectPageSubSection","!category":"function","!static":false},"removeAction":{"!description":"Removes a action from the aggregation <code>actions<\/code>.","!type":"fn(vAction: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"insertMoreBlock":{"!description":"Inserts a moreBlock into the aggregation <code>moreBlocks<\/code>.","!type":"fn(oMoreBlock: sap.ui.core.Control, iIndex: Number) -> sap.uxap.ObjectPageSubSection","!category":"function","!static":false},"!proto":"sap.uxap.ObjectPageSectionBase","getMetadata":{"!description":"Returns a metadata object for class sap.uxap.ObjectPageSubSection.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.uxap.AnchorBar_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.AnchorBar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Toolbar.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.AnchorBar"},"sap.uxap.ObjectPageLazyLoader_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageLazyLoader with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.ObjectPageLazyLoader"},"sap.uxap.ObjectPageSection":{"getSelectedSubSection":{"!description":"ID of the element which is the current target of the association <code>selectedSubSection<\/code>, or <code>null<\/code>.","!type":"fn() -> sap.uxap.ObjectPageSubSection","!category":"function","!static":false},"destroySubSections":{"!description":"Destroys all the subSections in the aggregation <code>subSections<\/code>.","!type":"fn() -> sap.uxap.ObjectPageSection","!category":"function","!static":false},"insertSubSection":{"!description":"Inserts a subSection into the aggregation <code>subSections<\/code>.","!type":"fn(oSubSection: sap.uxap.ObjectPageSubSection, iIndex: Number) -> sap.uxap.ObjectPageSection","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageSection with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.uxap.ObjectPageSectionBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"getSubSections":{"!description":"Gets content of aggregation <code>subSections<\/code>.\n\nThe list of Subsections.","!type":"fn() -> [sap.uxap.ObjectPageSubSection]","!category":"function","!static":false},"!constructorDescription":"Constructor for a new ObjectPageSection.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowTitle showTitle} : boolean (default: true)<\/li>\n<li>{@link #getTitleUppercase titleUppercase} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSubSections subSections} : sap.uxap.ObjectPageSubSection[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.uxap.ObjectPageSectionBase#constructor sap.uxap.ObjectPageSectionBase}\ncan be used as well.","!module":"sap/uxap/ObjectPageSection","setShowTitle":{"!description":"Sets a new value for property <code>showTitle<\/code>.\n\nDetermines whether to display the Section title or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowTitle: Boolean) -> sap.uxap.ObjectPageSection","!category":"function","!static":false},"getTitleUppercase":{"!description":"Gets current value of property <code>titleUppercase<\/code>.\n\nDetermines whether the Section title is displayed in upper case.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"removeAllSubSections":{"!description":"Removes all the controls from the aggregation <code>subSections<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.uxap.ObjectPageSubSection]","!category":"function","!static":false},"setTitleUppercase":{"!description":"Sets a new value for property <code>titleUppercase<\/code>.\n\nDetermines whether the Section title is displayed in upper case.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bTitleUppercase: Boolean) -> sap.uxap.ObjectPageSection","!category":"function","!static":false},"removeSubSection":{"!description":"Removes a subSection from the aggregation <code>subSections<\/code>.","!type":"fn(vSubSection: Number | String | sap.uxap.ObjectPageSubSection) -> sap.uxap.ObjectPageSubSection","!category":"function","!static":false},"!description":"\nAn ObjectPageSection is the top-level information container of an Object page. Its purpose is to aggregate Subsections.\nDisclaimer: This control is intended to be used only as part of the Object page layout","setSelectedSubSection":{"!description":"Sets the associated <code>selectedSubSection<\/code>.","!type":"fn(oSelectedSubSection: sap.uxap.ObjectPageSubSection) -> sap.uxap.ObjectPageSection","!category":"function","!static":false},"!category":"class","getShowTitle":{"!description":"Gets current value of property <code>showTitle<\/code>.\n\nDetermines whether to display the Section title or not.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"indexOfSubSection":{"!description":"Checks for the provided <code>sap.uxap.ObjectPageSubSection<\/code> in the aggregation <code>subSections<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oSubSection: sap.uxap.ObjectPageSubSection) -> Number","!category":"function","!static":false},"addSubSection":{"!description":"Adds some subSection to the aggregation <code>subSections<\/code>.","!type":"fn(oSubSection: sap.uxap.ObjectPageSubSection) -> sap.uxap.ObjectPageSection","!category":"function","!static":false},"!proto":"sap.uxap.ObjectPageSectionBase","getMetadata":{"!description":"Returns a metadata object for class sap.uxap.ObjectPageSection.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.uxap.ObjectPageSubSectionLayout":{"TitleOnLeft":{"!description":"TitleOnLeft: title and actions on the left, inside the block area.","!type":"String","!category":"enum"},"!description":"Used by the ObjectPagSubSection control to define which layout to apply.","!category":"static class","!module":"sap/uxap/library","TitleOnTop":{"!description":"TitleOnTop: title and actions on top of the block area.","!type":"String","!category":"enum"}},"sap.uxap.ObjectPageHeaderContent_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageHeaderContent with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.ObjectPageHeaderContent"},"sap.uxap.ObjectPageHeaderLayoutData":{"setVisibleM":{"!description":"Sets a new value for property <code>visibleM<\/code>.\n\nIf this property is set the control will be visible (or not) in a medium sized layout.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bVisibleM: Boolean) -> sap.uxap.ObjectPageHeaderLayoutData","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageHeaderLayoutData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.LayoutData.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"getShowSeparatorAfter":{"!description":"Gets current value of property <code>showSeparatorAfter<\/code>.\n\nIf this property is set the control will display a separator after it.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setVisibleL":{"!description":"Sets a new value for property <code>visibleL<\/code>.\n\nIf this property is set the control will be visible (or not) in a large sized layout.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bVisibleL: Boolean) -> sap.uxap.ObjectPageHeaderLayoutData","!category":"function","!static":false},"!constructorDescription":"Constructor for a new ObjectPageHeaderLayoutData.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVisibleS visibleS} : boolean (default: true)<\/li>\n<li>{@link #getVisibleM visibleM} : boolean (default: true)<\/li>\n<li>{@link #getVisibleL visibleL} : boolean (default: true)<\/li>\n<li>{@link #getShowSeparatorBefore showSeparatorBefore} : boolean (default: false)<\/li>\n<li>{@link #getShowSeparatorAfter showSeparatorAfter} : boolean (default: false)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: auto)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.LayoutData#constructor sap.ui.core.LayoutData}\ncan be used as well.","!module":"sap/uxap/ObjectPageHeaderLayoutData","getVisibleL":{"!description":"Gets current value of property <code>visibleL<\/code>.\n\nIf this property is set the control will be visible (or not) in a large sized layout.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getShowSeparatorBefore":{"!description":"Gets current value of property <code>showSeparatorBefore<\/code>.\n\nIf this property is set the control will display a separator before it.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getVisibleM":{"!description":"Gets current value of property <code>visibleM<\/code>.\n\nIf this property is set the control will be visible (or not) in a medium sized layout.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!description":"This is a LayoutData Element that can be added to a control if this control is used within an ObjectPage headerContent aggregation","setShowSeparatorAfter":{"!description":"Sets a new value for property <code>showSeparatorAfter<\/code>.\n\nIf this property is set the control will display a separator after it.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bShowSeparatorAfter: Boolean) -> sap.uxap.ObjectPageHeaderLayoutData","!category":"function","!static":false},"getVisibleS":{"!description":"Gets current value of property <code>visibleS<\/code>.\n\nIf this property is set the control will be visible (or not) in a small sized layout.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nIf this property is set the control will take the provided size.\n\nDefault value is <code>auto<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setVisibleS":{"!description":"Sets a new value for property <code>visibleS<\/code>.\n\nIf this property is set the control will be visible (or not) in a small sized layout.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bVisibleS: Boolean) -> sap.uxap.ObjectPageHeaderLayoutData","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nIf this property is set the control will take the provided size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>auto<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.uxap.ObjectPageHeaderLayoutData","!category":"function","!static":false},"setShowSeparatorBefore":{"!description":"Sets a new value for property <code>showSeparatorBefore<\/code>.\n\nIf this property is set the control will display a separator before it.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bShowSeparatorBefore: Boolean) -> sap.uxap.ObjectPageHeaderLayoutData","!category":"function","!static":false},"!proto":"sap.ui.core.LayoutData","getMetadata":{"!description":"Returns a metadata object for class sap.uxap.ObjectPageHeaderLayoutData.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.uxap.HierarchicalSelect_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.HierarchicalSelect with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Select.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.HierarchicalSelect"},"sap.uxap.BlockBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.BlockBase with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.BlockBase"},"sap.uxap.ObjectPageHeaderPictureShape":{"!description":"Used by the ObjectPageHeader control to define which shape to use for the image.","Square":{"!description":"Square shape for the images in the ObjectPageHeader.","!type":"String","!category":"enum"},"!category":"static class","!module":"sap/uxap/library","Circle":{"!description":"Circle shape for the images in the ObjectPageHeader.","!type":"String","!category":"enum"}},"sap.uxap.ObjectPageHeaderContent":{"addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control) -> sap.uxap.ObjectPageHeaderContent","!category":"function","!static":false},"removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nThe list of Objects of type sap.ui.core.Control.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageHeaderContent with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.ui.core.Control) -> Number","!category":"function","!static":false},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"!constructorDescription":"Constructor for a new ObjectPageHeaderContent.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getContentDesign contentDesign} : sap.uxap.ObjectPageHeaderDesign (default: Light)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/uxap/ObjectPageHeaderContent","destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!type":"fn() -> sap.uxap.ObjectPageHeaderContent","!category":"function","!static":false},"setContentDesign":{"!description":"Sets a new value for property <code>contentDesign<\/code>.\n\nDetermines the design of the header - Light or Dark\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Light<\/code>.","!type":"fn(sContentDesign: sap.uxap.ObjectPageHeaderDesign) -> sap.uxap.ObjectPageHeaderContent","!category":"function","!static":false},"!description":"ObjectPageHeaderContent represents the dynamic part of an Object page header. May contain any control.\nUnlike the Object page header title, the Object page header content is part of the scrolling area of the Object page.\nThis enables it to hold any amount of information and still be usable on a mobile device.","insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.uxap.ObjectPageHeaderContent","!category":"function","!static":false},"!category":"class","!proto":"sap.ui.core.Control","getContentDesign":{"!description":"Gets current value of property <code>contentDesign<\/code>.\n\nDetermines the design of the header - Light or Dark\n\nDefault value is <code>Light<\/code>.","!type":"fn() -> sap.uxap.ObjectPageHeaderDesign","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.uxap.ObjectPageHeaderContent.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.uxap.ObjectPageSectionBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageSectionBase with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.ObjectPageSectionBase"},"sap.uxap.BlockBase":{"addMapping":{"!description":"Adds some mapping to the aggregation <code>mappings<\/code>.","!type":"fn(oMapping: sap.uxap.ModelMapping) -> sap.uxap.BlockBase","!category":"function","!static":false},"getColumnLayout":{"!description":"Gets current value of property <code>columnLayout<\/code>.\n\nDetermines on how columns the layout will be rendered.\nAllowed values are integers from 1 to 4 and \"auto\".\n\nDefault value is <code>auto<\/code>.","!type":"fn() -> sap.uxap.BlockBaseColumnLayout","!category":"function","!static":false},"insertMapping":{"!description":"Inserts a mapping into the aggregation <code>mappings<\/code>.","!type":"fn(oMapping: sap.uxap.ModelMapping, iIndex: Number) -> sap.uxap.BlockBase","!category":"function","!static":false},"!module":"sap/uxap/BlockBase","setSelectedView":{"!description":"Sets the associated <code>selectedView<\/code>.","!type":"fn(oSelectedView: sap.ui.core.Control) -> sap.uxap.BlockBase","!category":"function","!static":false},"removeMapping":{"!description":"Removes a mapping from the aggregation <code>mappings<\/code>.","!type":"fn(vMapping: Number | String | sap.uxap.ModelMapping) -> sap.uxap.ModelMapping","!category":"function","!static":false},"!category":"class","indexOfMapping":{"!description":"Checks for the provided <code>sap.uxap.ModelMapping<\/code> in the aggregation <code>mappings<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oMapping: sap.uxap.ModelMapping) -> Number","!category":"function","!static":false},"getFormAdjustment":{"!description":"Gets current value of property <code>formAdjustment<\/code>.\n\nDetermines if the block should automatically adjust its inner forms.\nAllowed values are \"BlockColumns\" and \"OneColumn\" and \"None\".\nIf the value is \"BlockColumns\", then the inner form will have as many columns as the colspan of its parent block.\nIf the value is \"OneColumn\", the inner form will have exactly one column, regardless the colspan of its parent block.\nIf the value is \"None\", no automatic adjustment of inner forms will be made and the form will keep its original column count.\n\nDefault value is <code>BlockColumns<\/code>.","!type":"fn() -> sap.uxap.BlockBaseFormAdjustment","!category":"function","!static":false},"getSelectedView":{"!description":"ID of the element which is the current target of the association <code>selectedView<\/code>, or <code>null<\/code>.","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.uxap.BlockBase with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"setColumnLayout":{"!description":"Set the column layout for this particular block.","!type":"fn(sLayout: String)","!category":"function","!static":false},"getMappings":{"!description":"Gets content of aggregation <code>mappings<\/code>.\n\nMap external UI5 model and internal Block model","!type":"fn() -> [sap.uxap.ModelMapping]","!category":"function","!static":false},"setVisible":{"!description":"Setter for the visibility of the block.","!type":"fn()","!category":"function","!static":false},"!constructorDescription":"Constructor for a new BlockBase.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMode mode} : string<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getColumnLayout columnLayout} : sap.uxap.BlockBaseColumnLayout (default: auto)<\/li>\n<li>{@link #getFormAdjustment formAdjustment} : sap.uxap.BlockBaseFormAdjustment (default: BlockColumns)<\/li>\n<li>{@link #getShowSubSectionMore showSubSectionMore} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getMappings mappings} : sap.uxap.ModelMapping[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setMode":{"!description":"Set the view mode for this particular block.","!type":"fn(sMode: String) -> *","!category":"function","!static":false},"destroyMappings":{"!description":"Destroys all the mappings in the aggregation <code>mappings<\/code>.","!type":"fn() -> sap.uxap.BlockBase","!category":"function","!static":false},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nDetermines the visibility of the block.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setFormAdjustment":{"!description":"Sets a new value for property <code>formAdjustment<\/code>.\n\nDetermines if the block should automatically adjust its inner forms.\nAllowed values are \"BlockColumns\" and \"OneColumn\" and \"None\".\nIf the value is \"BlockColumns\", then the inner form will have as many columns as the colspan of its parent block.\nIf the value is \"OneColumn\", the inner form will have exactly one column, regardless the colspan of its parent block.\nIf the value is \"None\", no automatic adjustment of inner forms will be made and the form will keep its original column count.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>BlockColumns<\/code>.","!type":"fn(sFormAdjustment: sap.uxap.BlockBaseFormAdjustment) -> sap.uxap.BlockBase","!category":"function","!static":false},"!description":"\nA block is the main element that will be displayed, mainly in an object page, but not necessarily\nonly there.\n\nA block is a control that use a XML view for storing its internal control tree.\nA block is a control that has modes and a view associated to each modes.\nAt rendering time, the view associated to the mode is rendered.\n\n<b>Note:<\/b> The control supports only XML views.\n\nAs any UI5 views, the XML view can have a controller which automatically comes a this.oParentBlock attribute (so that the controller can interacts with the block).\nIf the controller implements the onParentBlockModeChange method, this method will get called with the sMode parameter when the view is used or re-used by the block.","getMode":{"!description":"Gets current value of property <code>mode<\/code>.\n\nDetermines the mode of the block.\nWhen block is used inside ObjectPage this mode is inherited my the SubSection.\nThe mode of the block is changed when SubSection mode changes.","!type":"fn() -> String","!category":"function","!static":false},"getShowSubSectionMore":{"!description":"Gets current value of property <code>showSubSectionMore<\/code>.\n\nDetermines whether the show more button should be shown.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.uxap.BlockBase.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Control","removeAllMappings":{"!description":"Removes all the controls from the aggregation <code>mappings<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.uxap.ModelMapping]","!category":"function","!static":false}},"sap.uxap.ObjectPageSubSectionMode":{"!description":"Used by the ObjectPageLayout control to define which layout to use (either Collapsed or Expanded).","Collapsed":{"!description":"Collapsed mode of display of the ObjectPageLayout.","!type":"String","!category":"enum"},"!category":"static class","Expanded":{"!description":"Expanded mode of displaying the ObjectPageLayout.","!type":"String","!category":"enum"},"!module":"sap/uxap/library"},"sap.uxap.ModelMapping":{"extend":{"!description":"Creates a new subclass of class sap.uxap.ModelMapping with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"getExternalModelName":{"!description":"Gets current value of property <code>externalModelName<\/code>.\n\nDetermines the the external model name.","!type":"fn() -> String","!category":"function","!static":false},"!constructorDescription":"Constructor for a new ModelMapping.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getExternalModelName externalModelName} : string<\/li>\n<li>{@link #getInternalModelName internalModelName} : string (default: Model)<\/li>\n<li>{@link #getExternalPath externalPath} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/uxap/ModelMapping","getInternalModelName":{"!description":"Gets current value of property <code>internalModelName<\/code>.\n\nDetermines the the internal model name.\n\nDefault value is <code>Model<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"getExternalPath":{"!description":"Gets current value of property <code>externalPath<\/code>.\n\nDetermines the the external path.","!type":"fn() -> String","!category":"function","!static":false},"!description":"\nDefine the entity that will be passed to the ObjectPageLayout.","setExternalModelName":{"!description":"Sets a new value for property <code>externalModelName<\/code>.\n\nDetermines the the external model name.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sExternalModelName: String) -> sap.uxap.ModelMapping","!category":"function","!static":false},"!category":"class","setInternalModelName":{"!description":"Sets a new value for property <code>internalModelName<\/code>.\n\nDetermines the the internal model name.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Model<\/code>.","!type":"fn(sInternalModelName: String) -> sap.uxap.ModelMapping","!category":"function","!static":false},"setExternalPath":{"!description":"Sets a new value for property <code>externalPath<\/code>.\n\nDetermines the the external path.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sExternalPath: String) -> sap.uxap.ModelMapping","!category":"function","!static":false},"!proto":"sap.ui.core.Element","getMetadata":{"!description":"Returns a metadata object for class sap.uxap.ModelMapping.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.uxap.Importance":{"Medium":{"!description":"Medium importance of the content","!type":"String","!category":"enum"},"Low":{"!description":"Low importance of the content","!type":"String","!category":"enum"},"!description":"Used by the ObjectSectionBase control to define the importance of the content contained in it.","!category":"static class","High":{"!description":"High importance of the content","!type":"String","!category":"enum"},"!module":"sap/uxap/library"},"sap.uxap":{"showSeparatorBefore":{"!description":"If this property is set the control will display a separator before it.","!type":"Boolean","!category":"enum"},"autoAdjustWidth":{"!description":"Indicates whether the width of the input field is determined by the selected item's content.","!type":"Boolean","!category":"enum"},"ObjectPageSubSectionMode":"sap.uxap.ObjectPageSubSectionMode","useIconTabBar":{"!description":"Use sap.m.IconTabBar instead of the default Anchor bar","!type":"Boolean","!category":"enum"},"titleUppercase":{"!description":"Determines whether the Subsection title is displayed in upper case.","!type":"Boolean","!category":"enum"},"ObjectPageConfigurationMode":"sap.uxap.ObjectPageConfigurationMode","!module":"sap/uxap/library","useTwoColumnsForLargeScreen":{"!description":"Determines whether the to use two column layout for the L screen size.","!type":"Boolean","!category":"enum"},"externalModelName":{"!description":"Determines the the external model name.","!type":"String","!category":"enum"},"visibleL":{"!description":"If this property is set the control will be visible (or not) in a large sized layout.","!type":"Boolean","!category":"enum"},"visibleM":{"!description":"If this property is set the control will be visible (or not) in a medium sized layout.","!type":"Boolean","!category":"enum"},"ModelMapping":"sap.uxap.ModelMapping_obj","showEditHeaderButton":{"!description":"Determines whether an Edit button will be shown in Header Content.","!type":"Boolean","!category":"enum"},"showTitle":{"!description":"Determines whether to display the Section title or not.","!type":"Boolean","!category":"enum"},"ObjectPageHeaderLayoutData":"sap.uxap.ObjectPageHeaderLayoutData_obj","showTitleInHeaderContent":{"!description":"Determines whether the title, image, markers and selectTitleArrow are shown in the Header content area.","!type":"Boolean","!category":"enum"},"visibleS":{"!description":"If this property is set the control will be visible (or not) in a small sized layout.","!type":"Boolean","!category":"enum"},"isChildPage":{"!description":"Determines whether the page is a child page and renders it with a different design.\nChild pages have an additional (darker/lighter) stripe on the left side of their header content area.","!type":"Boolean","!category":"enum"},"textDirection":{"!description":"This property specifies the element's text directionality with enumerated options. By default, the control inherits text direction from the DOM.","!type":"sap.ui.core.TextDirection","!category":"enum"},"showAnchorBarPopover":{"!description":"Determines whether to show a Popover with Subsection links when clicking on Section links in the Anchor bar.","!type":"Boolean","!category":"enum"},"subSectionLayout":{"!description":"Determines whether Subsection titles are displayed on top or to the left of the Subsection content.","!type":"sap.uxap.ObjectPageSubSectionLayout","!category":"enum"},"flexEnabled":{"!description":"Specifies whether the object page enables flexibility features, such as hiding and adding sections.<br>\nFor more information about SAPUI5 flexibility, refer to the Developer Guide.","!type":"Boolean","!category":"enum"},"ObjectPageHeaderDesign":"sap.uxap.ObjectPageHeaderDesign","markLocked":{"!description":"Set the locked state of the objectPageHeader.","!type":"Boolean","!category":"enum"},"externalPath":{"!description":"Determines the the external path.","!type":"String","!category":"enum"},"ObjectPageHeaderActionButton":"sap.uxap.ObjectPageHeaderActionButton_obj","mode":{"!description":"A mode property that will be passed to the controls in the blocks and moreBlocks aggregations. Only relevant if these aggregations use Object page blocks.","!type":"sap.uxap.ObjectPageSubSectionMode","!category":"enum"},"BlockBaseColumnLayout":"sap.uxap.BlockBaseColumnLayout","isObjectSubtitleAlwaysVisible":{"!description":"Determines whether the subtitle should always be visible or visible only when the header is snapped.","!type":"Boolean","!category":"enum"},"showAnchorBar":{"!description":"Determines whether the Navigation bar (Anchor bar) is displayed.","!type":"Boolean","!category":"enum"},"title":{"!description":"Section Title","!type":"String","!category":"enum"},"showOnlyHighImportance":{"!description":"Determines whether sections and subsections with importance Low and Medium are hidden even on large screens.","!type":"Boolean","!category":"enum"},"showSeparatorAfter":{"!description":"If this property is set the control will display a separator after it.","!type":"Boolean","!category":"enum"},"!category":"namespace","Importance":"sap.uxap.Importance","iconFirst":{"!description":"If set to true (default), the display sequence is 1. icon 2. control text","!type":"Boolean","!category":"enum"},"ObjectPageLayout":"sap.uxap.ObjectPageLayout_obj","isObjectTitleAlwaysVisible":{"!description":"Determines whether the title should always be visible or visible only when the header is snapped.","!type":"Boolean","!category":"enum"},"columnLayout":{"!description":"Determines on how columns the layout will be rendered.\nAllowed values are integers from 1 to 4 and \"auto\".","!type":"sap.uxap.BlockBaseColumnLayout","!category":"enum"},"!description":"SAP UxAP","ObjectPageHeaderPictureShape":"sap.uxap.ObjectPageHeaderPictureShape","fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.","!type":"[String]","!category":"enum"},"design":{"!description":"Defines the toolbar design.\nNote: Design settings are theme-dependent. They also determine the default height of the toolbar.","!type":"sap.m.ToolbarDesign","!category":"enum"},"showPlaceholder":{"!description":"Enables support of a placeholder image in case no image is specified or the URL of the provided image is invalid.","!type":"Boolean","!category":"enum"},"objectImageAlt":{"!description":"The text to be used for the Alt and Tooltip attribute of the image, supplied via the objectImageURI property","!type":"String","!category":"enum"},"ObjectPageHeader":"sap.uxap.ObjectPageHeader_obj","visible":{"!description":"Invisible ObjectPageSectionBase are not rendered","!type":"Boolean","!category":"enum"},"objectSubtitle":{"!description":"The description of the object","!type":"String","!category":"enum"},"busy":{"!description":"Whether the control is currently in busy state.","!type":"Boolean","!category":"enum"},"type":{"!description":"Type of a button (e.g. Default, Accept, Reject, Back, etc.)","!type":"sap.m.ButtonType","!category":"enum"},"forceSelection":{"!description":"Indicates whether the selection is restricted to one of the items in the list.\n<b>Note:<\/b> We strongly recommend that you always set this property to <code>false<\/code> and bind\nthe <code>selectedKey<\/code> property to the desired value for better interoperability with data binding.","!type":"Boolean","!category":"enum"},"isObjectIconAlwaysVisible":{"!description":"Determines whether the icon should always be visible or visible only when the header is snapped.","!type":"Boolean","!category":"enum"},"ObjectPageHeaderContent":"sap.uxap.ObjectPageHeaderContent_obj","ObjectPageLazyLoader":"sap.uxap.ObjectPageLazyLoader_obj","selectedKey":{"!description":"Key of the selected item.\n\n<b>Note:<\/b> If duplicate keys exist, the first item matching the key is used.","!type":"String","!category":"enum"},"height":{"!description":"Determines the height of the ObjectPage.","!type":"sap.ui.core.CSSSize","!category":"enum"},"objectImageURI":{"!description":"The URL of the image, representing the business object","!type":"String","!category":"enum"},"maxWidth":{"!description":"Sets the maximum width of the control.\n\n<b>Note:<\/b> This property is ignored if the <code>autoAdjustWidth<\/code> property is set to <code>true<\/code>.","!type":"sap.ui.core.CSSSize","!category":"enum"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!type":"Number","!category":"enum"},"enabled":{"!description":"Boolean property to enable the control (default is true). Buttons that are disabled have other colors than enabled ones, depending on custom settings","!type":"Boolean","!category":"enum"},"markFlagged":{"!description":"Set the flagged state to true or false. The showMarkers property must be true for this property to take effect.","!type":"Boolean","!category":"enum"},"text":{"!description":"Button text","!type":"String","!category":"enum"},"iconDensityAware":{"!description":"By default, this is set to true but then one or more requests are sent trying to get the density perfect version of image if this version of image doesn't exist on the server.\n\nIf only one version of image is provided, set this value to false to avoid the attempt of fetching density perfect image.","!type":"Boolean","!category":"enum"},"upperCase":{"!description":"Determines whether the HierarchicalSelect items are displayed in upper case.","!type":"Boolean","!category":"enum"},"width":{"!description":"If this property is set the control will take the provided size.","!type":"sap.ui.core.CSSSize","!category":"enum"},"BlockBaseFormAdjustment":"sap.uxap.BlockBaseFormAdjustment","showHeaderContent":{"!description":"Determines the visibility of the Header content (headerContent aggregation).","!type":"Boolean","!category":"enum"},"hideText":{"!description":"Hide the button text when rendered into the headerTitle part of the ObjectPageLayout.\nThis is useful if you want to display icons only in the headerTitle part but still want to display text + icon in the actionSheet that appears when not enough space is available on the screen for displaying all actions.","!type":"Boolean","!category":"enum"},"importance":{"!description":"Determines whether the section will be hidden on low resolutions.","!type":"sap.uxap.Importance","!category":"enum"},"active":{"!description":"Indicates that the whole toolbar is clickable. The Press event is fired only if Active is set to true.\nNote: This property should be used when there are no interactive controls inside the toolbar and the toolbar itself is meant to be interactive.","!type":"Boolean","!category":"enum"},"objectImageDensityAware":{"!description":"The value of densityAware for the image, supplied via the objectImageURI property.\nSee sap.m.Image for more details on densityAware.","!type":"Boolean","!category":"enum"},"ObjectPageSection":"sap.uxap.ObjectPageSection_obj","BreadCrumbs":"sap.uxap.BreadCrumbs_obj","activeIcon":{"!description":"The source property of an alternative icon for the active (depressed) state of the button.\nBoth active and default icon properties should be defined and have the same type: image or icon font.\nIf the <code>icon<\/code> property is not set or has a different type, the active icon is not displayed.","!type":"sap.ui.core.URI","!category":"enum"},"hideIcon":{"!description":"Hide the button icon when rendered into the headerTitle part of the ObjectPageLayout.\nThis is useful if you want to display texts only in the headerTitle part but still want to display text + icon in the actionSheet that appears when not enough space is available on the screen for displaying all actions.","!type":"Boolean","!category":"enum"},"HierarchicalSelect":"sap.uxap.HierarchicalSelect_obj","ObjectPageSubSection":"sap.uxap.ObjectPageSubSection_obj","objectImageShape":{"!description":"Determines whether the picture should be displayed in a square or with a circle-shaped mask.","!type":"sap.uxap.ObjectPageHeaderPictureShape","!category":"enum"},"AnchorBar":"sap.uxap.AnchorBar_obj","showCurrentLocation":{"!description":"Sets the visibility of the current/last element in the BreadCrumbs path.","!type":"Boolean","!category":"enum"},"name":{"!description":"The name to be used in the HTML code (for example, for HTML forms that send data to the server via submit).","!type":"String","!category":"enum"},"showPopover":{"!description":"Determines whether to show a Popover with Subsection links when clicking on Section links in the Anchor bar.","!type":"Boolean","!category":"enum"},"BlockBase":"sap.uxap.BlockBase_obj","ObjectPageSubSectionLayout":"sap.uxap.ObjectPageSubSectionLayout","textAlign":{"!description":"Sets the horizontal alignment of the text within the input field.","!type":"sap.ui.core.TextAlign","!category":"enum"},"ObjectPageSectionBase":"sap.uxap.ObjectPageSectionBase_obj","showTitleSelector":{"!description":"When set to true, the selector arrow icon/image is shown and can be pressed.","!type":"Boolean","!category":"enum"},"icon":{"!description":"Icon to be displayed as graphical element within the button. This can be an image or an icon from the icon font.","!type":"sap.ui.core.URI","!category":"enum"},"showSubSectionMore":{"!description":"Determines whether the show more button should be shown.","!type":"Boolean","!category":"enum"},"showMarkers":{"!description":"Indicates if object page header title supports showing markers such as flagged and favorite.","!type":"Boolean","!category":"enum"},"contentDesign":{"!description":"Determines the design of the header - Light or Dark","!type":"sap.uxap.ObjectPageHeaderDesign","!category":"enum"},"formAdjustment":{"!description":"Determines if the block should automatically adjust its inner forms.\nAllowed values are \"BlockColumns\" and \"OneColumn\" and \"None\".\nIf the value is \"BlockColumns\", then the inner form will have as many columns as the colspan of its parent block.\nIf the value is \"OneColumn\", the inner form will have exactly one column, regardless the colspan of its parent block.\nIf the value is \"None\", no automatic adjustment of inner forms will be made and the form will keep its original column count.","!type":"sap.uxap.BlockBaseFormAdjustment","!category":"enum"},"headerDesign":{"!description":"Determines the design of the header - Light or Dark","!type":"sap.uxap.ObjectPageHeaderDesign","!category":"enum"},"objectTitle":{"!description":"The title of the object","!type":"String","!category":"enum"},"markChanges":{"!description":"Marks that there are unsaved changes in the objectPageHeader.\nThe markChanges state cannot be used together with the markLocked state.\nIf both are set to true, only the locked state will be displayed.","!type":"Boolean","!category":"enum"},"markFavorite":{"!description":"Set the favorite state to true or false. The showMarkers property must be true for this property to take effect.","!type":"Boolean","!category":"enum"},"selectedItemId":{"!description":"ID of the selected item.","!type":"String","!category":"enum"},"upperCaseAnchorBar":{"!description":"Determines whether the Anchor bar items are displayed in upper case.","!type":"Boolean","!category":"enum"},"internalModelName":{"!description":"Determines the the internal model name.","!type":"String","!category":"enum"},"alwaysShowContentHeader":{"!description":"Determines whether Header Content will always be expanded on desktop.","!type":"Boolean","!category":"enum"},"enableLazyLoading":{"!description":"Enable lazy loading for the Object page Subsections.","!type":"Boolean","!category":"enum"},"isActionAreaAlwaysVisible":{"!description":"Determines whether the action buttons should always be visible or visible only when the header is snapped.","!type":"Boolean","!category":"enum"}},"sap.uxap.BlockBaseFormAdjustment":{"!description":"Used by the BlockBase control to define if it should do automatic adjustment of its nested forms.","!category":"static class","None":{"!description":"No automatic adjustment of forms.","!type":"String","!category":"enum"},"!module":"sap/uxap/library","OneColumn":{"!description":"Any form within the block will be automatically adjusted to have only one column.","!type":"String","!category":"enum"},"BlockColumns":{"!description":"Any form within the block will be automatically adjusted to have as many columns as the colspan of its parent block.","!type":"String","!category":"enum"}},"sap.uxap.ObjectPageLayout":{"setShowAnchorBarPopover":{"!description":"Sets a new value for property <code>showAnchorBarPopover<\/code>.\n\nDetermines whether to show a Popover with Subsection links when clicking on Section links in the Anchor bar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowAnchorBarPopover: Boolean) -> sap.uxap.ObjectPageLayout","!category":"function","!static":false},"fireEditHeaderButtonPress":{"!description":"Fires event <code>editHeaderButtonPress<\/code> to attached listeners.","!type":"fn(mArguments?: Map) -> sap.uxap.ObjectPageLayout","!category":"function","!static":false},"setFlexEnabled":{"!description":"Sets a new value for property <code>flexEnabled<\/code>.\n\nSpecifies whether the object page enables flexibility features, such as hiding and adding sections.<br>\nFor more information about SAPUI5 flexibility, refer to the Developer Guide.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bFlexEnabled: Boolean) -> sap.uxap.ObjectPageLayout","!category":"function","!static":false},"setIsChildPage":{"!description":"Sets a new value for property <code>isChildPage<\/code>.\n\nDetermines whether the page is a child page and renders it with a different design.\nChild pages have an additional (darker/lighter) stripe on the left side of their header content area.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bIsChildPage: Boolean) -> sap.uxap.ObjectPageLayout","!category":"function","!static":false},"setShowEditHeaderButton":{"!description":"Sets a new value for property <code>showEditHeaderButton<\/code>.\n\nDetermines whether an Edit button will be shown in Header Content.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bShowEditHeaderButton: Boolean) -> sap.uxap.ObjectPageLayout","!category":"function","!static":false},"scrollToSection":{"!description":"Scrolls the Object page to the given Section.","!type":"fn(sId: String, iDuration: Number, iOffset: Number)","!category":"function","!static":false},"!module":"sap/uxap/ObjectPageLayout","detachEditHeaderButtonPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>editHeaderButtonPress<\/code> event of this <code>sap.uxap.ObjectPageLayout<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.uxap.ObjectPageLayout","!category":"function","!static":false},"removeSection":{"!description":"Removes a section from the aggregation <code>sections<\/code>.","!type":"fn(vSection: Number | String | sap.uxap.ObjectPageSection) -> sap.uxap.ObjectPageSection","!category":"function","!static":false},"getAlwaysShowContentHeader":{"!description":"Gets current value of property <code>alwaysShowContentHeader<\/code>.\n\nDetermines whether Header Content will always be expanded on desktop.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getSubSectionLayout":{"!description":"Gets current value of property <code>subSectionLayout<\/code>.\n\nDetermines whether Subsection titles are displayed on top or to the left of the Subsection content.\n\nDefault value is <code>TitleOnTop<\/code>.","!type":"fn() -> sap.uxap.ObjectPageSubSectionLayout","!category":"function","!static":false},"addHeaderContent":{"!description":"Adds some headerContent to the aggregation <code>headerContent<\/code>.","!type":"fn(oHeaderContent: sap.ui.core.Control) -> sap.uxap.ObjectPageLayout","!category":"function","!static":false},"setHeaderTitle":{"!description":"Sets the aggregated <code>headerTitle<\/code>.","!type":"fn(oHeaderTitle: sap.uxap.ObjectPageHeader) -> sap.uxap.ObjectPageLayout","!category":"function","!static":false},"getShowAnchorBar":{"!description":"Gets current value of property <code>showAnchorBar<\/code>.\n\nDetermines whether the Navigation bar (Anchor bar) is displayed.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getShowHeaderContent":{"!description":"Gets current value of property <code>showHeaderContent<\/code>.\n\nDetermines the visibility of the Header content (headerContent aggregation).\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setUseTwoColumnsForLargeScreen":{"!description":"Sets a new value for property <code>useTwoColumnsForLargeScreen<\/code>.\n\nDetermines whether the to use two column layout for the L screen size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bUseTwoColumnsForLargeScreen: Boolean) -> sap.uxap.ObjectPageLayout","!category":"function","!static":false},"getShowEditHeaderButton":{"!description":"Gets current value of property <code>showEditHeaderButton<\/code>.\n\nDetermines whether an Edit button will be shown in Header Content.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setSubSectionLayout":{"!description":"Sets a new value for property <code>subSectionLayout<\/code>.\n\nDetermines whether Subsection titles are displayed on top or to the left of the Subsection content.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>TitleOnTop<\/code>.","!type":"fn(sSubSectionLayout: sap.uxap.ObjectPageSubSectionLayout) -> sap.uxap.ObjectPageLayout","!category":"function","!static":false},"!constructorDescription":"Constructor for a new ObjectPageLayout.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowAnchorBar showAnchorBar} : boolean (default: true)<\/li>\n<li>{@link #getShowAnchorBarPopover showAnchorBarPopover} : boolean (default: true)<\/li>\n<li>{@link #getUpperCaseAnchorBar upperCaseAnchorBar} : boolean (default: true)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getEnableLazyLoading enableLazyLoading} : boolean (default: false)<\/li>\n<li>{@link #getSubSectionLayout subSectionLayout} : sap.uxap.ObjectPageSubSectionLayout (default: TitleOnTop)<\/li>\n<li>{@link #getUseIconTabBar useIconTabBar} : boolean (default: false)<\/li>\n<li>{@link #getShowHeaderContent showHeaderContent} : boolean (default: true)<\/li>\n<li>{@link #getUseTwoColumnsForLargeScreen useTwoColumnsForLargeScreen} : boolean (default: false)<\/li>\n<li>{@link #getShowTitleInHeaderContent showTitleInHeaderContent} : boolean (default: false)<\/li>\n<li>{@link #getShowOnlyHighImportance showOnlyHighImportance} : boolean (default: false)<\/li>\n<li>{@link #getIsChildPage isChildPage} : boolean (default: false)<\/li>\n<li>{@link #getAlwaysShowContentHeader alwaysShowContentHeader} : boolean (default: false)<\/li>\n<li>{@link #getShowEditHeaderButton showEditHeaderButton} : boolean (default: false)<\/li>\n<li>{@link #getFlexEnabled flexEnabled} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSections sections} : sap.uxap.ObjectPageSection[] (default)<\/li>\n<li>{@link #getHeaderTitle headerTitle} : sap.uxap.ObjectPageHeader<\/li>\n<li>{@link #getHeaderContent headerContent} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:toggleAnchorBar toggleAnchorBar} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:editHeaderButtonPress editHeaderButtonPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:tabSelect tabSelect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","fireTabSelect":{"!description":"Fires event <code>tabSelect<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>section<\/code> of type <code>sap.uxap.ObjectPageSection<\/code>The selected section object.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.uxap.ObjectPageLayout","!category":"function","!static":false},"destroyHeaderTitle":{"!description":"Destroys the headerTitle in the aggregation <code>headerTitle<\/code>.","!type":"fn() -> sap.uxap.ObjectPageLayout","!category":"function","!static":false},"getFlexEnabled":{"!description":"Gets current value of property <code>flexEnabled<\/code>.\n\nSpecifies whether the object page enables flexibility features, such as hiding and adding sections.<br>\nFor more information about SAPUI5 flexibility, refer to the Developer Guide.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"attachTabSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>tabSelect<\/code> event of this <code>sap.uxap.ObjectPageLayout<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.uxap.ObjectPageLayout<\/code> itself.\n\nThe event is fired when the selected tab changes.\n<b>Note:<\/b> Event is fired only when IconTabBar is used for navigation.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.uxap.ObjectPageLayout","!category":"function","!static":false},"getSections":{"!description":"Gets content of aggregation <code>sections<\/code>.\n\nThe sections that make up the Object page content area.","!type":"fn() -> [sap.uxap.ObjectPageSection]","!category":"function","!static":false},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nDetermines the height of the ObjectPage.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.uxap.ObjectPageLayout","!category":"function","!static":false},"removeHeaderContent":{"!description":"Removes a headerContent from the aggregation <code>headerContent<\/code>.","!type":"fn(vHeaderContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"detachTabSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>tabSelect<\/code> event of this <code>sap.uxap.ObjectPageLayout<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.uxap.ObjectPageLayout","!category":"function","!static":false},"removeAllSections":{"!description":"Removes all the controls from the aggregation <code>sections<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.uxap.ObjectPageSection]","!category":"function","!static":false},"setShowTitleInHeaderContent":{"!description":"Sets a new value for property <code>showTitleInHeaderContent<\/code>.\n\nDetermines whether the title, image, markers and selectTitleArrow are shown in the Header content area.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bShowTitleInHeaderContent: Boolean) -> sap.uxap.ObjectPageLayout","!category":"function","!static":false},"!proto":"sap.ui.core.Control","getShowTitleInHeaderContent":{"!description":"Gets current value of property <code>showTitleInHeaderContent<\/code>.\n\nDetermines whether the title, image, markers and selectTitleArrow are shown in the Header content area.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"insertSection":{"!description":"Inserts a section into the aggregation <code>sections<\/code>.","!type":"fn(oSection: sap.uxap.ObjectPageSection, iIndex: Number) -> sap.uxap.ObjectPageLayout","!category":"function","!static":false},"getShowOnlyHighImportance":{"!description":"Gets current value of property <code>showOnlyHighImportance<\/code>.\n\nDetermines whether sections and subsections with importance Low and Medium are hidden even on large screens.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setShowOnlyHighImportance":{"!description":"Sets a new value for property <code>showOnlyHighImportance<\/code>.\n\nDetermines whether sections and subsections with importance Low and Medium are hidden even on large screens.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bShowOnlyHighImportance: Boolean) -> sap.uxap.ObjectPageLayout","!category":"function","!static":false},"attachEditHeaderButtonPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>editHeaderButtonPress<\/code> event of this <code>sap.uxap.ObjectPageLayout<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.uxap.ObjectPageLayout<\/code> itself.\n\nThe event is fired when the Edit Header button is pressed","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.uxap.ObjectPageLayout","!category":"function","!static":false},"getHeaderTitle":{"!description":"Gets content of aggregation <code>headerTitle<\/code>.\n\nObject page header title - the upper, always static, part of the Object page header.","!type":"fn() -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nDetermines the height of the ObjectPage.\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getShowAnchorBarPopover":{"!description":"Gets current value of property <code>showAnchorBarPopover<\/code>.\n\nDetermines whether to show a Popover with Subsection links when clicking on Section links in the Anchor bar.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"indexOfSection":{"!description":"Checks for the provided <code>sap.uxap.ObjectPageSection<\/code> in the aggregation <code>sections<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oSection: sap.uxap.ObjectPageSection) -> Number","!category":"function","!static":false},"setEnableLazyLoading":{"!description":"Sets a new value for property <code>enableLazyLoading<\/code>.\n\nEnable lazy loading for the Object page Subsections.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bEnableLazyLoading: Boolean) -> sap.uxap.ObjectPageLayout","!category":"function","!static":false},"insertHeaderContent":{"!description":"Inserts a headerContent into the aggregation <code>headerContent<\/code>.","!type":"fn(oHeaderContent: sap.ui.core.Control, iIndex: Number) -> sap.uxap.ObjectPageLayout","!category":"function","!static":false},"destroyHeaderContent":{"!description":"Destroys all the headerContent in the aggregation <code>headerContent<\/code>.","!type":"fn() -> sap.uxap.ObjectPageLayout","!category":"function","!static":false},"addSection":{"!description":"Adds some section to the aggregation <code>sections<\/code>.","!type":"fn(oSection: sap.uxap.ObjectPageSection) -> sap.uxap.ObjectPageLayout","!category":"function","!static":false},"!category":"class","destroySections":{"!description":"Destroys all the sections in the aggregation <code>sections<\/code>.","!type":"fn() -> sap.uxap.ObjectPageLayout","!category":"function","!static":false},"getUseTwoColumnsForLargeScreen":{"!description":"Gets current value of property <code>useTwoColumnsForLargeScreen<\/code>.\n\nDetermines whether the to use two column layout for the L screen size.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setAlwaysShowContentHeader":{"!description":"Sets a new value for property <code>alwaysShowContentHeader<\/code>.\n\nDetermines whether Header Content will always be expanded on desktop.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bAlwaysShowContentHeader: Boolean) -> sap.uxap.ObjectPageLayout","!category":"function","!static":false},"fireToggleAnchorBar":{"!description":"Fires event <code>toggleAnchorBar<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>fixed<\/code> of type <code>boolean<\/code>False indicates that the Anchor bar has just detached from the Header and became part of the scrolling area. True means that the Anchor bar has just snapped to the Header.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.uxap.ObjectPageLayout","!category":"function","!static":false},"getUseIconTabBar":{"!description":"Gets current value of property <code>useIconTabBar<\/code>.\n\nUse sap.m.IconTabBar instead of the default Anchor bar\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"getEnableLazyLoading":{"!description":"Gets current value of property <code>enableLazyLoading<\/code>.\n\nEnable lazy loading for the Object page Subsections.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"detachToggleAnchorBar":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>toggleAnchorBar<\/code> event of this <code>sap.uxap.ObjectPageLayout<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.uxap.ObjectPageLayout","!category":"function","!static":false},"removeAllHeaderContent":{"!description":"Removes all the controls from the aggregation <code>headerContent<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"setShowAnchorBar":{"!description":"Sets a new value for property <code>showAnchorBar<\/code>.\n\nDetermines whether the Navigation bar (Anchor bar) is displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowAnchorBar: Boolean) -> sap.uxap.ObjectPageLayout","!category":"function","!static":false},"getIsChildPage":{"!description":"Gets current value of property <code>isChildPage<\/code>.\n\nDetermines whether the page is a child page and renders it with a different design.\nChild pages have an additional (darker/lighter) stripe on the left side of their header content area.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getScrollingSectionId":{"!description":"Returns the UI5 ID of the Section that is currently being scrolled.","!type":"fn() -> String","!category":"function","!static":false},"!description":"An ObjectPageLayout is the layout control, used to put together all parts of an Object page - Header, Navigation bar and Sections/Subsections.","indexOfHeaderContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>headerContent<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oHeaderContent: sap.ui.core.Control) -> Number","!category":"function","!static":false},"attachToggleAnchorBar":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>toggleAnchorBar<\/code> event of this <code>sap.uxap.ObjectPageLayout<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.uxap.ObjectPageLayout<\/code> itself.\n\nThe event is fired when the Anchor bar is switched from moving to fixed or the other way round.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.uxap.ObjectPageLayout","!category":"function","!static":false},"setUpperCaseAnchorBar":{"!description":"Sets a new value for property <code>upperCaseAnchorBar<\/code>.\n\nDetermines whether the Anchor bar items are displayed in upper case.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bUpperCaseAnchorBar: Boolean) -> sap.uxap.ObjectPageLayout","!category":"function","!static":false},"getUpperCaseAnchorBar":{"!description":"Gets current value of property <code>upperCaseAnchorBar<\/code>.\n\nDetermines whether the Anchor bar items are displayed in upper case.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getScrollDelegate":{"!description":"Returns a sap.ui.core.delegate.ScrollEnablement object used to handle scrolling","!type":"fn() -> Object","!category":"function","!static":false},"setBusy":{"!description":"Overwrite setBusy, because the busyIndicator does not cover the header title,\nbecause the header title has z-index: 2 in order to appear on top of the content","!type":"fn(bBusy: Boolean)","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.uxap.ObjectPageLayout.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.uxap.ObjectPageHeaderActionButton":{"setImportance":{"!description":"Sets a new value for property <code>importance<\/code>.\n\nDetermines the order in which the button overflows.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>library.Importance.High<\/code>.","!type":"fn(sImportance: sap.uxap.Importance) -> sap.uxap.ObjectPageHeaderActionButton","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageHeaderActionButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Button.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!constructorDescription":"Constructor for a new ObjectPageHeaderActionButton.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHideText hideText} : boolean (default: true)<\/li>\n<li>{@link #getHideIcon hideIcon} : boolean (default: false)<\/li>\n<li>{@link #getImportance importance} : sap.uxap.Importance (default: library.Importance.High)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Button#constructor sap.m.Button}\ncan be used as well.","!module":"sap/uxap/ObjectPageHeaderActionButton","setHideIcon":{"!description":"Sets a new value for property <code>hideIcon<\/code>.\n\nHide the button icon when rendered into the headerTitle part of the ObjectPageLayout.\nThis is useful if you want to display texts only in the headerTitle part but still want to display text + icon in the actionSheet that appears when not enough space is available on the screen for displaying all actions.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bHideIcon: Boolean) -> sap.uxap.ObjectPageHeaderActionButton","!category":"function","!static":false},"getImportance":{"!description":"Gets current value of property <code>importance<\/code>.\n\nDetermines the order in which the button overflows.\n\nDefault value is <code>library.Importance.High<\/code>.","!type":"fn() -> sap.uxap.Importance","!category":"function","!static":false},"!description":"\nButton that can be used in the ObjectPageHeader action aggregation.","!category":"class","setHideText":{"!description":"Sets a new value for property <code>hideText<\/code>.\n\nHide the button text when rendered into the headerTitle part of the ObjectPageLayout.\nThis is useful if you want to display icons only in the headerTitle part but still want to display text + icon in the actionSheet that appears when not enough space is available on the screen for displaying all actions.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bHideText: Boolean) -> sap.uxap.ObjectPageHeaderActionButton","!category":"function","!static":false},"getHideText":{"!description":"Gets current value of property <code>hideText<\/code>.\n\nHide the button text when rendered into the headerTitle part of the ObjectPageLayout.\nThis is useful if you want to display icons only in the headerTitle part but still want to display text + icon in the actionSheet that appears when not enough space is available on the screen for displaying all actions.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getHideIcon":{"!description":"Gets current value of property <code>hideIcon<\/code>.\n\nHide the button icon when rendered into the headerTitle part of the ObjectPageLayout.\nThis is useful if you want to display texts only in the headerTitle part but still want to display text + icon in the actionSheet that appears when not enough space is available on the screen for displaying all actions.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!proto":"sap.m.Button","getMetadata":{"!description":"Returns a metadata object for class sap.uxap.ObjectPageHeaderActionButton.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.uxap.ObjectPageHeader":{"removeAllBreadCrumbsLinks":{"!description":"Removes all the controls from the aggregation <code>breadCrumbsLinks<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.m.Link]","!category":"function","!static":false},"detachTitleSelectorPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>titleSelectorPress<\/code> event of this <code>sap.uxap.ObjectPageHeader<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"getMarkFavorite":{"!description":"Gets current value of property <code>markFavorite<\/code>.\n\nSet the favorite state to true or false. The showMarkers property must be true for this property to take effect.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"destroyBreadCrumbsLinks":{"!description":"Destroys all the breadCrumbsLinks in the aggregation <code>breadCrumbsLinks<\/code>.","!type":"fn() -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"!module":"sap/uxap/ObjectPageHeader","setHeaderDesign":{"!description":"Sets a new value for property <code>headerDesign<\/code>.\n\nDetermines the design of the header - Light or Dark\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Light<\/code>.","!type":"fn(sHeaderDesign: sap.uxap.ObjectPageHeaderDesign) -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"getMarkChanges":{"!description":"Gets current value of property <code>markChanges<\/code>.\n\nMarks that there are unsaved changes in the objectPageHeader.\nThe markChanges state cannot be used together with the markLocked state.\nIf both are set to true, only the locked state will be displayed.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getIsObjectSubtitleAlwaysVisible":{"!description":"Gets current value of property <code>isObjectSubtitleAlwaysVisible<\/code>.\n\nDetermines whether the subtitle should always be visible or visible only when the header is snapped.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setObjectImageAlt":{"!description":"Sets a new value for property <code>objectImageAlt<\/code>.\n\nThe text to be used for the Alt and Tooltip attribute of the image, supplied via the objectImageURI property\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!type":"fn(sObjectImageAlt: String) -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"setIsObjectSubtitleAlwaysVisible":{"!description":"Sets a new value for property <code>isObjectSubtitleAlwaysVisible<\/code>.\n\nDetermines whether the subtitle should always be visible or visible only when the header is snapped.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bIsObjectSubtitleAlwaysVisible: Boolean) -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"getObjectImageDensityAware":{"!description":"Gets current value of property <code>objectImageDensityAware<\/code>.\n\nThe value of densityAware for the image, supplied via the objectImageURI property.\nSee sap.m.Image for more details on densityAware.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getMarkFlagged":{"!description":"Gets current value of property <code>markFlagged<\/code>.\n\nSet the flagged state to true or false. The showMarkers property must be true for this property to take effect.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setObjectImageShape":{"!description":"Sets a new value for property <code>objectImageShape<\/code>.\n\nDetermines whether the picture should be displayed in a square or with a circle-shaped mask.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Square<\/code>.","!type":"fn(sObjectImageShape: sap.uxap.ObjectPageHeaderPictureShape) -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"destroyNavigationBar":{"!description":"Destroys the navigationBar in the aggregation <code>navigationBar<\/code>.","!type":"fn() -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"getIsActionAreaAlwaysVisible":{"!description":"Gets current value of property <code>isActionAreaAlwaysVisible<\/code>.\n\nDetermines whether the action buttons should always be visible or visible only when the header is snapped.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getActions":{"!description":"Gets content of aggregation <code>actions<\/code>.\n\nList of actions that will be displayed in the header.\nYou can use ObjectPageHeaderActionButton controls to achieve a different visual representation of the action buttons in the action bar and the action sheet (overflow menu).\nYou can use ObjectPageHeaderLayoutData to display a visual separator.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"!constructorDescription":"Constructor for a new ObjectPageHeader.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getObjectImageURI objectImageURI} : string<\/li>\n<li>{@link #getObjectImageAlt objectImageAlt} : string (default: )<\/li>\n<li>{@link #getObjectImageDensityAware objectImageDensityAware} : boolean (default: false)<\/li>\n<li>{@link #getObjectTitle objectTitle} : string<\/li>\n<li>{@link #getObjectSubtitle objectSubtitle} : string<\/li>\n<li>{@link #getObjectImageShape objectImageShape} : sap.uxap.ObjectPageHeaderPictureShape (default: Square)<\/li>\n<li>{@link #getIsObjectIconAlwaysVisible isObjectIconAlwaysVisible} : boolean (default: false)<\/li>\n<li>{@link #getIsObjectTitleAlwaysVisible isObjectTitleAlwaysVisible} : boolean (default: true)<\/li>\n<li>{@link #getIsObjectSubtitleAlwaysVisible isObjectSubtitleAlwaysVisible} : boolean (default: true)<\/li>\n<li>{@link #getIsActionAreaAlwaysVisible isActionAreaAlwaysVisible} : boolean (default: true)<\/li>\n<li>{@link #getHeaderDesign headerDesign} : sap.uxap.ObjectPageHeaderDesign (default: Light)<\/li>\n<li>{@link #getShowTitleSelector showTitleSelector} : boolean (default: false)<\/li>\n<li>{@link #getMarkFavorite markFavorite} : boolean (default: false)<\/li>\n<li>{@link #getMarkFlagged markFlagged} : boolean (default: false)<\/li>\n<li>{@link #getShowMarkers showMarkers} : boolean (default: false)<\/li>\n<li>{@link #getMarkLocked markLocked} : boolean (default: false)<\/li>\n<li>{@link #getShowPlaceholder showPlaceholder} : boolean (default: false)<\/li>\n<li>{@link #getMarkChanges markChanges} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getBreadCrumbsLinks breadCrumbsLinks} : sap.m.Link[]<\/li>\n<li>{@link #getNavigationBar navigationBar} : sap.m.Bar<\/li>\n<li>{@link #getActions actions} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getSideContentButton sideContentButton} : sap.m.Button<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:titleSelectorPress titleSelectorPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:markLockedPress markLockedPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:markChangesPress markChangesPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","insertAction":{"!description":"Inserts a action into the aggregation <code>actions<\/code>.","!type":"fn(oAction: sap.ui.core.Control, iIndex: Number) -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"detachMarkLockedPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>markLockedPress<\/code> event of this <code>sap.uxap.ObjectPageHeader<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"setShowTitleSelector":{"!description":"Sets a new value for property <code>showTitleSelector<\/code>.\n\nWhen set to true, the selector arrow icon/image is shown and can be pressed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bShowTitleSelector: Boolean) -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"destroyActions":{"!description":"Destroys all the actions in the aggregation <code>actions<\/code>.","!type":"fn() -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"setMarkChanges":{"!description":"Sets a new value for property <code>markChanges<\/code>.\n\nMarks that there are unsaved changes in the objectPageHeader.\nThe markChanges state cannot be used together with the markLocked state.\nIf both are set to true, only the locked state will be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bMarkChanges: Boolean) -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"setIsObjectIconAlwaysVisible":{"!description":"Sets a new value for property <code>isObjectIconAlwaysVisible<\/code>.\n\nDetermines whether the icon should always be visible or visible only when the header is snapped.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bIsObjectIconAlwaysVisible: Boolean) -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"detachMarkChangesPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>markChangesPress<\/code> event of this <code>sap.uxap.ObjectPageHeader<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"!proto":"sap.ui.core.Control","setMarkLocked":{"!description":"Sets a new value for property <code>markLocked<\/code>.\n\nSet the locked state of the objectPageHeader.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bMarkLocked: Boolean) -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"setObjectImageDensityAware":{"!description":"Sets a new value for property <code>objectImageDensityAware<\/code>.\n\nThe value of densityAware for the image, supplied via the objectImageURI property.\nSee sap.m.Image for more details on densityAware.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bObjectImageDensityAware: Boolean) -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"getBreadCrumbsLinks":{"!description":"Gets content of aggregation <code>breadCrumbsLinks<\/code>.\n\nA list of all the active link elements in the BreadCrumbs control.","!type":"fn() -> [sap.m.Link]","!category":"function","!static":false},"destroySideContentButton":{"!description":"Destroys the sideContentButton in the aggregation <code>sideContentButton<\/code>.","!type":"fn() -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"setMarkFavorite":{"!description":"Sets a new value for property <code>markFavorite<\/code>.\n\nSet the favorite state to true or false. The showMarkers property must be true for this property to take effect.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bMarkFavorite: Boolean) -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"getSideContentButton":{"!description":"Gets content of aggregation <code>sideContentButton<\/code>.\n\nA button that is used for opening the side content of the page or some additional content.","!type":"fn() -> sap.m.Button","!category":"function","!static":false},"setObjectImageURI":{"!description":"Sets a new value for property <code>objectImageURI<\/code>.\n\nThe URL of the image, representing the business object\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sObjectImageURI: String) -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"getHeaderDesign":{"!description":"Gets current value of property <code>headerDesign<\/code>.\n\nDetermines the design of the header - Light or Dark\n\nDefault value is <code>Light<\/code>.","!type":"fn() -> sap.uxap.ObjectPageHeaderDesign","!category":"function","!static":false},"removeAllActions":{"!description":"Removes all the controls from the aggregation <code>actions<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"removeBreadCrumbLink":{"!description":"Removes a breadCrumbLink from the aggregation <code>breadCrumbsLinks<\/code>.","!type":"fn(vBreadCrumbLink: Number | String | sap.m.Link) -> sap.m.Link","!category":"function","!static":false},"!category":"class","getObjectImageAlt":{"!description":"Gets current value of property <code>objectImageAlt<\/code>.\n\nThe text to be used for the Alt and Tooltip attribute of the image, supplied via the objectImageURI property\n\nDefault value is <code><\/code>.","!type":"fn() -> String","!category":"function","!static":false},"setIsObjectTitleAlwaysVisible":{"!description":"Sets a new value for property <code>isObjectTitleAlwaysVisible<\/code>.\n\nDetermines whether the title should always be visible or visible only when the header is snapped.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bIsObjectTitleAlwaysVisible: Boolean) -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"setIsActionAreaAlwaysVisible":{"!description":"Sets a new value for property <code>isActionAreaAlwaysVisible<\/code>.\n\nDetermines whether the action buttons should always be visible or visible only when the header is snapped.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bIsActionAreaAlwaysVisible: Boolean) -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"indexOfAction":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>actions<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oAction: sap.ui.core.Control) -> Number","!category":"function","!static":false},"fireMarkChangesPress":{"!description":"Fires event <code>markChangesPress<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>domRef<\/code> of type <code>string<\/code>DOM reference of the changed item's icon to be used for positioning.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"getObjectImageShape":{"!description":"Gets current value of property <code>objectImageShape<\/code>.\n\nDetermines whether the picture should be displayed in a square or with a circle-shaped mask.\n\nDefault value is <code>Square<\/code>.","!type":"fn() -> sap.uxap.ObjectPageHeaderPictureShape","!category":"function","!static":false},"getObjectTitle":{"!description":"Gets current value of property <code>objectTitle<\/code>.\n\nThe title of the object","!type":"fn() -> String","!category":"function","!static":false},"setMarkFlagged":{"!description":"Sets a new value for property <code>markFlagged<\/code>.\n\nSet the flagged state to true or false. The showMarkers property must be true for this property to take effect.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bMarkFlagged: Boolean) -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"getShowTitleSelector":{"!description":"Gets current value of property <code>showTitleSelector<\/code>.\n\nWhen set to true, the selector arrow icon/image is shown and can be pressed.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageHeader with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"attachMarkChangesPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>markChangesPress<\/code> event of this <code>sap.uxap.ObjectPageHeader<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.uxap.ObjectPageHeader<\/code> itself.\n\nThe event is fired when the unsaved changes button is pressed","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"setSideContentButton":{"!description":"Sets the aggregated <code>sideContentButton<\/code>.","!type":"fn(oSideContentButton: sap.m.Button) -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"attachTitleSelectorPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>titleSelectorPress<\/code> event of this <code>sap.uxap.ObjectPageHeader<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.uxap.ObjectPageHeader<\/code> itself.\n\nThe event is fired when the objectPage header title selector (down-arrow) is pressed","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"getObjectImageURI":{"!description":"Gets current value of property <code>objectImageURI<\/code>.\n\nThe URL of the image, representing the business object","!type":"fn() -> String","!category":"function","!static":false},"attachMarkLockedPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>markLockedPress<\/code> event of this <code>sap.uxap.ObjectPageHeader<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.uxap.ObjectPageHeader<\/code> itself.\n\nThe event is fired when the Locked button is pressed","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"getNavigationBar":{"!description":"Gets content of aggregation <code>navigationBar<\/code>.\n\nAn instance of sap.m.Bar to be embedded in the header","!type":"fn() -> sap.m.Bar","!category":"function","!static":false},"insertBreadCrumbLink":{"!description":"Inserts a breadCrumbLink into the aggregation <code>breadCrumbsLinks<\/code>.","!type":"fn(oBreadCrumbLink: sap.m.Link, iIndex: Number) -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"!description":"ObjectPageHeader represents the static part of an Object page header.\nTypically used to display the basic information about a business object, such as title/description/picture, as well as a list of common actions.","addBreadCrumbLink":{"!description":"Adds some breadCrumbLink to the aggregation <code>breadCrumbsLinks<\/code>.","!type":"fn(oBreadCrumbLink: sap.m.Link) -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"indexOfBreadCrumbLink":{"!description":"Checks for the provided <code>sap.m.Link<\/code> in the aggregation <code>breadCrumbsLinks<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oBreadCrumbLink: sap.m.Link) -> Number","!category":"function","!static":false},"getShowMarkers":{"!description":"Gets current value of property <code>showMarkers<\/code>.\n\nIndicates if object page header title supports showing markers such as flagged and favorite.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"fireMarkLockedPress":{"!description":"Fires event <code>markLockedPress<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>domRef<\/code> of type <code>string<\/code>DOM reference of the lock item's icon to be used for positioning.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"getIsObjectTitleAlwaysVisible":{"!description":"Gets current value of property <code>isObjectTitleAlwaysVisible<\/code>.\n\nDetermines whether the title should always be visible or visible only when the header is snapped.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setShowPlaceholder":{"!description":"Sets a new value for property <code>showPlaceholder<\/code>.\n\nEnables support of a placeholder image in case no image is specified or the URL of the provided image is invalid.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bShowPlaceholder: Boolean) -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"fireTitleSelectorPress":{"!description":"Fires event <code>titleSelectorPress<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>domRef<\/code> of type <code>string<\/code>DOM reference of the title item's icon to be used for positioning.<\/li>\n<\/ul>","!type":"fn(mArguments?: Map) -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"setShowMarkers":{"!description":"Sets a new value for property <code>showMarkers<\/code>.\n\nIndicates if object page header title supports showing markers such as flagged and favorite.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bShowMarkers: Boolean) -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"addAction":{"!description":"Adds some action to the aggregation <code>actions<\/code>.","!type":"fn(oAction: sap.ui.core.Control) -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"getMarkLocked":{"!description":"Gets current value of property <code>markLocked<\/code>.\n\nSet the locked state of the objectPageHeader.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getIsObjectIconAlwaysVisible":{"!description":"Gets current value of property <code>isObjectIconAlwaysVisible<\/code>.\n\nDetermines whether the icon should always be visible or visible only when the header is snapped.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getObjectSubtitle":{"!description":"Gets current value of property <code>objectSubtitle<\/code>.\n\nThe description of the object","!type":"fn() -> String","!category":"function","!static":false},"removeAction":{"!description":"Removes a action from the aggregation <code>actions<\/code>.","!type":"fn(vAction: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"setObjectSubtitle":{"!description":"Sets a new value for property <code>objectSubtitle<\/code>.\n\nThe description of the object\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sObjectSubtitle: String) -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.uxap.ObjectPageHeader.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"getShowPlaceholder":{"!description":"Gets current value of property <code>showPlaceholder<\/code>.\n\nEnables support of a placeholder image in case no image is specified or the URL of the provided image is invalid.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false}},"sap.uxap.ObjectPageSubSection_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageSubSection with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.uxap.ObjectPageSectionBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.ObjectPageSubSection"},"sap.uxap.ObjectPageHeaderDesign":{"!description":"Used by the ObjectPageHeader control to define which design to use.","Dark":{"!description":"Dark theme for the ObjectPageHeader.","!type":"String","!category":"enum"},"!category":"static class","Light":{"!description":"Light theme for the ObjectPageHeader.","!type":"String","!category":"enum"},"!module":"sap/uxap/library"},"sap.uxap.ObjectPageConfigurationMode":{"!description":"Used by the sap.uxap.component.Component how to initialize the ObjectPageLayout sections and subsections.","JsonModel":{"!description":"Determines the JSON model","!type":"String","!category":"enum"},"JsonURL":{"!description":"Determines the JSON url","!type":"String","!category":"enum"},"!category":"static class","!module":"sap/uxap/library"},"sap.uxap.ObjectPageLazyLoader":{"addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control) -> sap.uxap.ObjectPageLazyLoader","!category":"function","!static":false},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nControls to be displayed after this element is unstashed","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageLazyLoader with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.ui.core.Control) -> Number","!category":"function","!static":false},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","!static":false},"!constructorDescription":"Constructor for a new ObjectPageLazyLoader.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/uxap/ObjectPageLazyLoader","destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!type":"fn() -> sap.uxap.ObjectPageLazyLoader","!category":"function","!static":false},"!description":"ObjectPageLazyLoader is a helper element that enables a \"stashed\"-based lazy loading approach for the content of\nthe sap.uxap.ObjectPageSubSection control. ObjectPageLazyLoader is intended to be used in a declarative way only\n(e.g. in a view) with the \"stashed\" property set to \"true\", and is recommended to be used only once per\nsubsection as its sole content.\n\nObjectPageLazyLoader utilizes UI5's stashing mechanism and is a lightweight alternative to the native block-based\nLazy Loading of the Object Page. Wrapping the content of a subsection in an ObjectPageLazyLoader with \"stashed=true\"\nwill make the said content unstash automatically as the user scrolls.\n\nNote: Subsections are required to have an ID when used with ObjectPageLazyLoader.","insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.uxap.ObjectPageLazyLoader","!category":"function","!static":false},"!category":"class","!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.uxap.ObjectPageLazyLoader.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.uxap.ObjectPageHeaderActionButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageHeaderActionButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Button.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.ObjectPageHeaderActionButton"},"sap.uxap.BlockBaseColumnLayout":{"!description":"Used by the BlockBase control to define how many columns should it be assigned by the objectPageSubSection.\n    The allowed values can be auto (subsection assigned a number of columns based on the parent objectPageLayout subsectionLayout property), 1, 2 or 3\n    (This may not be a valid value for some subSectionLayout, for example asking for 3 columns in a 2 column layout would raise warnings).","!category":"namespace","!module":"sap/uxap/library"},"sap":{"sap":"sap","uxap":"sap.uxap","!category":"namespace"},"sap.uxap.BreadCrumbs":{"removeAllLinks":{"!description":"Removes all the controls from the aggregation <code>links<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.m.Link]","!category":"function","!static":false},"destroyLinks":{"!description":"Destroys all the links in the aggregation <code>links<\/code>.","!type":"fn() -> sap.uxap.BreadCrumbs","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.uxap.BreadCrumbs with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"indexOfLink":{"!description":"Checks for the provided <code>sap.m.Link<\/code> in the aggregation <code>links<\/code>.\nand returns its index if found or -1 otherwise.","!type":"fn(oLink: sap.m.Link) -> Number","!category":"function","!static":false},"destroyCurrentLocation":{"!description":"Destroys the currentLocation in the aggregation <code>currentLocation<\/code>.","!type":"fn() -> sap.uxap.BreadCrumbs","!category":"function","!static":false},"getShowCurrentLocation":{"!description":"Gets current value of property <code>showCurrentLocation<\/code>.\n\nSets the visibility of the current/last element in the BreadCrumbs path.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!constructorDescription":"Constructor for a new BreadCrumbs.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowCurrentLocation showCurrentLocation} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getLinks links} : sap.m.Link[] (default)<\/li>\n<li>{@link #getCurrentLocation currentLocation} : sap.m.Text<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/uxap/BreadCrumbs","getLinks":{"!description":"Gets content of aggregation <code>links<\/code>.\n\nA list of all the active link elements in the BreadCrumbs control.","!type":"fn() -> [sap.m.Link]","!category":"function","!static":false},"!description":"\nThe BreadCrumbs control represents the navigation steps up to the current location in the application and allows\nthe user to quickly navigate to a previous location on the path that got him to the current location.\nIt has two main modes of operation. One is a trail of links followed by separators (when there's enough space\nfor the control to fit on one line), and the other is a dropdown list with the links (when the trail of links\nwouldn't fit on one line).","setShowCurrentLocation":{"!description":"Sets a new value for property <code>showCurrentLocation<\/code>.\n\nSets the visibility of the current/last element in the BreadCrumbs path.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowCurrentLocation: Boolean) -> sap.uxap.BreadCrumbs","!category":"function","!static":false},"addLink":{"!description":"Adds some link to the aggregation <code>links<\/code>.","!type":"fn(oLink: sap.m.Link) -> sap.uxap.BreadCrumbs","!category":"function","!static":false},"setCurrentLocation":{"!description":"Sets the aggregated <code>currentLocation<\/code>.","!type":"fn(oCurrentLocation: sap.m.Text) -> sap.uxap.BreadCrumbs","!category":"function","!static":false},"removeLink":{"!description":"Removes a link from the aggregation <code>links<\/code>.","!type":"fn(vLink: Number | String | sap.m.Link) -> sap.m.Link","!category":"function","!static":false},"!category":"class","getCurrentLocation":{"!description":"Gets content of aggregation <code>currentLocation<\/code>.\n\nThe current/last element in the BreadCrumbs path.","!type":"fn() -> sap.m.Text","!category":"function","!static":false},"insertLink":{"!description":"Inserts a link into the aggregation <code>links<\/code>.","!type":"fn(oLink: sap.m.Link, iIndex: Number) -> sap.uxap.BreadCrumbs","!category":"function","!static":false},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.uxap.BreadCrumbs.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.uxap.ModelMapping_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.ModelMapping with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.ModelMapping"},"sap.uxap.AnchorBar":{"getSelectedButton":{"!description":"ID of the element which is the current target of the association <code>selectedButton<\/code>, or <code>null<\/code>.","!type":"fn() -> sap.m.Button","!category":"function","!static":false},"setShowPopover":{"!description":"Sets a new value for property <code>showPopover<\/code>.\n\nDetermines whether to show a Popover with Subsection links when clicking on Section links in the Anchor bar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowPopover: Boolean) -> sap.uxap.AnchorBar","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.uxap.AnchorBar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Toolbar.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"getShowPopover":{"!description":"Gets current value of property <code>showPopover<\/code>.\n\nDetermines whether to show a Popover with Subsection links when clicking on Section links in the Anchor bar.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!constructorDescription":"Constructor for a new AnchorBar.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowPopover showPopover} : boolean (default: true)<\/li>\n<li>{@link #getUpperCase upperCase} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Toolbar#constructor sap.m.Toolbar}\ncan be used as well.","scrollToSection":{"!description":"Scroll to a specific Section.","!type":"fn(sId: String, duration: Number)","!category":"function","!static":false},"!module":"sap/uxap/AnchorBar","setUpperCase":{"!description":"Sets a new value for property <code>upperCase<\/code>.\n\nDetermines whether the Anchor bar items are displayed in upper case.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bUpperCase: Boolean) -> sap.uxap.AnchorBar","!category":"function","!static":false},"!description":"Anchor bar is the navigation bar of an Object page. Its purpose is to provide links to all Sections and Subsections. Takes the form of a Select on phone.","getUpperCase":{"!description":"Gets current value of property <code>upperCase<\/code>.\n\nDetermines whether the Anchor bar items are displayed in upper case.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!category":"class","getScrollDelegate":{"!description":"Returns a sap.ui.core.delegate.ScrollEnablement object used to handle scrolling.","!type":"fn() -> Object","!category":"function","!static":false},"setSelectedButton":{"!description":"Sets the associated <code>selectedButton<\/code>.","!type":"fn(oSelectedButton: sap.m.Button) -> sap.uxap.AnchorBar","!category":"function","!static":false},"!proto":"sap.m.Toolbar","getMetadata":{"!description":"Returns a metadata object for class sap.uxap.AnchorBar.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.uxap.ObjectPageHeader_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageHeader with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.ObjectPageHeader"},"sap.uxap.ObjectPageLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageLayout with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.ObjectPageLayout"},"sap.uxap.BreadCrumbs_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.BreadCrumbs with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.BreadCrumbs"},"sap.uxap.ObjectPageSection_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageSection with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.uxap.ObjectPageSectionBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.ObjectPageSection"},"sap.uxap.ObjectPageSectionBase":{"setImportance":{"!description":"Sets a new value for property <code>importance<\/code>.\n\nDetermines whether the section will be hidden on low resolutions.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>library.Importance.High<\/code>.","!type":"fn(sImportance: sap.uxap.Importance) -> sap.uxap.ObjectPageSectionBase","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageSectionBase with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"setVisible":{"!description":"Sets a new value for property <code>visible<\/code>.\n\nInvisible ObjectPageSectionBase are not rendered\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bVisible: Boolean) -> sap.uxap.ObjectPageSectionBase","!category":"function","!static":false},"connectToModels":{"!description":"Explicitly ask to connect to the UI5 model tree","!type":"fn()","!category":"function","!static":false},"setCustomAnchorBarButton":{"!description":"Sets the aggregated <code>customAnchorBarButton<\/code>.","!type":"fn(oCustomAnchorBarButton: sap.m.Button) -> sap.uxap.ObjectPageSectionBase","!category":"function","!static":false},"!constructorDescription":"Constructor for a new ObjectPageSectionBase.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getImportance importance} : sap.uxap.Importance (default: library.Importance.High)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getCustomAnchorBarButton customAnchorBarButton} : sap.m.Button<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/uxap/ObjectPageSectionBase","getImportance":{"!description":"Gets current value of property <code>importance<\/code>.\n\nDetermines whether the section will be hidden on low resolutions.\n\nDefault value is <code>library.Importance.High<\/code>.","!type":"fn() -> sap.uxap.Importance","!category":"function","!static":false},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nInvisible ObjectPageSectionBase are not rendered\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!description":"An abstract container for object page sections and subSections","getCustomAnchorBarButton":{"!description":"Gets content of aggregation <code>customAnchorBarButton<\/code>.\n\nThe custom button that will provide a link to the section in the ObjectPageLayout anchor bar.\nThis button will be used as a custom template to be into the ObjectPageLayout anchorBar area, therefore property changes happening on this button template after the first rendering won't affect the actual button copy used in the anchorBar.\n\nIf you want to change some of the button properties, you would need to bind them to a model.","!type":"fn() -> sap.m.Button","!category":"function","!static":false},"setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nSection Title\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitle: String) -> sap.uxap.ObjectPageSectionBase","!category":"function","!static":false},"!category":"class","destroyCustomAnchorBarButton":{"!description":"Destroys the customAnchorBarButton in the aggregation <code>customAnchorBarButton<\/code>.","!type":"fn() -> sap.uxap.ObjectPageSectionBase","!category":"function","!static":false},"getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nSection Title","!type":"fn() -> String","!category":"function","!static":false},"!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.uxap.ObjectPageSectionBase.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.uxap.ObjectPageHeaderLayoutData_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageHeaderLayoutData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.LayoutData.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.ObjectPageHeaderLayoutData"}},"!name":"sap.uxap","!version":"1.10.0"}